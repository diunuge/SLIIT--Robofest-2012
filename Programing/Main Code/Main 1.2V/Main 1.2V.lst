;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/10/2012 2:14:43 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EFA7  	GOTO        1870
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x001C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x001E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x0020	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x0022	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x0024	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x0026	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x002A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x002E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x0030	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x0032	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x0036	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x003A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x003C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x003E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x0040	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x0042	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x0044	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x0046	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x0048	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x004A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x004E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x0050	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x0052	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x0056	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x005A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x005E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x0062	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x0066	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x006A	0x0012      	RETURN      0
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x006C	0x50CB      	MOVF        PR2, 0 
0x006E	0x0F01      	ADDLW       1
0x0070	0x6E00      	MOVWF       R0 
0x0072	0x6A01      	CLRF        R1 
0x0074	0x0E00      	MOVLW       0
0x0076	0x2201      	ADDWFC      R1, 1 
0x0078	0xF004C104  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E05      	MOVWF       R5 
0x0080	0xDFCD      	RCALL       _Mul_16x16_U
0x0082	0x0E06      	MOVLW       6
0x0084	0x6E02      	MOVWF       R2 
0x0086	0xF004C000  	MOVFF       R0, R4
0x008A	0xF005C001  	MOVFF       R1, R5
0x008E	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty4:
0x0090	0xE005      	BZ          L__PWM1_Set_Duty5
0x0092	0x3205      	RRCF        R5, 1 
0x0094	0x3204      	RRCF        R4, 1 
0x0096	0x9E05      	BCF         R5, 7 
0x0098	0x0FFF      	ADDLW       255
0x009A	0xD7FA      	BRA         L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,48 :: 		
0x009C	0x0E04      	MOVLW       4
0x009E	0x6E01      	MOVWF       R1 
0x00A0	0xF000C004  	MOVFF       R4, R0
0x00A4	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty6:
0x00A6	0xE004      	BZ          L__PWM1_Set_Duty7
0x00A8	0x3600      	RLCF        R0, 1 
0x00AA	0x9000      	BCF         R0, 0 
0x00AC	0x0FFF      	ADDLW       255
0x00AE	0xD7FB      	BRA         L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x00B0	0x0E30      	MOVLW       48
0x00B2	0x1400      	ANDWF       R0, 0 
0x00B4	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x00B6	0xF000C004  	MOVFF       R4, R0
0x00BA	0xF001C005  	MOVFF       R5, R1
0x00BE	0x3201      	RRCF        R1, 1 
0x00C0	0x3200      	RRCF        R0, 1 
0x00C2	0x9E01      	BCF         R1, 7 
0x00C4	0x3201      	RRCF        R1, 1 
0x00C6	0x3200      	RRCF        R0, 1 
0x00C8	0x9E01      	BCF         R1, 7 
0x00CA	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x00CE	0x0E0F      	MOVLW       15
0x00D0	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x00D2	0x5003      	MOVF        R3, 0 
0x00D4	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
0x00D6	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x00D8	0x50CB      	MOVF        PR2, 0 
0x00DA	0x0F01      	ADDLW       1
0x00DC	0x6E00      	MOVWF       R0 
0x00DE	0x6A01      	CLRF        R1 
0x00E0	0x0E00      	MOVLW       0
0x00E2	0x2201      	ADDWFC      R1, 1 
0x00E4	0xF004C104  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x00E8	0x0E00      	MOVLW       0
0x00EA	0x6E05      	MOVWF       R5 
0x00EC	0xDF97      	RCALL       _Mul_16x16_U
0x00EE	0x0E06      	MOVLW       6
0x00F0	0x6E02      	MOVWF       R2 
0x00F2	0xF004C000  	MOVFF       R0, R4
0x00F6	0xF005C001  	MOVFF       R1, R5
0x00FA	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty0:
0x00FC	0xE005      	BZ          L__PWM2_Set_Duty1
0x00FE	0x3205      	RRCF        R5, 1 
0x0100	0x3204      	RRCF        R4, 1 
0x0102	0x9E05      	BCF         R5, 7 
0x0104	0x0FFF      	ADDLW       255
0x0106	0xD7FA      	BRA         L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x0108	0x0E04      	MOVLW       4
0x010A	0x6E01      	MOVWF       R1 
0x010C	0xF000C004  	MOVFF       R4, R0
0x0110	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty2:
0x0112	0xE004      	BZ          L__PWM2_Set_Duty3
0x0114	0x3600      	RLCF        R0, 1 
0x0116	0x9000      	BCF         R0, 0 
0x0118	0x0FFF      	ADDLW       255
0x011A	0xD7FB      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x011C	0x0E30      	MOVLW       48
0x011E	0x1400      	ANDWF       R0, 0 
0x0120	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x0122	0xF000C004  	MOVFF       R4, R0
0x0126	0xF001C005  	MOVFF       R5, R1
0x012A	0x3201      	RRCF        R1, 1 
0x012C	0x3200      	RRCF        R0, 1 
0x012E	0x9E01      	BCF         R1, 7 
0x0130	0x3201      	RRCF        R1, 1 
0x0132	0x3200      	RRCF        R0, 1 
0x0134	0x9E01      	BCF         R1, 7 
0x0136	0xFFBBC000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x013A	0x0E0F      	MOVLW       15
0x013C	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x013E	0x5003      	MOVF        R3, 0 
0x0140	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
0x0142	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0144	0xB2AC      	BTFSC       TXSTA, 1 
0x0146	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0148	0x0000      	NOP
0x014A	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x014C	0xFFADC104  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
0x0150	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0152	0x0101      	MOVLB       1
0x0154	0x6B03      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0156	0xFFE9C100  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x015A	0xFFEAC101  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x015E	0xF102CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0162	0x5102      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0164	0x0A00      	XORLW       0
0x0166	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x0168	0xF104C102  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x016C	0xDFEB      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x016E	0x0101      	MOVLB       1
0x0170	0x2B03      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0172	0x5103      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0174	0x2500      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0176	0x6EE9      	MOVWF       FSR0L 
0x0178	0x0E00      	MOVLW       0
0x017A	0x2101      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x017C	0x6EEA      	MOVWF       FSR0H 
0x017E	0xF102CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0182	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
0x0184	0x0012      	RETURN      0
; end of _UART1_Write_Text
_motorLeft_foward:
;motion.h,36 :: 		void motorLeft_foward(int pwm){
;motion.h,37 :: 		Motor_Left_Forward = 1;
0x0186	0x8483      	BSF         PORTD, 2 
;motion.h,38 :: 		Motor_Left_Reverse = 0;
0x0188	0x9683      	BCF         PORTD, 3 
;motion.h,39 :: 		PWM2_Set_Duty(pwm);
0x018A	0xF104C100  	MOVFF       FARG_motorLeft_foward_pwm, FARG_PWM2_Set_Duty_new_duty
0x018E	0xDFA4      	RCALL       _PWM2_Set_Duty
;motion.h,40 :: 		}
0x0190	0x0012      	RETURN      0
; end of _motorLeft_foward
_motorLeft_stop:
;motion.h,60 :: 		void motorLeft_stop(){
;motion.h,61 :: 		Motor_Left_Forward = 1;
0x0192	0x8483      	BSF         PORTD, 2 
;motion.h,62 :: 		Motor_Left_Reverse = 1;
0x0194	0x8683      	BSF         PORTD, 3 
;motion.h,63 :: 		}
0x0196	0x0012      	RETURN      0
; end of _motorLeft_stop
_motorRight_stop:
;motion.h,65 :: 		void motorRight_stop(){
;motion.h,66 :: 		Motor_Right_Forward = 1;
0x0198	0x8882      	BSF         PORTC, 4 
;motion.h,67 :: 		Motor_Right_Reverse = 1;
0x019A	0x8A82      	BSF         PORTC, 5 
;motion.h,68 :: 		}
0x019C	0x0012      	RETURN      0
; end of _motorRight_stop
_motorRight_reverse:
;motion.h,54 :: 		void motorRight_reverse(int pwm){
;motion.h,55 :: 		Motor_Right_Forward = 0;
0x019E	0x9882      	BCF         PORTC, 4 
;motion.h,56 :: 		Motor_Right_Reverse = 1;
0x01A0	0x8A82      	BSF         PORTC, 5 
;motion.h,57 :: 		PWM1_Set_Duty(pwm);
0x01A2	0xF104C100  	MOVFF       FARG_motorRight_reverse_pwm, FARG_PWM1_Set_Duty_new_duty
0x01A6	0xDF62      	RCALL       _PWM1_Set_Duty
;motion.h,58 :: 		}
0x01A8	0x0012      	RETURN      0
; end of _motorRight_reverse
_motorRight_foward:
;motion.h,42 :: 		void motorRight_foward(int pwm){
;motion.h,43 :: 		Motor_Right_Forward = 1;
0x01AA	0x8882      	BSF         PORTC, 4 
;motion.h,44 :: 		Motor_Right_Reverse = 0;
0x01AC	0x9A82      	BCF         PORTC, 5 
;motion.h,45 :: 		PWM1_Set_Duty(pwm);
0x01AE	0xF104C100  	MOVFF       FARG_motorRight_foward_pwm, FARG_PWM1_Set_Duty_new_duty
0x01B2	0xDF5C      	RCALL       _PWM1_Set_Duty
;motion.h,46 :: 		}
0x01B4	0x0012      	RETURN      0
; end of _motorRight_foward
_motorLeft_reverse:
;motion.h,48 :: 		void motorLeft_reverse(int pwm){
;motion.h,49 :: 		Motor_Left_Forward = 0;
0x01B6	0x9483      	BCF         PORTD, 2 
;motion.h,50 :: 		Motor_Left_Reverse = 1;
0x01B8	0x8683      	BSF         PORTD, 3 
;motion.h,51 :: 		PWM2_Set_Duty(pwm);
0x01BA	0xF104C100  	MOVFF       FARG_motorLeft_reverse_pwm, FARG_PWM2_Set_Duty_new_duty
0x01BE	0xDF8C      	RCALL       _PWM2_Set_Duty
;motion.h,52 :: 		}
0x01C0	0x0012      	RETURN      0
; end of _motorLeft_reverse
_moveForward:
;motion.h,70 :: 		void moveForward(int pwmLeft, int pwmRight){
;motion.h,71 :: 		motorLeft_foward(pwmLeft);
0x01C2	0xF100C0FC  	MOVFF       FARG_moveForward_pwmLeft, FARG_motorLeft_foward_pwm
0x01C6	0xF101C0FD  	MOVFF       FARG_moveForward_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x01CA	0xDFDD      	RCALL       _motorLeft_foward
;motion.h,72 :: 		motorRight_foward(pwmRight);
0x01CC	0xF100C0FE  	MOVFF       FARG_moveForward_pwmRight, FARG_motorRight_foward_pwm
0x01D0	0xF101C0FF  	MOVFF       FARG_moveForward_pwmRight+1, FARG_motorRight_foward_pwm+1
0x01D4	0xDFEA      	RCALL       _motorRight_foward
;motion.h,73 :: 		}
0x01D6	0x0012      	RETURN      0
; end of _moveForward
_rotateAntiClockwise:
;motion.h,90 :: 		void rotateAntiClockwise(int pwm){
;motion.h,91 :: 		motorLeft_reverse(pwm);
0x01D8	0xF100C0FC  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorLeft_reverse_pwm
0x01DC	0xF101C0FD  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorLeft_reverse_pwm+1
0x01E0	0xDFEA      	RCALL       _motorLeft_reverse
;motion.h,92 :: 		motorRight_foward(pwm);
0x01E2	0xF100C0FC  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorRight_foward_pwm
0x01E6	0xF101C0FD  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorRight_foward_pwm+1
0x01EA	0xDFDF      	RCALL       _motorRight_foward
;motion.h,93 :: 		}
0x01EC	0x0012      	RETURN      0
; end of _rotateAntiClockwise
_turnRight:
;motion.h,75 :: 		void turnRight(int pwmLeft){
;motion.h,76 :: 		motorLeft_foward(pwmLeft);
0x01EE	0xF100C0FC  	MOVFF       FARG_turnRight_pwmLeft, FARG_motorLeft_foward_pwm
0x01F2	0xF101C0FD  	MOVFF       FARG_turnRight_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x01F6	0xDFC7      	RCALL       _motorLeft_foward
;motion.h,77 :: 		motorRight_stop();
0x01F8	0xDFCF      	RCALL       _motorRight_stop
;motion.h,78 :: 		}
0x01FA	0x0012      	RETURN      0
; end of _turnRight
_sendSensorStatus:
;debug.h,12 :: 		void sendSensorStatus(){
;debug.h,13 :: 		if( Sensor1 == 1){
0x01FC	0xA881      	BTFSS       PORTB, 4 
0x01FE	0xD00B      	BRA         L_sendSensorStatus3
;debug.h,14 :: 		debugText = "1";
0x0200	0x0E8C      	MOVLW       ?lstr3_Main_321.2V
0x0202	0x0100      	MOVLB       0
0x0204	0x6F8A      	MOVWF       _debugText, 1
0x0206	0x0E00      	MOVLW       hi_addr(?lstr3_Main_321.2V)
0x0208	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,15 :: 		UART1_Write_Text(debugText);
0x020A	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x020E	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0212	0xDF9F      	RCALL       _UART1_Write_Text
;debug.h,16 :: 		}
0x0214	0xD00C      	BRA         L_sendSensorStatus4
L_sendSensorStatus3:
;debug.h,17 :: 		else if( Sensor1 == 0){
0x0216	0xB881      	BTFSC       PORTB, 4 
0x0218	0xD00A      	BRA         L_sendSensorStatus5
;debug.h,18 :: 		debugText = "0";
0x021A	0x0EB7      	MOVLW       ?lstr4_Main_321.2V
0x021C	0x0100      	MOVLB       0
0x021E	0x6F8A      	MOVWF       _debugText, 1
0x0220	0x0E00      	MOVLW       hi_addr(?lstr4_Main_321.2V)
0x0222	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,19 :: 		UART1_Write_Text(debugText);
0x0224	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0228	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x022C	0xDF92      	RCALL       _UART1_Write_Text
;debug.h,20 :: 		}
L_sendSensorStatus5:
L_sendSensorStatus4:
;debug.h,22 :: 		if( Sensor2 == 1){
0x022E	0xA681      	BTFSS       PORTB, 3 
0x0230	0xD00B      	BRA         L_sendSensorStatus6
;debug.h,23 :: 		debugText = "1";
0x0232	0x0EB5      	MOVLW       ?lstr5_Main_321.2V
0x0234	0x0100      	MOVLB       0
0x0236	0x6F8A      	MOVWF       _debugText, 1
0x0238	0x0E00      	MOVLW       hi_addr(?lstr5_Main_321.2V)
0x023A	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,24 :: 		UART1_Write_Text(debugText);
0x023C	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0240	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0244	0xDF86      	RCALL       _UART1_Write_Text
;debug.h,25 :: 		}
0x0246	0xD00C      	BRA         L_sendSensorStatus7
L_sendSensorStatus6:
;debug.h,26 :: 		else if( Sensor2 == 0){
0x0248	0xB681      	BTFSC       PORTB, 3 
0x024A	0xD00A      	BRA         L_sendSensorStatus8
;debug.h,27 :: 		debugText = "0";
0x024C	0x0EBB      	MOVLW       ?lstr6_Main_321.2V
0x024E	0x0100      	MOVLB       0
0x0250	0x6F8A      	MOVWF       _debugText, 1
0x0252	0x0E00      	MOVLW       hi_addr(?lstr6_Main_321.2V)
0x0254	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,28 :: 		UART1_Write_Text(debugText);
0x0256	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x025A	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x025E	0xDF79      	RCALL       _UART1_Write_Text
;debug.h,29 :: 		}
L_sendSensorStatus8:
L_sendSensorStatus7:
;debug.h,31 :: 		if( Sensor3 == 1){
0x0260	0xA883      	BTFSS       PORTD, 4 
0x0262	0xD00B      	BRA         L_sendSensorStatus9
;debug.h,32 :: 		debugText = "1";
0x0264	0x0EB9      	MOVLW       ?lstr7_Main_321.2V
0x0266	0x0100      	MOVLB       0
0x0268	0x6F8A      	MOVWF       _debugText, 1
0x026A	0x0E00      	MOVLW       hi_addr(?lstr7_Main_321.2V)
0x026C	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,33 :: 		UART1_Write_Text(debugText);
0x026E	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0272	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0276	0xDF6D      	RCALL       _UART1_Write_Text
;debug.h,34 :: 		}
0x0278	0xD00C      	BRA         L_sendSensorStatus10
L_sendSensorStatus9:
;debug.h,35 :: 		else if( Sensor3 == 0){
0x027A	0xB883      	BTFSC       PORTD, 4 
0x027C	0xD00A      	BRA         L_sendSensorStatus11
;debug.h,36 :: 		debugText = "0";
0x027E	0x0EB3      	MOVLW       ?lstr8_Main_321.2V
0x0280	0x0100      	MOVLB       0
0x0282	0x6F8A      	MOVWF       _debugText, 1
0x0284	0x0E00      	MOVLW       hi_addr(?lstr8_Main_321.2V)
0x0286	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,37 :: 		UART1_Write_Text(debugText);
0x0288	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x028C	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0290	0xDF60      	RCALL       _UART1_Write_Text
;debug.h,38 :: 		}
L_sendSensorStatus11:
L_sendSensorStatus10:
;debug.h,40 :: 		if( Sensor4 == 1){
0x0292	0xAA83      	BTFSS       PORTD, 5 
0x0294	0xD00B      	BRA         L_sendSensorStatus12
;debug.h,41 :: 		debugText = "1";
0x0296	0x0EC9      	MOVLW       ?lstr9_Main_321.2V
0x0298	0x0100      	MOVLB       0
0x029A	0x6F8A      	MOVWF       _debugText, 1
0x029C	0x0E00      	MOVLW       hi_addr(?lstr9_Main_321.2V)
0x029E	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,42 :: 		UART1_Write_Text(debugText);
0x02A0	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02A4	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02A8	0xDF54      	RCALL       _UART1_Write_Text
;debug.h,43 :: 		}
0x02AA	0xD00C      	BRA         L_sendSensorStatus13
L_sendSensorStatus12:
;debug.h,44 :: 		else if( Sensor4 == 0){
0x02AC	0xBA83      	BTFSC       PORTD, 5 
0x02AE	0xD00A      	BRA         L_sendSensorStatus14
;debug.h,45 :: 		debugText = "0";
0x02B0	0x0EC1      	MOVLW       ?lstr10_Main_321.2V
0x02B2	0x0100      	MOVLB       0
0x02B4	0x6F8A      	MOVWF       _debugText, 1
0x02B6	0x0E00      	MOVLW       hi_addr(?lstr10_Main_321.2V)
0x02B8	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,46 :: 		UART1_Write_Text(debugText);
0x02BA	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02BE	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02C2	0xDF47      	RCALL       _UART1_Write_Text
;debug.h,47 :: 		}
L_sendSensorStatus14:
L_sendSensorStatus13:
;debug.h,49 :: 		if( Sensor5 == 1){
0x02C4	0xAC83      	BTFSS       PORTD, 6 
0x02C6	0xD00B      	BRA         L_sendSensorStatus15
;debug.h,50 :: 		debugText = "1";
0x02C8	0x0EBF      	MOVLW       ?lstr11_Main_321.2V
0x02CA	0x0100      	MOVLB       0
0x02CC	0x6F8A      	MOVWF       _debugText, 1
0x02CE	0x0E00      	MOVLW       hi_addr(?lstr11_Main_321.2V)
0x02D0	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,51 :: 		UART1_Write_Text(debugText);
0x02D2	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02D6	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02DA	0xDF3B      	RCALL       _UART1_Write_Text
;debug.h,52 :: 		}
0x02DC	0xD00C      	BRA         L_sendSensorStatus16
L_sendSensorStatus15:
;debug.h,53 :: 		else if( Sensor5 == 0){
0x02DE	0xBC83      	BTFSC       PORTD, 6 
0x02E0	0xD00A      	BRA         L_sendSensorStatus17
;debug.h,54 :: 		debugText = "0";
0x02E2	0x0EBD      	MOVLW       ?lstr12_Main_321.2V
0x02E4	0x0100      	MOVLB       0
0x02E6	0x6F8A      	MOVWF       _debugText, 1
0x02E8	0x0E00      	MOVLW       hi_addr(?lstr12_Main_321.2V)
0x02EA	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,55 :: 		UART1_Write_Text(debugText);
0x02EC	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02F0	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02F4	0xDF2E      	RCALL       _UART1_Write_Text
;debug.h,56 :: 		}
L_sendSensorStatus17:
L_sendSensorStatus16:
;debug.h,58 :: 		if( Sensor6 == 1){
0x02F6	0xAE83      	BTFSS       PORTD, 7 
0x02F8	0xD00B      	BRA         L_sendSensorStatus18
;debug.h,59 :: 		debugText = "1";
0x02FA	0x0EC7      	MOVLW       ?lstr13_Main_321.2V
0x02FC	0x0100      	MOVLB       0
0x02FE	0x6F8A      	MOVWF       _debugText, 1
0x0300	0x0E00      	MOVLW       hi_addr(?lstr13_Main_321.2V)
0x0302	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,60 :: 		UART1_Write_Text(debugText);
0x0304	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0308	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x030C	0xDF22      	RCALL       _UART1_Write_Text
;debug.h,61 :: 		}
0x030E	0xD00C      	BRA         L_sendSensorStatus19
L_sendSensorStatus18:
;debug.h,62 :: 		else if( Sensor6 == 0){
0x0310	0xBE83      	BTFSC       PORTD, 7 
0x0312	0xD00A      	BRA         L_sendSensorStatus20
;debug.h,63 :: 		debugText = "0";
0x0314	0x0EC5      	MOVLW       ?lstr14_Main_321.2V
0x0316	0x0100      	MOVLB       0
0x0318	0x6F8A      	MOVWF       _debugText, 1
0x031A	0x0E00      	MOVLW       hi_addr(?lstr14_Main_321.2V)
0x031C	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,64 :: 		UART1_Write_Text(debugText);
0x031E	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0322	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0326	0xDF15      	RCALL       _UART1_Write_Text
;debug.h,65 :: 		}
L_sendSensorStatus20:
L_sendSensorStatus19:
;debug.h,67 :: 		if( Sensor7 == 1){
0x0328	0xA481      	BTFSS       PORTB, 2 
0x032A	0xD00B      	BRA         L_sendSensorStatus21
;debug.h,68 :: 		debugText = "1";
0x032C	0x0EC3      	MOVLW       ?lstr15_Main_321.2V
0x032E	0x0100      	MOVLB       0
0x0330	0x6F8A      	MOVWF       _debugText, 1
0x0332	0x0E00      	MOVLW       hi_addr(?lstr15_Main_321.2V)
0x0334	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,69 :: 		UART1_Write_Text(debugText);
0x0336	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x033A	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x033E	0xDF09      	RCALL       _UART1_Write_Text
;debug.h,70 :: 		}
0x0340	0xD00C      	BRA         L_sendSensorStatus22
L_sendSensorStatus21:
;debug.h,71 :: 		else if( Sensor7 == 0){
0x0342	0xB481      	BTFSC       PORTB, 2 
0x0344	0xD00A      	BRA         L_sendSensorStatus23
;debug.h,72 :: 		debugText = "0";
0x0346	0x0E19      	MOVLW       ?lstr16_Main_321.2V
0x0348	0x0100      	MOVLB       0
0x034A	0x6F8A      	MOVWF       _debugText, 1
0x034C	0x0E00      	MOVLW       hi_addr(?lstr16_Main_321.2V)
0x034E	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,73 :: 		UART1_Write_Text(debugText);
0x0350	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0354	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0358	0xDEFC      	RCALL       _UART1_Write_Text
;debug.h,74 :: 		}
L_sendSensorStatus23:
L_sendSensorStatus22:
;debug.h,76 :: 		if( Sensor8 == 1){
0x035A	0xAC81      	BTFSS       PORTB, 6 
0x035C	0xD00B      	BRA         L_sendSensorStatus24
;debug.h,77 :: 		debugText = "1";
0x035E	0x0E17      	MOVLW       ?lstr17_Main_321.2V
0x0360	0x0100      	MOVLB       0
0x0362	0x6F8A      	MOVWF       _debugText, 1
0x0364	0x0E00      	MOVLW       hi_addr(?lstr17_Main_321.2V)
0x0366	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,78 :: 		UART1_Write_Text(debugText);
0x0368	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x036C	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0370	0xDEF0      	RCALL       _UART1_Write_Text
;debug.h,79 :: 		}
0x0372	0xD00C      	BRA         L_sendSensorStatus25
L_sendSensorStatus24:
;debug.h,80 :: 		else if( Sensor8 == 0){
0x0374	0xBC81      	BTFSC       PORTB, 6 
0x0376	0xD00A      	BRA         L_sendSensorStatus26
;debug.h,81 :: 		debugText = "0";
0x0378	0x0E15      	MOVLW       ?lstr18_Main_321.2V
0x037A	0x0100      	MOVLB       0
0x037C	0x6F8A      	MOVWF       _debugText, 1
0x037E	0x0E00      	MOVLW       hi_addr(?lstr18_Main_321.2V)
0x0380	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,82 :: 		UART1_Write_Text(debugText);
0x0382	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0386	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x038A	0xDEE3      	RCALL       _UART1_Write_Text
;debug.h,83 :: 		}
L_sendSensorStatus26:
L_sendSensorStatus25:
;debug.h,85 :: 		if( Sensor9 == 1){
0x038C	0xAE81      	BTFSS       PORTB, 7 
0x038E	0xD00B      	BRA         L_sendSensorStatus27
;debug.h,86 :: 		debugText = "1";
0x0390	0x0E1B      	MOVLW       ?lstr19_Main_321.2V
0x0392	0x0100      	MOVLB       0
0x0394	0x6F8A      	MOVWF       _debugText, 1
0x0396	0x0E00      	MOVLW       hi_addr(?lstr19_Main_321.2V)
0x0398	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,87 :: 		UART1_Write_Text(debugText);
0x039A	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x039E	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03A2	0xDED7      	RCALL       _UART1_Write_Text
;debug.h,88 :: 		}
0x03A4	0xD00C      	BRA         L_sendSensorStatus28
L_sendSensorStatus27:
;debug.h,89 :: 		else if( Sensor9 == 0){
0x03A6	0xBE81      	BTFSC       PORTB, 7 
0x03A8	0xD00A      	BRA         L_sendSensorStatus29
;debug.h,90 :: 		debugText = "0";
0x03AA	0x0E27      	MOVLW       ?lstr20_Main_321.2V
0x03AC	0x0100      	MOVLB       0
0x03AE	0x6F8A      	MOVWF       _debugText, 1
0x03B0	0x0E00      	MOVLW       hi_addr(?lstr20_Main_321.2V)
0x03B2	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,91 :: 		UART1_Write_Text(debugText);
0x03B4	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03B8	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03BC	0xDECA      	RCALL       _UART1_Write_Text
;debug.h,92 :: 		}
L_sendSensorStatus29:
L_sendSensorStatus28:
;debug.h,94 :: 		if( Scout == 1){
0x03BE	0xAA81      	BTFSS       PORTB, 5 
0x03C0	0xD00B      	BRA         L_sendSensorStatus30
;debug.h,95 :: 		debugText = " 1; ";
0x03C2	0x0E22      	MOVLW       ?lstr21_Main_321.2V
0x03C4	0x0100      	MOVLB       0
0x03C6	0x6F8A      	MOVWF       _debugText, 1
0x03C8	0x0E00      	MOVLW       hi_addr(?lstr21_Main_321.2V)
0x03CA	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,96 :: 		UART1_Write_Text(debugText);
0x03CC	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03D0	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03D4	0xDEBE      	RCALL       _UART1_Write_Text
;debug.h,97 :: 		}
0x03D6	0xD00C      	BRA         L_sendSensorStatus31
L_sendSensorStatus30:
;debug.h,98 :: 		else if( Scout == 0){
0x03D8	0xBA81      	BTFSC       PORTB, 5 
0x03DA	0xD00A      	BRA         L_sendSensorStatus32
;debug.h,99 :: 		debugText = " 0; ";
0x03DC	0x0E1D      	MOVLW       ?lstr22_Main_321.2V
0x03DE	0x0100      	MOVLB       0
0x03E0	0x6F8A      	MOVWF       _debugText, 1
0x03E2	0x0E00      	MOVLW       hi_addr(?lstr22_Main_321.2V)
0x03E4	0x6F8B      	MOVWF       _debugText+1, 1
;debug.h,100 :: 		UART1_Write_Text(debugText);
0x03E6	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03EA	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03EE	0xDEB1      	RCALL       _UART1_Write_Text
;debug.h,101 :: 		}
L_sendSensorStatus32:
L_sendSensorStatus31:
;debug.h,102 :: 		}
0x03F0	0x0012      	RETURN      0
; end of _sendSensorStatus
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x03F2	0x0E44      	MOVLW       _UART1_Write
0x03F4	0x0100      	MOVLB       0
0x03F6	0x6FE3      	MOVWF       _UART_Wr_Ptr, 1
0x03F8	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x03FA	0x6FE4      	MOVWF       _UART_Wr_Ptr+1, 1
0x03FC	0x0E04      	MOVLW       FARG_UART1_Write_data_
0x03FE	0x6FE5      	MOVWF       _UART_Wr_Ptr+2, 1
0x0400	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0402	0x6FE6      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0404	0x0E4C      	MOVLW       _UART1_Read
0x0406	0x6FEF      	MOVWF       _UART_Rd_Ptr, 1
0x0408	0x0E05      	MOVLW       hi_addr(_UART1_Read)
0x040A	0x6FF0      	MOVWF       _UART_Rd_Ptr+1, 1
0x040C	0x0E00      	MOVLW       0
0x040E	0x6FF1      	MOVWF       _UART_Rd_Ptr+2, 1
0x0410	0x0E00      	MOVLW       0
0x0412	0x6FF2      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0414	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0416	0x6FEB      	MOVWF       _UART_Rdy_Ptr, 1
0x0418	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x041A	0x6FEC      	MOVWF       _UART_Rdy_Ptr+1, 1
0x041C	0x0E00      	MOVLW       0
0x041E	0x6FED      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0420	0x0E00      	MOVLW       0
0x0422	0x6FEE      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0424	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0426	0x6FE7      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0428	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x042A	0x6FE8      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x042C	0x0E00      	MOVLW       0
0x042E	0x6FE9      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0430	0x0E00      	MOVLW       0
0x0432	0x6FEA      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0434	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0436	0x0E90      	MOVLW       144
0x0438	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x043A	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x043C	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x043E	0xAA9E      	BTFSS       PIR1, 5 
0x0440	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0442	0xF000CFAE  	MOVFF       RCREG, R0
0x0446	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
0x0448	0x0012      	RETURN      0
; end of _UART1_Init
_stop:
;motion.h,95 :: 		void stop(){
;motion.h,96 :: 		motorLeft_stop();
0x044A	0xDEA3      	RCALL       _motorLeft_stop
;motion.h,97 :: 		motorRight_stop();
0x044C	0xDEA5      	RCALL       _motorRight_stop
;motion.h,98 :: 		}
0x044E	0x0012      	RETURN      0
; end of _stop
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x0450	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x0452	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x0454	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
0x0456	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0458	0x6ABB      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x045A	0x98BA      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x045C	0x9ABA      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
0x045E	0x0012      	RETURN      0
; end of _PWM2_Init
_turnLeft:
;motion.h,80 :: 		void turnLeft(int pwmRight){
;motion.h,81 :: 		motorRight_foward(pwmRight);
0x0460	0xF100C0FC  	MOVFF       FARG_turnLeft_pwmRight, FARG_motorRight_foward_pwm
0x0464	0xF101C0FD  	MOVFF       FARG_turnLeft_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0468	0xDEA0      	RCALL       _motorRight_foward
;motion.h,82 :: 		motorLeft_stop();
0x046A	0xDE93      	RCALL       _motorLeft_stop
;motion.h,83 :: 		}
0x046C	0x0012      	RETURN      0
; end of _turnLeft
_rotateClockwise:
;motion.h,85 :: 		void rotateClockwise(int pwm){
;motion.h,86 :: 		motorLeft_foward(pwm);
0x046E	0xF100C0FC  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorLeft_foward_pwm
0x0472	0xF101C0FD  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorLeft_foward_pwm+1
0x0476	0xDE87      	RCALL       _motorLeft_foward
;motion.h,87 :: 		motorRight_reverse(pwm);
0x0478	0xF100C0FC  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorRight_reverse_pwm
0x047C	0xF101C0FD  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorRight_reverse_pwm+1
0x0480	0xDE8E      	RCALL       _motorRight_reverse
;motion.h,88 :: 		}
0x0482	0x0012      	RETURN      0
; end of _rotateClockwise
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0484	0x9294      	BCF         TRISC1_bit, 1 
;__Lib_PWM_c21.c,21 :: 		
0x0486	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x0488	0x0E0C      	MOVLW       12
0x048A	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
0x048C	0x0012      	RETURN      0
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x048E	0x9494      	BCF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,56 :: 		
0x0490	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x0492	0x0E0C      	MOVLW       12
0x0494	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
0x0496	0x0012      	RETURN      0
; end of _PWM1_Start
_configure:
;configuration.h,1 :: 		void configure(){
;configuration.h,4 :: 		TRISA = 0b11111111;
0x0498	0x0EFF      	MOVLW       255
0x049A	0x6E92      	MOVWF       TRISA 
;configuration.h,5 :: 		TRISB = 0b11111111;
0x049C	0x0EFF      	MOVLW       255
0x049E	0x6E93      	MOVWF       TRISB 
;configuration.h,6 :: 		TRISC = 0b00000000;
0x04A0	0x6A94      	CLRF        TRISC 
;configuration.h,7 :: 		TRISD = 0b11110000;
0x04A2	0x0EF0      	MOVLW       240
0x04A4	0x6E95      	MOVWF       TRISD 
;configuration.h,10 :: 		PORTA = 0;
0x04A6	0x6A80      	CLRF        PORTA 
;configuration.h,11 :: 		PORTB = 0;
0x04A8	0x6A81      	CLRF        PORTB 
;configuration.h,12 :: 		PORTC = 0;
0x04AA	0x6A82      	CLRF        PORTC 
;configuration.h,13 :: 		PORTD = 0;
0x04AC	0x6A83      	CLRF        PORTD 
;configuration.h,16 :: 		PWM1_Init(5000);
0x04AE	0x80CA      	BSF         T2CON, 0, 0
0x04B0	0x92CA      	BCF         T2CON, 1, 0
0x04B2	0x0EF9      	MOVLW       249
0x04B4	0x6ECB      	MOVWF       PR2, 0
0x04B6	0xDFCC      	RCALL       _PWM1_Init
;configuration.h,17 :: 		PWM2_Init(5000);
0x04B8	0x80CA      	BSF         T2CON, 0, 0
0x04BA	0x92CA      	BCF         T2CON, 1, 0
0x04BC	0x0EF9      	MOVLW       249
0x04BE	0x6ECB      	MOVWF       PR2, 0
0x04C0	0xDFCB      	RCALL       _PWM2_Init
;configuration.h,18 :: 		PWM1_Start();
0x04C2	0xDFE5      	RCALL       _PWM1_Start
;configuration.h,19 :: 		PWM2_Start();
0x04C4	0xDFDF      	RCALL       _PWM2_Start
;configuration.h,20 :: 		UART1_Init(9600);
0x04C6	0x0E81      	MOVLW       129
0x04C8	0x6EAF      	MOVWF       SPBRG 
0x04CA	0x84AC      	BSF         TXSTA, 2, 0
0x04CC	0xDF92      	RCALL       _UART1_Init
;configuration.h,28 :: 		ADCON0 = 0b11000001;
0x04CE	0x0EC1      	MOVLW       193
0x04D0	0x6EC2      	MOVWF       ADCON0 
;configuration.h,29 :: 		ADCON1 = 0b00000000;
0x04D2	0x6AC1      	CLRF        ADCON1 
;configuration.h,35 :: 		}
0x04D4	0x0012      	RETURN      0
; end of _configure
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x04D6	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x04D8	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x04DC	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x04DE	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x04E0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x04E2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x04E4	0x0012      	RETURN      0
; end of ___CC2DW
_setPID:
;linefollow.h,112 :: 		void setPID(){
;linefollow.h,113 :: 		MIN_RPM = 185;       //155
0x04E6	0x0EB9      	MOVLW       185
0x04E8	0x0100      	MOVLB       0
0x04EA	0x6FE1      	MOVWF       _MIN_RPM, 1
0x04EC	0x0E00      	MOVLW       0
0x04EE	0x6FE2      	MOVWF       _MIN_RPM+1, 1
;linefollow.h,114 :: 		MID_RPM = 200;
0x04F0	0x0EC8      	MOVLW       200
0x04F2	0x6FCF      	MOVWF       _MID_RPM, 1
0x04F4	0x0E00      	MOVLW       0
0x04F6	0x6FD0      	MOVWF       _MID_RPM+1, 1
;linefollow.h,115 :: 		MAX_RPM = 255;
0x04F8	0x0EFF      	MOVLW       255
0x04FA	0x6FCD      	MOVWF       _MAX_RPM, 1
0x04FC	0x0E00      	MOVLW       0
0x04FE	0x6FCE      	MOVWF       _MAX_RPM+1, 1
;linefollow.h,116 :: 		TEST_RPM = 220;
0x0500	0x0EDC      	MOVLW       220
0x0502	0x6FCB      	MOVWF       _TEST_RPM, 1
0x0504	0x0E00      	MOVLW       0
0x0506	0x6FCC      	MOVWF       _TEST_RPM+1, 1
;linefollow.h,118 :: 		Kp = 6;
0x0508	0x0E00      	MOVLW       0
0x050A	0x6FD1      	MOVWF       _Kp, 1
0x050C	0x0E00      	MOVLW       0
0x050E	0x6FD2      	MOVWF       _Kp+1, 1
0x0510	0x0E40      	MOVLW       64
0x0512	0x6FD3      	MOVWF       _Kp+2, 1
0x0514	0x0E81      	MOVLW       129
0x0516	0x6FD4      	MOVWF       _Kp+3, 1
;linefollow.h,119 :: 		Ki = 0;
0x0518	0x6BDD      	CLRF        _Ki, 1
0x051A	0x6BDE      	CLRF        _Ki+1, 1
0x051C	0x6BDF      	CLRF        _Ki+2, 1
0x051E	0x6BE0      	CLRF        _Ki+3, 1
;linefollow.h,120 :: 		Kd = 0;
0x0520	0x6BD9      	CLRF        _Kd, 1
0x0522	0x6BDA      	CLRF        _Kd+1, 1
0x0524	0x6BDB      	CLRF        _Kd+2, 1
0x0526	0x6BDC      	CLRF        _Kd+3, 1
;linefollow.h,122 :: 		totalError = 0;
0x0528	0x6BD5      	CLRF        _totalError, 1
0x052A	0x6BD6      	CLRF        _totalError+1, 1
0x052C	0x6BD7      	CLRF        _totalError+2, 1
0x052E	0x6BD8      	CLRF        _totalError+3, 1
;linefollow.h,123 :: 		previousDeviation = 0;
0x0530	0x6BF8      	CLRF        _previousDeviation, 1
0x0532	0x6BF9      	CLRF        _previousDeviation+1, 1
;linefollow.h,124 :: 		PID_LeftRPM = 0;
0x0534	0x6BF6      	CLRF        _PID_LeftRPM, 1
0x0536	0x6BF7      	CLRF        _PID_LeftRPM+1, 1
;linefollow.h,125 :: 		PID_RightRPM = 0;
0x0538	0x6BF4      	CLRF        _PID_RightRPM, 1
0x053A	0x6BF5      	CLRF        _PID_RightRPM+1, 1
;linefollow.h,127 :: 		Pwm1_Set_Duty(MID_RPM);
0x053C	0x0EC8      	MOVLW       200
0x053E	0x0101      	MOVLB       1
0x0540	0x6F04      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0x0542	0xDD94      	RCALL       _PWM1_Set_Duty
;linefollow.h,128 :: 		Pwm2_Set_Duty(MID_RPM);
0x0544	0xF104C0CF  	MOVFF       _MID_RPM, FARG_PWM2_Set_Duty_new_duty
0x0548	0xDDC7      	RCALL       _PWM2_Set_Duty
;linefollow.h,129 :: 		}
0x054A	0x0012      	RETURN      0
; end of _setPID
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x054C	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0550	0xA2AB      	BTFSS       RCSTA, 1 
0x0552	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x0554	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0556	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0558	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
0x055C	0x0012      	RETURN      0
; end of _UART1_Read
_lineFollowNormal:
;linefollow.h,40 :: 		void lineFollowNormal(){
;linefollow.h,41 :: 		while(1){              //!((Sensor3==1 || Sensor4==1 || Sensor5==1 || Sensor6==1 || Sensor7==1) && Sensor1==0 && Sensor2==0 && Sensor8==0 && Sensor9==0)
L_lineFollowNormal63:
;linefollow.h,42 :: 		if( Scout==1 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1){
0x055E	0xAA81      	BTFSS       PORTB, 5 
0x0560	0xD014      	BRA         L_lineFollowNormal67
0x0562	0xA881      	BTFSS       PORTB, 4 
0x0564	0xD012      	BRA         L_lineFollowNormal67
0x0566	0xA681      	BTFSS       PORTB, 3 
0x0568	0xD010      	BRA         L_lineFollowNormal67
0x056A	0xA883      	BTFSS       PORTD, 4 
0x056C	0xD00E      	BRA         L_lineFollowNormal67
0x056E	0xAA83      	BTFSS       PORTD, 5 
0x0570	0xD00C      	BRA         L_lineFollowNormal67
0x0572	0xAC83      	BTFSS       PORTD, 6 
0x0574	0xD00A      	BRA         L_lineFollowNormal67
0x0576	0xAE83      	BTFSS       PORTD, 7 
0x0578	0xD008      	BRA         L_lineFollowNormal67
0x057A	0xA481      	BTFSS       PORTB, 2 
0x057C	0xD006      	BRA         L_lineFollowNormal67
0x057E	0xAC81      	BTFSS       PORTB, 6 
0x0580	0xD004      	BRA         L_lineFollowNormal67
0x0582	0xAE81      	BTFSS       PORTB, 7 
0x0584	0xD002      	BRA         L_lineFollowNormal67
L__lineFollowNormal201:
;linefollow.h,43 :: 		stop();
0x0586	0xDF61      	RCALL       _stop
;linefollow.h,44 :: 		}
0x0588	0xD0E0      	BRA         L_lineFollowNormal68
L_lineFollowNormal67:
;linefollow.h,45 :: 		else if( (Scout==0 && Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1) || (Scout==0 && Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)){
0x058A	0xBA81      	BTFSC       PORTB, 5 
0x058C	0xD013      	BRA         L__lineFollowNormal200
0x058E	0xB881      	BTFSC       PORTB, 4 
0x0590	0xD011      	BRA         L__lineFollowNormal200
0x0592	0xB681      	BTFSC       PORTB, 3 
0x0594	0xD00F      	BRA         L__lineFollowNormal200
0x0596	0xB883      	BTFSC       PORTD, 4 
0x0598	0xD00D      	BRA         L__lineFollowNormal200
0x059A	0xAA83      	BTFSS       PORTD, 5 
0x059C	0xD00B      	BRA         L__lineFollowNormal200
0x059E	0xAC83      	BTFSS       PORTD, 6 
0x05A0	0xD009      	BRA         L__lineFollowNormal200
0x05A2	0xAE83      	BTFSS       PORTD, 7 
0x05A4	0xD007      	BRA         L__lineFollowNormal200
0x05A6	0xA481      	BTFSS       PORTB, 2 
0x05A8	0xD005      	BRA         L__lineFollowNormal200
0x05AA	0xAC81      	BTFSS       PORTB, 6 
0x05AC	0xD003      	BRA         L__lineFollowNormal200
0x05AE	0xAE81      	BTFSS       PORTB, 7 
0x05B0	0xD001      	BRA         L__lineFollowNormal200
0x05B2	0xD016      	BRA         L__lineFollowNormal198
L__lineFollowNormal200:
0x05B4	0xBA81      	BTFSC       PORTB, 5 
0x05B6	0xD013      	BRA         L__lineFollowNormal199
0x05B8	0xB881      	BTFSC       PORTB, 4 
0x05BA	0xD011      	BRA         L__lineFollowNormal199
0x05BC	0xB681      	BTFSC       PORTB, 3 
0x05BE	0xD00F      	BRA         L__lineFollowNormal199
0x05C0	0xB883      	BTFSC       PORTD, 4 
0x05C2	0xD00D      	BRA         L__lineFollowNormal199
0x05C4	0xBA83      	BTFSC       PORTD, 5 
0x05C6	0xD00B      	BRA         L__lineFollowNormal199
0x05C8	0xAC83      	BTFSS       PORTD, 6 
0x05CA	0xD009      	BRA         L__lineFollowNormal199
0x05CC	0xAE83      	BTFSS       PORTD, 7 
0x05CE	0xD007      	BRA         L__lineFollowNormal199
0x05D0	0xA481      	BTFSS       PORTB, 2 
0x05D2	0xD005      	BRA         L__lineFollowNormal199
0x05D4	0xAC81      	BTFSS       PORTB, 6 
0x05D6	0xD003      	BRA         L__lineFollowNormal199
0x05D8	0xAE81      	BTFSS       PORTB, 7 
0x05DA	0xD001      	BRA         L__lineFollowNormal199
0x05DC	0xD001      	BRA         L__lineFollowNormal198
L__lineFollowNormal199:
0x05DE	0xD014      	BRA         L_lineFollowNormal75
L__lineFollowNormal198:
;linefollow.h,47 :: 		debugText = "90 to right..   ";
0x05E0	0x0E39      	MOVLW       ?lstr30_Main_321.2V
0x05E2	0x0100      	MOVLB       0
0x05E4	0x6F8A      	MOVWF       _debugText, 1
0x05E6	0x0E00      	MOVLW       hi_addr(?lstr30_Main_321.2V)
0x05E8	0x6F8B      	MOVWF       _debugText+1, 1
;linefollow.h,48 :: 		UART1_Write_Text(debugText);
0x05EA	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x05EE	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x05F2	0xDDAF      	RCALL       _UART1_Write_Text
;linefollow.h,49 :: 		sendSensorStatus();
0x05F4	0xDE03      	RCALL       _sendSensorStatus
;linefollow.h,50 :: 		while(Scout==0){
L_lineFollowNormal76:
0x05F6	0xBA81      	BTFSC       PORTB, 5 
0x05F8	0xD006      	BRA         L_lineFollowNormal77
;linefollow.h,51 :: 		rotateClockwise(TEST_RPM);
0x05FA	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateClockwise_pwm
0x05FE	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateClockwise_pwm+1
0x0602	0xDF35      	RCALL       _rotateClockwise
;linefollow.h,52 :: 		}
0x0604	0xD7F8      	BRA         L_lineFollowNormal76
L_lineFollowNormal77:
;linefollow.h,53 :: 		}
0x0606	0xD0A1      	BRA         L_lineFollowNormal78
L_lineFollowNormal75:
;linefollow.h,54 :: 		else if( (Scout==0 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0) && (Scout==0 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)){
0x0608	0xBA81      	BTFSC       PORTB, 5 
0x060A	0xD03A      	BRA         L_lineFollowNormal85
0x060C	0xA881      	BTFSS       PORTB, 4 
0x060E	0xD038      	BRA         L_lineFollowNormal85
0x0610	0xA681      	BTFSS       PORTB, 3 
0x0612	0xD036      	BRA         L_lineFollowNormal85
0x0614	0xA883      	BTFSS       PORTD, 4 
0x0616	0xD034      	BRA         L_lineFollowNormal85
0x0618	0xAA83      	BTFSS       PORTD, 5 
0x061A	0xD032      	BRA         L_lineFollowNormal85
0x061C	0xAC83      	BTFSS       PORTD, 6 
0x061E	0xD030      	BRA         L_lineFollowNormal85
0x0620	0xBE83      	BTFSC       PORTD, 7 
0x0622	0xD02E      	BRA         L_lineFollowNormal85
0x0624	0xB481      	BTFSC       PORTB, 2 
0x0626	0xD02C      	BRA         L_lineFollowNormal85
0x0628	0xBC81      	BTFSC       PORTB, 6 
0x062A	0xD02A      	BRA         L_lineFollowNormal85
0x062C	0xBE81      	BTFSC       PORTB, 7 
0x062E	0xD028      	BRA         L_lineFollowNormal85
L__lineFollowNormal197:
0x0630	0xBA81      	BTFSC       PORTB, 5 
0x0632	0xD026      	BRA         L_lineFollowNormal85
0x0634	0xA881      	BTFSS       PORTB, 4 
0x0636	0xD024      	BRA         L_lineFollowNormal85
0x0638	0xA681      	BTFSS       PORTB, 3 
0x063A	0xD022      	BRA         L_lineFollowNormal85
0x063C	0xA883      	BTFSS       PORTD, 4 
0x063E	0xD020      	BRA         L_lineFollowNormal85
0x0640	0xAA83      	BTFSS       PORTD, 5 
0x0642	0xD01E      	BRA         L_lineFollowNormal85
0x0644	0xBC83      	BTFSC       PORTD, 6 
0x0646	0xD01C      	BRA         L_lineFollowNormal85
0x0648	0xBE83      	BTFSC       PORTD, 7 
0x064A	0xD01A      	BRA         L_lineFollowNormal85
0x064C	0xB481      	BTFSC       PORTB, 2 
0x064E	0xD018      	BRA         L_lineFollowNormal85
0x0650	0xBC81      	BTFSC       PORTB, 6 
0x0652	0xD016      	BRA         L_lineFollowNormal85
0x0654	0xBE81      	BTFSC       PORTB, 7 
0x0656	0xD014      	BRA         L_lineFollowNormal85
L__lineFollowNormal196:
L__lineFollowNormal195:
;linefollow.h,56 :: 		debugText = "90 to left..   ";
0x0658	0x0E29      	MOVLW       ?lstr31_Main_321.2V
0x065A	0x0100      	MOVLB       0
0x065C	0x6F8A      	MOVWF       _debugText, 1
0x065E	0x0E00      	MOVLW       hi_addr(?lstr31_Main_321.2V)
0x0660	0x6F8B      	MOVWF       _debugText+1, 1
;linefollow.h,57 :: 		UART1_Write_Text(debugText);
0x0662	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0666	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x066A	0xDD73      	RCALL       _UART1_Write_Text
;linefollow.h,58 :: 		sendSensorStatus();
0x066C	0xDDC7      	RCALL       _sendSensorStatus
;linefollow.h,59 :: 		while(Scout==0){
L_lineFollowNormal86:
0x066E	0xBA81      	BTFSC       PORTB, 5 
0x0670	0xD006      	BRA         L_lineFollowNormal87
;linefollow.h,60 :: 		rotateAntiClockwise(TEST_RPM);
0x0672	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateAntiClockwise_pwm
0x0676	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateAntiClockwise_pwm+1
0x067A	0xDDAE      	RCALL       _rotateAntiClockwise
;linefollow.h,61 :: 		}
0x067C	0xD7F8      	BRA         L_lineFollowNormal86
L_lineFollowNormal87:
;linefollow.h,62 :: 		}
0x067E	0xD065      	BRA         L_lineFollowNormal88
L_lineFollowNormal85:
;linefollow.h,63 :: 		else if( Sensor4==1 && Sensor5==1){
0x0680	0xAA83      	BTFSS       PORTD, 5 
0x0682	0xD00C      	BRA         L_lineFollowNormal91
0x0684	0xAC83      	BTFSS       PORTD, 6 
0x0686	0xD00A      	BRA         L_lineFollowNormal91
L__lineFollowNormal194:
;linefollow.h,65 :: 		moveForward(TEST_RPM,TEST_RPM);
0x0688	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_moveForward_pwmLeft
0x068C	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_moveForward_pwmLeft+1
0x0690	0xF0FEC0CB  	MOVFF       _TEST_RPM, FARG_moveForward_pwmRight
0x0694	0xF0FFC0CC  	MOVFF       _TEST_RPM+1, FARG_moveForward_pwmRight+1
0x0698	0xDD94      	RCALL       _moveForward
;linefollow.h,66 :: 		}
0x069A	0xD057      	BRA         L_lineFollowNormal92
L_lineFollowNormal91:
;linefollow.h,67 :: 		else if( Sensor4==1 && Sensor5==0 && Scout==1){
0x069C	0xAA83      	BTFSS       PORTD, 5 
0x069E	0xD00A      	BRA         L_lineFollowNormal95
0x06A0	0xBC83      	BTFSC       PORTD, 6 
0x06A2	0xD008      	BRA         L_lineFollowNormal95
0x06A4	0xAA81      	BTFSS       PORTB, 5 
0x06A6	0xD006      	BRA         L_lineFollowNormal95
L__lineFollowNormal193:
;linefollow.h,69 :: 		turnLeft(TEST_RPM);
0x06A8	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_turnLeft_pwmRight
0x06AC	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_turnLeft_pwmRight+1
0x06B0	0xDED7      	RCALL       _turnLeft
;linefollow.h,70 :: 		}
0x06B2	0xD04B      	BRA         L_lineFollowNormal96
L_lineFollowNormal95:
;linefollow.h,71 :: 		else if( Sensor4==0 && Sensor5==1 && Scout==1){
0x06B4	0xBA83      	BTFSC       PORTD, 5 
0x06B6	0xD00A      	BRA         L_lineFollowNormal99
0x06B8	0xAC83      	BTFSS       PORTD, 6 
0x06BA	0xD008      	BRA         L_lineFollowNormal99
0x06BC	0xAA81      	BTFSS       PORTB, 5 
0x06BE	0xD006      	BRA         L_lineFollowNormal99
L__lineFollowNormal192:
;linefollow.h,73 :: 		turnRight(TEST_RPM);
0x06C0	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_turnRight_pwmLeft
0x06C4	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_turnRight_pwmLeft+1
0x06C8	0xDD92      	RCALL       _turnRight
;linefollow.h,74 :: 		}
0x06CA	0xD03F      	BRA         L_lineFollowNormal100
L_lineFollowNormal99:
;linefollow.h,75 :: 		else if( Sensor4==1 && Sensor5==0 && Scout==0){
0x06CC	0xAA83      	BTFSS       PORTD, 5 
0x06CE	0xD00B      	BRA         L_lineFollowNormal103
0x06D0	0xBC83      	BTFSC       PORTD, 6 
0x06D2	0xD009      	BRA         L_lineFollowNormal103
0x06D4	0xBA81      	BTFSC       PORTB, 5 
0x06D6	0xD007      	BRA         L_lineFollowNormal103
L__lineFollowNormal191:
;linefollow.h,77 :: 		stop();
0x06D8	0xDEB8      	RCALL       _stop
;linefollow.h,79 :: 		rotateAntiClockwise(TEST_RPM);
0x06DA	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateAntiClockwise_pwm
0x06DE	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateAntiClockwise_pwm+1
0x06E2	0xDD7A      	RCALL       _rotateAntiClockwise
;linefollow.h,80 :: 		}
0x06E4	0xD032      	BRA         L_lineFollowNormal104
L_lineFollowNormal103:
;linefollow.h,81 :: 		else if( Sensor4==0 && Sensor5==1 && Scout==0){
0x06E6	0xBA83      	BTFSC       PORTD, 5 
0x06E8	0xD00B      	BRA         L_lineFollowNormal107
0x06EA	0xAC83      	BTFSS       PORTD, 6 
0x06EC	0xD009      	BRA         L_lineFollowNormal107
0x06EE	0xBA81      	BTFSC       PORTB, 5 
0x06F0	0xD007      	BRA         L_lineFollowNormal107
L__lineFollowNormal190:
;linefollow.h,83 :: 		stop();
0x06F2	0xDEAB      	RCALL       _stop
;linefollow.h,85 :: 		rotateClockwise(TEST_RPM);
0x06F4	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateClockwise_pwm
0x06F8	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateClockwise_pwm+1
0x06FC	0xDEB8      	RCALL       _rotateClockwise
;linefollow.h,86 :: 		}
0x06FE	0xD025      	BRA         L_lineFollowNormal108
L_lineFollowNormal107:
;linefollow.h,87 :: 		else if( Sensor4==0 && Sensor5==0 ){
0x0700	0xBA83      	BTFSC       PORTD, 5 
0x0702	0xD023      	BRA         L_lineFollowNormal111
0x0704	0xBC83      	BTFSC       PORTD, 6 
0x0706	0xD021      	BRA         L_lineFollowNormal111
L__lineFollowNormal189:
;linefollow.h,88 :: 		if(Sensor3 ==1){
0x0708	0xA883      	BTFSS       PORTD, 4 
0x070A	0xD006      	BRA         L_lineFollowNormal112
;linefollow.h,89 :: 		rotateAntiClockwise(TEST_RPM);
0x070C	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateAntiClockwise_pwm
0x0710	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateAntiClockwise_pwm+1
0x0714	0xDD61      	RCALL       _rotateAntiClockwise
;linefollow.h,90 :: 		}
0x0716	0xD019      	BRA         L_lineFollowNormal113
L_lineFollowNormal112:
;linefollow.h,91 :: 		else if(Sensor6 ==1){
0x0718	0xAE83      	BTFSS       PORTD, 7 
0x071A	0xD006      	BRA         L_lineFollowNormal114
;linefollow.h,92 :: 		rotateClockwise(TEST_RPM);
0x071C	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateClockwise_pwm
0x0720	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateClockwise_pwm+1
0x0724	0xDEA4      	RCALL       _rotateClockwise
;linefollow.h,93 :: 		}
0x0726	0xD011      	BRA         L_lineFollowNormal115
L_lineFollowNormal114:
;linefollow.h,94 :: 		else if(Sensor2 ==1){
0x0728	0xA681      	BTFSS       PORTB, 3 
0x072A	0xD006      	BRA         L_lineFollowNormal116
;linefollow.h,95 :: 		rotateAntiClockwise(TEST_RPM);
0x072C	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateAntiClockwise_pwm
0x0730	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateAntiClockwise_pwm+1
0x0734	0xDD51      	RCALL       _rotateAntiClockwise
;linefollow.h,96 :: 		}
0x0736	0xD009      	BRA         L_lineFollowNormal117
L_lineFollowNormal116:
;linefollow.h,97 :: 		else if(Sensor7 ==1){
0x0738	0xA481      	BTFSS       PORTB, 2 
0x073A	0xD006      	BRA         L_lineFollowNormal118
;linefollow.h,98 :: 		rotateClockwise(TEST_RPM);
0x073C	0xF0FCC0CB  	MOVFF       _TEST_RPM, FARG_rotateClockwise_pwm
0x0740	0xF0FDC0CC  	MOVFF       _TEST_RPM+1, FARG_rotateClockwise_pwm+1
0x0744	0xDE94      	RCALL       _rotateClockwise
;linefollow.h,99 :: 		}
0x0746	0xD001      	BRA         L_lineFollowNormal119
L_lineFollowNormal118:
;linefollow.h,102 :: 		stop();
0x0748	0xDE80      	RCALL       _stop
;linefollow.h,105 :: 		}
L_lineFollowNormal119:
L_lineFollowNormal117:
L_lineFollowNormal115:
L_lineFollowNormal113:
;linefollow.h,106 :: 		}
L_lineFollowNormal111:
L_lineFollowNormal108:
L_lineFollowNormal104:
L_lineFollowNormal100:
L_lineFollowNormal96:
L_lineFollowNormal92:
L_lineFollowNormal88:
L_lineFollowNormal78:
L_lineFollowNormal68:
;linefollow.h,108 :: 		}
0x074A	0xD709      	BRA         L_lineFollowNormal63
;linefollow.h,110 :: 		}
0x074C	0x0012      	RETURN      0
; end of _lineFollowNormal
_main:
0x074E	0xF004EC58  	CALL        2224, 0
;Main 1.2V.c,7 :: 		void main() {
;Main 1.2V.c,8 :: 		configure();
0x0752	0xDEA2      	RCALL       _configure
;Main 1.2V.c,10 :: 		UART1_Write_Text(ConnectionEstablished);
0x0754	0xF100C061  	MOVFF       _ConnectionEstablished, FARG_UART1_Write_Text_uart_text
0x0758	0xF101C062  	MOVFF       _ConnectionEstablished+1, FARG_UART1_Write_Text_uart_text+1
0x075C	0xDCFA      	RCALL       _UART1_Write_Text
;Main 1.2V.c,11 :: 		setPID();
0x075E	0xDEC3      	RCALL       _setPID
;Main 1.2V.c,15 :: 		debugText = "          Starting..  ";
0x0760	0x0E73      	MOVLW       ?lstr34_Main_321.2V
0x0762	0x0100      	MOVLB       0
0x0764	0x6F8A      	MOVWF       _debugText, 1
0x0766	0x0E00      	MOVLW       hi_addr(?lstr34_Main_321.2V)
0x0768	0x6F8B      	MOVWF       _debugText+1, 1
;Main 1.2V.c,16 :: 		UART1_Write_Text(debugText);
0x076A	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x076E	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0772	0xDCEF      	RCALL       _UART1_Write_Text
;Main 1.2V.c,18 :: 		delay_ms(1000);
0x0774	0x0E1A      	MOVLW       26
0x0776	0x6E0B      	MOVWF       R11, 0
0x0778	0x0E5E      	MOVLW       94
0x077A	0x6E0C      	MOVWF       R12, 0
0x077C	0x0E6E      	MOVLW       110
0x077E	0x6E0D      	MOVWF       R13, 0
L_main179:
0x0780	0x2E0D      	DECFSZ      R13, 1, 0
0x0782	0xD7FE      	BRA         L_main179
0x0784	0x2E0C      	DECFSZ      R12, 1, 0
0x0786	0xD7FC      	BRA         L_main179
0x0788	0x2E0B      	DECFSZ      R11, 1, 0
0x078A	0xD7FA      	BRA         L_main179
0x078C	0x0000      	NOP
;Main 1.2V.c,19 :: 		debugText = "Test Sensors   ";
0x078E	0x0E63      	MOVLW       ?lstr35_Main_321.2V
0x0790	0x0100      	MOVLB       0
0x0792	0x6F8A      	MOVWF       _debugText, 1
0x0794	0x0E00      	MOVLW       hi_addr(?lstr35_Main_321.2V)
0x0796	0x6F8B      	MOVWF       _debugText+1, 1
;Main 1.2V.c,20 :: 		UART1_Write_Text(debugText);
0x0798	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x079C	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x07A0	0xDCD8      	RCALL       _UART1_Write_Text
;Main 1.2V.c,22 :: 		for(count=0; count<5; count++){
0x07A2	0x0100      	MOVLB       0
0x07A4	0x6BFA      	CLRF        _count, 1
0x07A6	0x6BFB      	CLRF        _count+1, 1
L_main180:
0x07A8	0x0E80      	MOVLW       128
0x07AA	0x19FB      	XORWF       _count+1, 0, 1
0x07AC	0x6E00      	MOVWF       R0 
0x07AE	0x0E80      	MOVLW       128
0x07B0	0x5C00      	SUBWF       R0, 0 
0x07B2	0xE102      	BNZ         L__main221
0x07B4	0x0E05      	MOVLW       5
0x07B6	0x5DFA      	SUBWF       _count, 0, 1
L__main221:
0x07B8	0xE215      	BC          L_main181
;Main 1.2V.c,23 :: 		receiveCommand = UART1_Read();
0x07BA	0xDEC8      	RCALL       _UART1_Read
0x07BC	0xF0F3C000  	MOVFF       R0, _receiveCommand
;Main 1.2V.c,24 :: 		sendSensorStatus();
0x07C0	0xDD1D      	RCALL       _sendSensorStatus
;Main 1.2V.c,25 :: 		delay_ms(1000);
0x07C2	0x0E1A      	MOVLW       26
0x07C4	0x6E0B      	MOVWF       R11, 0
0x07C6	0x0E5E      	MOVLW       94
0x07C8	0x6E0C      	MOVWF       R12, 0
0x07CA	0x0E6E      	MOVLW       110
0x07CC	0x6E0D      	MOVWF       R13, 0
L_main183:
0x07CE	0x2E0D      	DECFSZ      R13, 1, 0
0x07D0	0xD7FE      	BRA         L_main183
0x07D2	0x2E0C      	DECFSZ      R12, 1, 0
0x07D4	0xD7FC      	BRA         L_main183
0x07D6	0x2E0B      	DECFSZ      R11, 1, 0
0x07D8	0xD7FA      	BRA         L_main183
0x07DA	0x0000      	NOP
;Main 1.2V.c,22 :: 		for(count=0; count<5; count++){
0x07DC	0x0100      	MOVLB       0
0x07DE	0x4BFA      	INFSNZ      _count, 1, 1
0x07E0	0x2BFB      	INCF        _count+1, 1, 1
;Main 1.2V.c,26 :: 		}                                                  //while( receiveCommand != 'A' && receiveCommand != 'a' );
0x07E2	0xD7E2      	BRA         L_main180
L_main181:
;Main 1.2V.c,28 :: 		debugText = "Start Line follow..   ";
0x07E4	0x0E4A      	MOVLW       ?lstr36_Main_321.2V
0x07E6	0x6F8A      	MOVWF       _debugText, 1
0x07E8	0x0E00      	MOVLW       hi_addr(?lstr36_Main_321.2V)
0x07EA	0x6F8B      	MOVWF       _debugText+1, 1
;Main 1.2V.c,29 :: 		UART1_Write_Text(debugText);
0x07EC	0xF100C08A  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x07F0	0xF101C08B  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x07F4	0xDCAE      	RCALL       _UART1_Write_Text
;Main 1.2V.c,30 :: 		lineFollowNormal();
0x07F6	0xDEB3      	RCALL       _lineFollowNormal
;Main 1.2V.c,32 :: 		}
0x07F8	0xD7FF      	BRA         $+0
; end of _main
0x08B0	0xF015EE10  	LFSR        1, 21
0x08B4	0x0EB6      	MOVLW       182
0x08B6	0x6E00      	MOVWF       R0 
0x08B8	0x0E01      	MOVLW       1
0x08BA	0x6E01      	MOVWF       R1 
0x08BC	0x0EFA      	MOVLW       250
0x08BE	0x6EF6      	MOVWF       4086 
0x08C0	0x0E07      	MOVLW       7
0x08C2	0x6EF7      	MOVWF       TBLPTRH 
0x08C4	0x0E00      	MOVLW       0
0x08C6	0x6EF8      	MOVWF       TBLPTRU 
0x08C8	0xF002EC6B  	CALL        1238, 0
0x08CC	0x0012      	RETURN      0
;Main 1.2V.c,0 :: ?ICS?lstr18_Main_321.2V
0x07FA	0x0030 ;?ICS?lstr18_Main_321.2V+0
; end of ?ICS?lstr18_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr17_Main_321.2V
0x07FC	0x0031 ;?ICS?lstr17_Main_321.2V+0
; end of ?ICS?lstr17_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr16_Main_321.2V
0x07FE	0x0030 ;?ICS?lstr16_Main_321.2V+0
; end of ?ICS?lstr16_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr19_Main_321.2V
0x0800	0x0031 ;?ICS?lstr19_Main_321.2V+0
; end of ?ICS?lstr19_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr22_Main_321.2V
0x0802	0x3020 ;?ICS?lstr22_Main_321.2V+0
0x0804	0x203B ;?ICS?lstr22_Main_321.2V+2
0x0806	0x00 ;?ICS?lstr22_Main_321.2V+4
; end of ?ICS?lstr22_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr21_Main_321.2V
0x0807	0x3120 ;?ICS?lstr21_Main_321.2V+0
0x0809	0x203B ;?ICS?lstr21_Main_321.2V+2
0x080B	0x00 ;?ICS?lstr21_Main_321.2V+4
; end of ?ICS?lstr21_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr20_Main_321.2V
0x080C	0x0030 ;?ICS?lstr20_Main_321.2V+0
; end of ?ICS?lstr20_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr31_Main_321.2V
0x080E	0x3039 ;?ICS?lstr31_Main_321.2V+0
0x0810	0x7420 ;?ICS?lstr31_Main_321.2V+2
0x0812	0x206F ;?ICS?lstr31_Main_321.2V+4
0x0814	0x656C ;?ICS?lstr31_Main_321.2V+6
0x0816	0x7466 ;?ICS?lstr31_Main_321.2V+8
0x0818	0x2E2E ;?ICS?lstr31_Main_321.2V+10
0x081A	0x2020 ;?ICS?lstr31_Main_321.2V+12
0x081C	0x0020 ;?ICS?lstr31_Main_321.2V+14
; end of ?ICS?lstr31_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr30_Main_321.2V
0x081E	0x3039 ;?ICS?lstr30_Main_321.2V+0
0x0820	0x7420 ;?ICS?lstr30_Main_321.2V+2
0x0822	0x206F ;?ICS?lstr30_Main_321.2V+4
0x0824	0x6972 ;?ICS?lstr30_Main_321.2V+6
0x0826	0x6867 ;?ICS?lstr30_Main_321.2V+8
0x0828	0x2E74 ;?ICS?lstr30_Main_321.2V+10
0x082A	0x202E ;?ICS?lstr30_Main_321.2V+12
0x082C	0x2020 ;?ICS?lstr30_Main_321.2V+14
0x082E	0x00 ;?ICS?lstr30_Main_321.2V+16
; end of ?ICS?lstr30_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr36_Main_321.2V
0x082F	0x7453 ;?ICS?lstr36_Main_321.2V+0
0x0831	0x7261 ;?ICS?lstr36_Main_321.2V+2
0x0833	0x2074 ;?ICS?lstr36_Main_321.2V+4
0x0835	0x694C ;?ICS?lstr36_Main_321.2V+6
0x0837	0x656E ;?ICS?lstr36_Main_321.2V+8
0x0839	0x6620 ;?ICS?lstr36_Main_321.2V+10
0x083B	0x6C6F ;?ICS?lstr36_Main_321.2V+12
0x083D	0x6F6C ;?ICS?lstr36_Main_321.2V+14
0x083F	0x2E77 ;?ICS?lstr36_Main_321.2V+16
0x0841	0x202E ;?ICS?lstr36_Main_321.2V+18
0x0843	0x2020 ;?ICS?lstr36_Main_321.2V+20
0x0845	0x00 ;?ICS?lstr36_Main_321.2V+22
; end of ?ICS?lstr36_Main_321.2V
;Main 1.2V.c,0 :: ?ICS_ConnectionEstablished
0x0846	0x008E ;?ICS_ConnectionEstablished+0
; end of ?ICS_ConnectionEstablished
;Main 1.2V.c,0 :: ?ICS?lstr35_Main_321.2V
0x0848	0x6554 ;?ICS?lstr35_Main_321.2V+0
0x084A	0x7473 ;?ICS?lstr35_Main_321.2V+2
0x084C	0x5320 ;?ICS?lstr35_Main_321.2V+4
0x084E	0x6E65 ;?ICS?lstr35_Main_321.2V+6
0x0850	0x6F73 ;?ICS?lstr35_Main_321.2V+8
0x0852	0x7372 ;?ICS?lstr35_Main_321.2V+10
0x0854	0x2020 ;?ICS?lstr35_Main_321.2V+12
0x0856	0x0020 ;?ICS?lstr35_Main_321.2V+14
; end of ?ICS?lstr35_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr34_Main_321.2V
0x0858	0x2020 ;?ICS?lstr34_Main_321.2V+0
0x085A	0x2020 ;?ICS?lstr34_Main_321.2V+2
0x085C	0x2020 ;?ICS?lstr34_Main_321.2V+4
0x085E	0x2020 ;?ICS?lstr34_Main_321.2V+6
0x0860	0x2020 ;?ICS?lstr34_Main_321.2V+8
0x0862	0x7453 ;?ICS?lstr34_Main_321.2V+10
0x0864	0x7261 ;?ICS?lstr34_Main_321.2V+12
0x0866	0x6974 ;?ICS?lstr34_Main_321.2V+14
0x0868	0x676E ;?ICS?lstr34_Main_321.2V+16
0x086A	0x2E2E ;?ICS?lstr34_Main_321.2V+18
0x086C	0x2020 ;?ICS?lstr34_Main_321.2V+20
0x086E	0x00 ;?ICS?lstr34_Main_321.2V+22
; end of ?ICS?lstr34_Main_321.2V
;Main 1.2V.c,0 :: ?ICS_debugText
0x086F	0x00A6 ;?ICS_debugText+0
; end of ?ICS_debugText
;Main 1.2V.c,0 :: ?ICS?lstr3_Main_321.2V
0x0871	0x0031 ;?ICS?lstr3_Main_321.2V+0
; end of ?ICS?lstr3_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr1_Main_321.2V
0x0873	0x6F43 ;?ICS?lstr1_Main_321.2V+0
0x0875	0x6E6E ;?ICS?lstr1_Main_321.2V+2
0x0877	0x6365 ;?ICS?lstr1_Main_321.2V+4
0x0879	0x6974 ;?ICS?lstr1_Main_321.2V+6
0x087B	0x6E6F ;?ICS?lstr1_Main_321.2V+8
0x087D	0x4520 ;?ICS?lstr1_Main_321.2V+10
0x087F	0x7473 ;?ICS?lstr1_Main_321.2V+12
0x0881	0x6261 ;?ICS?lstr1_Main_321.2V+14
0x0883	0x696C ;?ICS?lstr1_Main_321.2V+16
0x0885	0x6873 ;?ICS?lstr1_Main_321.2V+18
0x0887	0x6465 ;?ICS?lstr1_Main_321.2V+20
0x0889	0x0021 ;?ICS?lstr1_Main_321.2V+22
; end of ?ICS?lstr1_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr2_Main_321.2V
0x088B	0x6F6D ;?ICS?lstr2_Main_321.2V+0
0x088D	0x6576 ;?ICS?lstr2_Main_321.2V+2
0x088F	0x6620 ;?ICS?lstr2_Main_321.2V+4
0x0891	0x726F ;?ICS?lstr2_Main_321.2V+6
0x0893	0x6177 ;?ICS?lstr2_Main_321.2V+8
0x0895	0x6472 ;?ICS?lstr2_Main_321.2V+10
0x0897	0x00 ;?ICS?lstr2_Main_321.2V+12
; end of ?ICS?lstr2_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr8_Main_321.2V
0x0898	0x0030 ;?ICS?lstr8_Main_321.2V+0
; end of ?ICS?lstr8_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr5_Main_321.2V
0x089A	0x0031 ;?ICS?lstr5_Main_321.2V+0
; end of ?ICS?lstr5_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr4_Main_321.2V
0x089C	0x0030 ;?ICS?lstr4_Main_321.2V+0
; end of ?ICS?lstr4_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr7_Main_321.2V
0x089E	0x0031 ;?ICS?lstr7_Main_321.2V+0
; end of ?ICS?lstr7_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr6_Main_321.2V
0x08A0	0x0030 ;?ICS?lstr6_Main_321.2V+0
; end of ?ICS?lstr6_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr12_Main_321.2V
0x08A2	0x0030 ;?ICS?lstr12_Main_321.2V+0
; end of ?ICS?lstr12_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr11_Main_321.2V
0x08A4	0x0031 ;?ICS?lstr11_Main_321.2V+0
; end of ?ICS?lstr11_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr10_Main_321.2V
0x08A6	0x0030 ;?ICS?lstr10_Main_321.2V+0
; end of ?ICS?lstr10_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr15_Main_321.2V
0x08A8	0x0031 ;?ICS?lstr15_Main_321.2V+0
; end of ?ICS?lstr15_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr14_Main_321.2V
0x08AA	0x0030 ;?ICS?lstr14_Main_321.2V+0
; end of ?ICS?lstr14_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr13_Main_321.2V
0x08AC	0x0031 ;?ICS?lstr13_Main_321.2V+0
; end of ?ICS?lstr13_Main_321.2V
;Main 1.2V.c,0 :: ?ICS?lstr9_Main_321.2V
0x08AE	0x0031 ;?ICS?lstr9_Main_321.2V+0
; end of ?ICS?lstr9_Main_321.2V
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [80]    _Mul_16x16_U
0x006C     [108]    _PWM1_Set_Duty
0x00D8     [108]    _PWM2_Set_Duty
0x0144      [14]    _UART1_Write
0x0152      [52]    _UART1_Write_Text
0x0186      [12]    _motorLeft_foward
0x0192       [6]    _motorLeft_stop
0x0198       [6]    _motorRight_stop
0x019E      [12]    _motorRight_reverse
0x01AA      [12]    _motorRight_foward
0x01B6      [12]    _motorLeft_reverse
0x01C2      [22]    _moveForward
0x01D8      [22]    _rotateAntiClockwise
0x01EE      [14]    _turnRight
0x01FC     [502]    _sendSensorStatus
0x03F2      [88]    _UART1_Init
0x044A       [6]    _stop
0x0450       [8]    _PWM1_Init
0x0458       [8]    _PWM2_Init
0x0460      [14]    _turnLeft
0x046E      [22]    _rotateClockwise
0x0484      [10]    _PWM2_Start
0x048E      [10]    _PWM1_Start
0x0498      [62]    _configure
0x04D6      [16]    ___CC2DW
0x04E6     [102]    _setPID
0x054C      [18]    _UART1_Read
0x055E     [496]    _lineFollowNormal
0x074E     [172]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_xCnt_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_yCnt_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [2]    __Lib_TFT__TFT_Write_Char_Return_Pos_y_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_mask_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    ?lstr18_Main_321.2V
0x0017       [2]    ?lstr17_Main_321.2V
0x0019       [2]    ?lstr16_Main_321.2V
0x001B       [2]    ?lstr19_Main_321.2V
0x001D       [5]    ?lstr22_Main_321.2V
0x0022       [5]    ?lstr21_Main_321.2V
0x0027       [2]    ?lstr20_Main_321.2V
0x0029      [16]    ?lstr31_Main_321.2V
0x0039      [17]    ?lstr30_Main_321.2V
0x004A      [23]    ?lstr36_Main_321.2V
0x0061       [2]    _ConnectionEstablished
0x0063      [16]    ?lstr35_Main_321.2V
0x0073      [23]    ?lstr34_Main_321.2V
0x008A       [2]    _debugText
0x008C       [2]    ?lstr3_Main_321.2V
0x008E      [24]    ?lstr1_Main_321.2V
0x00A6      [13]    ?lstr2_Main_321.2V
0x00B3       [2]    ?lstr8_Main_321.2V
0x00B5       [2]    ?lstr5_Main_321.2V
0x00B7       [2]    ?lstr4_Main_321.2V
0x00B9       [2]    ?lstr7_Main_321.2V
0x00BB       [2]    ?lstr6_Main_321.2V
0x00BD       [2]    ?lstr12_Main_321.2V
0x00BF       [2]    ?lstr11_Main_321.2V
0x00C1       [2]    ?lstr10_Main_321.2V
0x00C3       [2]    ?lstr15_Main_321.2V
0x00C5       [2]    ?lstr14_Main_321.2V
0x00C7       [2]    ?lstr13_Main_321.2V
0x00C9       [2]    ?lstr9_Main_321.2V
0x00CB       [2]    _TEST_RPM
0x00CD       [2]    _MAX_RPM
0x00CF       [2]    _MID_RPM
0x00D1       [4]    _Kp
0x00D5       [4]    _totalError
0x00D9       [4]    _Kd
0x00DD       [4]    _Ki
0x00E1       [2]    _MIN_RPM
0x00E3       [4]    _UART_Wr_Ptr
0x00E7       [4]    _UART_Tx_Idle_Ptr
0x00EB       [4]    _UART_Rdy_Ptr
0x00EF       [4]    _UART_Rd_Ptr
0x00F3       [1]    _receiveCommand
0x00F4       [2]    _PID_RightRPM
0x00F6       [2]    _PID_LeftRPM
0x00F8       [2]    _previousDeviation
0x00FA       [2]    _count
0x00FC       [2]    FARG_turnRight_pwmLeft
0x00FC       [2]    FARG_moveForward_pwmLeft
0x00FC       [4]    FARG_PWM1_Init_PWM_Freq
0x00FC       [4]    FARG_PWM2_Init_PWM_Freq
0x00FC       [2]    FARG_rotateAntiClockwise_pwm
0x00FC       [2]    FARG_turnLeft_pwmRight
0x00FC       [2]    FARG_rotateClockwise_pwm
0x00FE       [2]    FARG_moveForward_pwmRight
0x0100       [2]    FARG_UART1_Write_Text_uart_text
0x0100       [2]    FARG_motorLeft_reverse_pwm
0x0100       [2]    FARG_motorRight_foward_pwm
0x0100       [2]    FARG_motorLeft_foward_pwm
0x0100       [2]    FARG_motorRight_reverse_pwm
0x0102       [1]    UART1_Write_Text_data__L0
0x0103       [1]    UART1_Write_Text_counter_L0
0x0104       [1]    FARG_PWM2_Set_Duty_new_duty
0x0104       [1]    FARG_PWM1_Set_Duty_new_duty
0x0104       [1]    FARG_UART1_Write_data_
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA0_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB5_bit
0x0F81       [1]    PORTB
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC2_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC4_bit
0x0F83       [1]    PORTD
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD1_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE0_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE2_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA2_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [1]    LATB
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC4_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD5_bit
0x0F8D       [0]    LATE0_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE2_bit
0x0F8D       [0]    LATE1_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC5_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD1_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    OBF_bit
0x0F96       [0]    IBF_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [1]    TRISE
0x0F96       [0]    IBF_TRISE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [1]    PIR1
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    TXIP_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    RD_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WREN_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    RCD8_bit
0x0FAB       [0]    RC8_9_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TRMT_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    RD16_T3CON_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3CCP1_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    DC1B0_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    ADCS2_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [1]    ADCON1
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    ADCS1_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    CHS2_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [0]    SEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM3_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    RD16_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    TO__bit
0x0FD0       [1]    RCON
0x0FD1       [0]    SWDTE_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL2_bit
0x0FD3       [0]    SCS_bit
0x0FD3       [1]    OSCCON
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0SE_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    N_bit
0x0FD8       [0]    DC_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    Z_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    C_bit
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IF_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF2       [1]    INTCON
0x0FF2       [1]    INTCON1
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIEL_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [1]    TBLPTRU
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [1]    PCLATU
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [1]    STKPTR
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07FA       [2]    ?ICS?lstr18_Main_321.2V
0x07FC       [2]    ?ICS?lstr17_Main_321.2V
0x07FE       [2]    ?ICS?lstr16_Main_321.2V
0x0800       [2]    ?ICS?lstr19_Main_321.2V
0x0802       [5]    ?ICS?lstr22_Main_321.2V
0x0807       [5]    ?ICS?lstr21_Main_321.2V
0x080C       [2]    ?ICS?lstr20_Main_321.2V
0x080E      [16]    ?ICS?lstr31_Main_321.2V
0x081E      [17]    ?ICS?lstr30_Main_321.2V
0x082F      [23]    ?ICS?lstr36_Main_321.2V
0x0846       [2]    ?ICS_ConnectionEstablished
0x0848      [16]    ?ICS?lstr35_Main_321.2V
0x0858      [23]    ?ICS?lstr34_Main_321.2V
0x086F       [2]    ?ICS_debugText
0x0871       [2]    ?ICS?lstr3_Main_321.2V
0x0873      [24]    ?ICS?lstr1_Main_321.2V
0x088B      [13]    ?ICS?lstr2_Main_321.2V
0x0898       [2]    ?ICS?lstr8_Main_321.2V
0x089A       [2]    ?ICS?lstr5_Main_321.2V
0x089C       [2]    ?ICS?lstr4_Main_321.2V
0x089E       [2]    ?ICS?lstr7_Main_321.2V
0x08A0       [2]    ?ICS?lstr6_Main_321.2V
0x08A2       [2]    ?ICS?lstr12_Main_321.2V
0x08A4       [2]    ?ICS?lstr11_Main_321.2V
0x08A6       [2]    ?ICS?lstr10_Main_321.2V
0x08A8       [2]    ?ICS?lstr15_Main_321.2V
0x08AA       [2]    ?ICS?lstr14_Main_321.2V
0x08AC       [2]    ?ICS?lstr13_Main_321.2V
0x08AE       [2]    ?ICS?lstr9_Main_321.2V
//** Label List: ** 
//----------------------------------------------
  L_testMotion0
  L_testMotion1
  L_testMotion2
  L_sendSensorStatus3
  L_sendSensorStatus4
  L_sendSensorStatus5
  L_sendSensorStatus6
  L_sendSensorStatus7
  L_sendSensorStatus8
  L_sendSensorStatus9
  L_sendSensorStatus10
  L_sendSensorStatus11
  L_sendSensorStatus12
  L_sendSensorStatus13
  L_sendSensorStatus14
  L_sendSensorStatus15
  L_sendSensorStatus16
  L_sendSensorStatus17
  L_sendSensorStatus18
  L_sendSensorStatus19
  L_sendSensorStatus20
  L_sendSensorStatus21
  L_sendSensorStatus22
  L_sendSensorStatus23
  L_sendSensorStatus24
  L_sendSensorStatus25
  L_sendSensorStatus26
  L_sendSensorStatus27
  L_sendSensorStatus28
  L_sendSensorStatus29
  L_sendSensorStatus30
  L_sendSensorStatus31
  L_sendSensorStatus32
  L_testPIC33
  L_testPIC34
  L_testPIC35
  L_testPIC36
  L_testPIC37
  L_testPIC38
  L_testPIC39
  L_lineFollow40
  L_lineFollow41
  L_lineFollow42
  L_lineFollow43
  L_lineFollow44
  L_lineFollow45
  L_lineFollow46
  L_lineFollow47
  L_lineFollow48
  L_lineFollow49
  L_lineFollow50
  L_lineFollow51
  L_lineFollow52
  L_lineFollow53
  L_lineFollow54
  L_lineFollow55
  L_lineFollow56
  L_lineFollow57
  L_lineFollow58
  L_lineFollow59
  L_lineFollow60
  L_lineFollow61
  L_lineFollow62
  L_lineFollowNormal63
  L_lineFollowNormal64
  L_lineFollowNormal65
  L_lineFollowNormal66
  L_lineFollowNormal67
  L_lineFollowNormal68
  L_lineFollowNormal69
  L_lineFollowNormal70
  L_lineFollowNormal71
  L_lineFollowNormal72
  L_lineFollowNormal73
  L_lineFollowNormal74
  L_lineFollowNormal75
  L_lineFollowNormal76
  L_lineFollowNormal77
  L_lineFollowNormal78
  L_lineFollowNormal79
  L_lineFollowNormal80
  L_lineFollowNormal81
  L_lineFollowNormal82
  L_lineFollowNormal83
  L_lineFollowNormal84
  L_lineFollowNormal85
  L_lineFollowNormal86
  L_lineFollowNormal87
  L_lineFollowNormal88
  L_lineFollowNormal89
  L_lineFollowNormal90
  L_lineFollowNormal91
  L_lineFollowNormal92
  L_lineFollowNormal93
  L_lineFollowNormal94
  L_lineFollowNormal95
  L_lineFollowNormal96
  L_lineFollowNormal97
  L_lineFollowNormal98
  L_lineFollowNormal99
  L_lineFollowNormal100
  L_lineFollowNormal101
  L_lineFollowNormal102
  L_lineFollowNormal103
  L_lineFollowNormal104
  L_lineFollowNormal105
  L_lineFollowNormal106
  L_lineFollowNormal107
  L_lineFollowNormal108
  L_lineFollowNormal109
  L_lineFollowNormal110
  L_lineFollowNormal111
  L_lineFollowNormal112
  L_lineFollowNormal113
  L_lineFollowNormal114
  L_lineFollowNormal115
  L_lineFollowNormal116
  L_lineFollowNormal117
  L_lineFollowNormal118
  L_lineFollowNormal119
  L_lineFollowPID120
  L_lineFollowPID121
  L_lineFollowPID122
  L_lineFollowPID123
  L_lineFollowPID124
  L_lineFollowPID125
  L_lineFollowPID126
  L_lineFollowPID127
  L_lineFollowPID128
  L_lineFollowPID129
  L_lineFollowPID130
  L_lineFollowPID131
  L_lineFollowPID132
  L_lineFollowPID133
  L_lineFollowPID134
  L_lineFollowPID135
  L_lineFollowPID136
  L_lineFollowPID137
  L_lineFollowPID138
  L_lineFollowPID139
  L_lineFollowPID140
  L_lineFollowPID141
  L_lineFollowPID142
  L_lineFollowPID143
  L_lineFollowPID144
  L_lineFollowPID145
  L_lineFollowPID146
  L_lineFollowPID147
  L_lineFollowPID148
  L_lineFollowPID149
  L_lineFollowPID150
  L_lineFollowPID151
  L_lineFollowPID152
  L_lineFollowPID153
  L_lineFollowPID154
  L_lineFollowPID155
  L_lineFollowPID156
  L_lineFollowPID157
  L_lineFollowPID158
  L_lineFollowPID159
  L_lineFollowPID160
  L_lineFollowPID161
  L_lineFollowPID162
  L_lineFollowPID163
  L_lineFollowPID164
  L_lineFollowPID165
  L_lineFollowPID166
  L_lineFollowPID167
  L_lineFollowPID168
  L_lineFollowPID169
  L_lineFollowPID170
  L_lineFollowPID171
  L_lineFollowPID172
  L_lineFollowPID173
  L_lineFollowPID174
  L_lineFollowPID175
  L_lineFollowPID176
  L_lineFollowPID177
  L_lineFollowPID178
  L_main179
  L_main180
  L_main181
  L_main182
  L_main183
  L__lineFollow184
  L__lineFollow185
  L__lineFollow186
  L__lineFollow187
  L__lineFollow188
  L__lineFollowNormal189
  L__lineFollowNormal190
  L__lineFollowNormal191
  L__lineFollowNormal192
  L__lineFollowNormal193
  L__lineFollowNormal194
  L__lineFollowNormal195
  L__lineFollowNormal196
  L__lineFollowNormal197
  L__lineFollowNormal198
  L__lineFollowNormal199
  L__lineFollowNormal200
  L__lineFollowNormal201
  L__lineFollowPID202
  L__lineFollowPID203
  L__lineFollowPID204
  L__lineFollowPID205
  L__lineFollowPID206
  L__lineFollowPID207
  L__lineFollowPID208
  L__lineFollowPID209
  L__lineFollowPID210
  L__lineFollowPID211
  L__lineFollowPID212
  L__lineFollowPID213
  L__lineFollowPID214
  L__lineFollowPID215
  L__lineFollowPID216
  L__lineFollowPID217
  L__lineFollowPID218
  L__lineFollowPID219
  _motorLeft_foward
  _motorRight_foward
  _motorLeft_reverse
  _motorRight_reverse
  _motorLeft_stop
  _motorRight_stop
  _moveForward
  _turnRight
  _turnLeft
  _rotateClockwise
  _rotateAntiClockwise
  _stop
  _testMotion
  _sendSensorStatus
  _testPIC
  L__testPIC220
  _lineFollow
  _lineFollowNormal
  _setPID
  _lineFollowPID
  _configure
  _main
  L__main221
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
