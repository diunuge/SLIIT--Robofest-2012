;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/13/2012 9:13:35 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF015EF19  	GOTO        10802
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x001C	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x001E	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0020	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
0x0022	0x0012      	RETURN      0
; end of _FIXSIGN32
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x0024	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x0026	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x0028	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x002A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x002C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x002E	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x0032	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x0036	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x0038	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x003A	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x003E	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x0042	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x0044	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x0046	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x0048	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x004A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x004C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x004E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x0050	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x0052	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x0054	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x0056	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x0058	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x005A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x005C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x005E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x0060	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x0062	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x0066	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x006A	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x006E	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x0072	0x0012      	RETURN      0
; end of _Mul_16x16_U
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x0074	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x0076	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x0078	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x007A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x007C	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x007E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
0x0080	0x0012      	RETURN      0
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0082	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0084	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0086	0xF000EF4C  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x008A	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x008C	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x008E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x0090	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0092	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0094	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0096	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0098	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
0x009A	0x0012      	RETURN      0
; end of _SETFUN32
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x009C	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x009E	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x00A0	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
0x00A2	0x0012      	RETURN      0
; end of _SETFDZ32
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x00A4	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x00A6	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x00A8	0xF000EF5E  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x00AC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x00AE	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x00B0	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x00B2	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x00B4	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x00B6	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x00B8	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x00BA	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x00BC	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
0x00BE	0x0012      	RETURN      0
; end of _SETIOV3224
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x00C0	0xB2AC      	BTFSC       TXSTA, 1 
0x00C2	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x00C4	0x0000      	NOP
0x00C6	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x00C8	0xFFADC1A3  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
0x00CC	0x0012      	RETURN      0
; end of _UART1_Write
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x00CE	0x50CB      	MOVF        PR2, 0 
0x00D0	0x0F01      	ADDLW       1
0x00D2	0x6E00      	MOVWF       R0 
0x00D4	0x6A01      	CLRF        R1 
0x00D6	0x0E00      	MOVLW       0
0x00D8	0x2201      	ADDWFC      R1, 1 
0x00DA	0xF004C1A3  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x00DE	0x0E00      	MOVLW       0
0x00E0	0x6E05      	MOVWF       R5 
0x00E2	0xDFA0      	RCALL       _Mul_16x16_U
0x00E4	0x0E06      	MOVLW       6
0x00E6	0x6E02      	MOVWF       R2 
0x00E8	0xF004C000  	MOVFF       R0, R4
0x00EC	0xF005C001  	MOVFF       R1, R5
0x00F0	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty0:
0x00F2	0xE005      	BZ          L__PWM2_Set_Duty1
0x00F4	0x3205      	RRCF        R5, 1 
0x00F6	0x3204      	RRCF        R4, 1 
0x00F8	0x9E05      	BCF         R5, 7 
0x00FA	0x0FFF      	ADDLW       255
0x00FC	0xD7FA      	BRA         L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x00FE	0x0E04      	MOVLW       4
0x0100	0x6E01      	MOVWF       R1 
0x0102	0xF000C004  	MOVFF       R4, R0
0x0106	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty2:
0x0108	0xE004      	BZ          L__PWM2_Set_Duty3
0x010A	0x3600      	RLCF        R0, 1 
0x010C	0x9000      	BCF         R0, 0 
0x010E	0x0FFF      	ADDLW       255
0x0110	0xD7FB      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x0112	0x0E30      	MOVLW       48
0x0114	0x1400      	ANDWF       R0, 0 
0x0116	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x0118	0xF000C004  	MOVFF       R4, R0
0x011C	0xF001C005  	MOVFF       R5, R1
0x0120	0x3201      	RRCF        R1, 1 
0x0122	0x3200      	RRCF        R0, 1 
0x0124	0x9E01      	BCF         R1, 7 
0x0126	0x3201      	RRCF        R1, 1 
0x0128	0x3200      	RRCF        R0, 1 
0x012A	0x9E01      	BCF         R1, 7 
0x012C	0xFFBBC000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x0130	0x0E0F      	MOVLW       15
0x0132	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x0134	0x5003      	MOVF        R3, 0 
0x0136	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
0x0138	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x013A	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x013C	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x013E	0xF000EFA7  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x0142	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x0144	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x0146	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x0148	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x014A	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x014C	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x014E	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
0x0150	0x0012      	RETURN      0
; end of _SETFOV32
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0152	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x0154	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x0156	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x0158	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x015A	0xF000EFC2  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x015E	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0162	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x0166	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x0168	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x016A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x016C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x016E	0xF000EFC2  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0172	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x0176	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x0178	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x017A	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x017C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x017E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x0180	0xF000EFD4  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x0184	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x0186	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x0188	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x018A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x018C	0xF000EFD9  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x0190	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x0192	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x0194	0xF000EFDE  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x0198	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x019A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x019C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x019E	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x01A0	0xF000EFC9  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x01A4	0xF000EFD9  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x01A8	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x01AA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x01AC	0xDF63      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x01AE	0xF000EFE1  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x01B2	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x01B4	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x01B6	0xDF65      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x01B8	0xF000EFE1  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x01BC	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x01BE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x01C0	0xDF2D      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
0x01C2	0x0012      	RETURN      0
; end of _NRM3232
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x01C4	0x50CB      	MOVF        PR2, 0 
0x01C6	0x0F01      	ADDLW       1
0x01C8	0x6E00      	MOVWF       R0 
0x01CA	0x6A01      	CLRF        R1 
0x01CC	0x0E00      	MOVLW       0
0x01CE	0x2201      	ADDWFC      R1, 1 
0x01D0	0xF004C1A3  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x01D4	0x0E00      	MOVLW       0
0x01D6	0x6E05      	MOVWF       R5 
0x01D8	0xDF25      	RCALL       _Mul_16x16_U
0x01DA	0x0E06      	MOVLW       6
0x01DC	0x6E02      	MOVWF       R2 
0x01DE	0xF004C000  	MOVFF       R0, R4
0x01E2	0xF005C001  	MOVFF       R1, R5
0x01E6	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty4:
0x01E8	0xE005      	BZ          L__PWM1_Set_Duty5
0x01EA	0x3205      	RRCF        R5, 1 
0x01EC	0x3204      	RRCF        R4, 1 
0x01EE	0x9E05      	BCF         R5, 7 
0x01F0	0x0FFF      	ADDLW       255
0x01F2	0xD7FA      	BRA         L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,48 :: 		
0x01F4	0x0E04      	MOVLW       4
0x01F6	0x6E01      	MOVWF       R1 
0x01F8	0xF000C004  	MOVFF       R4, R0
0x01FC	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty6:
0x01FE	0xE004      	BZ          L__PWM1_Set_Duty7
0x0200	0x3600      	RLCF        R0, 1 
0x0202	0x9000      	BCF         R0, 0 
0x0204	0x0FFF      	ADDLW       255
0x0206	0xD7FB      	BRA         L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x0208	0x0E30      	MOVLW       48
0x020A	0x1400      	ANDWF       R0, 0 
0x020C	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x020E	0xF000C004  	MOVFF       R4, R0
0x0212	0xF001C005  	MOVFF       R5, R1
0x0216	0x3201      	RRCF        R1, 1 
0x0218	0x3200      	RRCF        R0, 1 
0x021A	0x9E01      	BCF         R1, 7 
0x021C	0x3201      	RRCF        R1, 1 
0x021E	0x3200      	RRCF        R0, 1 
0x0220	0x9E01      	BCF         R1, 7 
0x0222	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x0226	0x0E0F      	MOVLW       15
0x0228	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x022A	0x5003      	MOVF        R3, 0 
0x022C	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
0x022E	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_motorRight_stop:
;motion.h,59 :: 		void motorRight_stop(){
;motion.h,60 :: 		Motor_Right_Forward = 1;
0x0230	0x8882      	BSF         PORTC, 4 
;motion.h,61 :: 		Motor_Right_Reverse = 1;
0x0232	0x8A82      	BSF         PORTC, 5 
;motion.h,62 :: 		}
0x0234	0x0012      	RETURN      0
; end of _motorRight_stop
_motorLeft_foward:
;motion.h,30 :: 		void motorLeft_foward(int pwm){
;motion.h,31 :: 		Motor_Left_Forward = 1;
0x0236	0x8483      	BSF         PORTD, 2 
;motion.h,32 :: 		Motor_Left_Reverse = 0;
0x0238	0x9683      	BCF         PORTD, 3 
;motion.h,33 :: 		PWM2_Set_Duty(pwm);
0x023A	0xF1A3C19F  	MOVFF       FARG_motorLeft_foward_pwm, FARG_PWM2_Set_Duty_new_duty
0x023E	0xDF47      	RCALL       _PWM2_Set_Duty
;motion.h,34 :: 		}
0x0240	0x0012      	RETURN      0
; end of _motorLeft_foward
_motorRight_reverse:
;motion.h,48 :: 		void motorRight_reverse(int pwm){
;motion.h,49 :: 		Motor_Right_Forward = 0;
0x0242	0x9882      	BCF         PORTC, 4 
;motion.h,50 :: 		Motor_Right_Reverse = 1;
0x0244	0x8A82      	BSF         PORTC, 5 
;motion.h,51 :: 		PWM1_Set_Duty(pwm);
0x0246	0xF1A3C19F  	MOVFF       FARG_motorRight_reverse_pwm, FARG_PWM1_Set_Duty_new_duty
0x024A	0xDFBC      	RCALL       _PWM1_Set_Duty
;motion.h,52 :: 		}
0x024C	0x0012      	RETURN      0
; end of _motorRight_reverse
_motorLeft_stop:
;motion.h,54 :: 		void motorLeft_stop(){
;motion.h,55 :: 		Motor_Left_Forward = 1;
0x024E	0x8483      	BSF         PORTD, 2 
;motion.h,56 :: 		Motor_Left_Reverse = 1;
0x0250	0x8683      	BSF         PORTD, 3 
;motion.h,57 :: 		}
0x0252	0x0012      	RETURN      0
; end of _motorLeft_stop
_Word2Double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x0254	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x0256	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x0258	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x025A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x025C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x025E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x0260	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x0262	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x0264	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x0266	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x0268	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x026A	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x026C	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x0270	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x0274	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x0276	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x0278	0xDF6C      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
0x027A	0x0012      	RETURN      0
; end of _Word2Double
_motorRight_foward:
;motion.h,36 :: 		void motorRight_foward(int pwm){
;motion.h,37 :: 		Motor_Right_Forward = 1;
0x027C	0x8882      	BSF         PORTC, 4 
;motion.h,38 :: 		Motor_Right_Reverse = 0;
0x027E	0x9A82      	BCF         PORTC, 5 
;motion.h,39 :: 		PWM1_Set_Duty(pwm);
0x0280	0xF1A3C19F  	MOVFF       FARG_motorRight_foward_pwm, FARG_PWM1_Set_Duty_new_duty
0x0284	0xDF9F      	RCALL       _PWM1_Set_Duty
;motion.h,40 :: 		}
0x0286	0x0012      	RETURN      0
; end of _motorRight_foward
_motorLeft_reverse:
;motion.h,42 :: 		void motorLeft_reverse(int pwm){
;motion.h,43 :: 		Motor_Left_Forward = 0;
0x0288	0x9483      	BCF         PORTD, 2 
;motion.h,44 :: 		Motor_Left_Reverse = 1;
0x028A	0x8683      	BSF         PORTD, 3 
;motion.h,45 :: 		PWM2_Set_Duty(pwm);
0x028C	0xF1A3C19F  	MOVFF       FARG_motorLeft_reverse_pwm, FARG_PWM2_Set_Duty_new_duty
0x0290	0xDF1E      	RCALL       _PWM2_Set_Duty
;motion.h,46 :: 		}
0x0292	0x0012      	RETURN      0
; end of _motorLeft_reverse
_NRM4032:
;__Lib_MathDouble.c,174 :: 		
;__Lib_MathDouble.c,183 :: 		
0x0294	0xB00C      	BTFSC       R12, 0, 0
;__Lib_MathDouble.c,184 :: 		
0x0296	0xF001EF8C  	GOTO        NRMRND4032
;__Lib_MathDouble.c,185 :: 		
0x029A	0xA20C      	BTFSS       R12, 1, 0
;__Lib_MathDouble.c,186 :: 		
0x029C	0xF002EF32  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,188 :: 		
0x02A0	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,189 :: 		
0x02A2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,190 :: 		
0x02A4	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,191 :: 		
0x02A6	0xF001EFA3  	GOTO        NRM4032A
;__Lib_MathDouble.c,194 :: 		
0x02AA	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,195 :: 		
0x02AC	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,196 :: 		
0x02AE	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,197 :: 		
0x02B0	0xF001EF6E  	GOTO        NORM4032
;__Lib_MathDouble.c,199 :: 		
0x02B4	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,200 :: 		
0x02B6	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,201 :: 		
0x02B8	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,202 :: 		
0x02BA	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,204 :: 		
0x02BC	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,205 :: 		
0x02BE	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,206 :: 		
0x02C0	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,207 :: 		
0x02C2	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,208 :: 		
0x02C4	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,209 :: 		
0x02C6	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,211 :: 		
0x02C8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,212 :: 		
0x02CA	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,213 :: 		
0x02CC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,214 :: 		
0x02CE	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,215 :: 		
0x02D0	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,216 :: 		
0x02D2	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,218 :: 		
0x02D4	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,219 :: 		
0x02D6	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,220 :: 		
0x02D8	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,222 :: 		
0x02DA	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,224 :: 		
NORM4032:
;__Lib_MathDouble.c,225 :: 		
0x02DC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,227 :: 		
0x02DE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,228 :: 		
0x02E0	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,229 :: 		
0x02E4	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,230 :: 		
0x02E6	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,231 :: 		
0x02E8	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,232 :: 		
0x02EA	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,233 :: 		
0x02EC	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,234 :: 		
0x02EE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,235 :: 		
0x02F0	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,236 :: 		
0x02F4	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,237 :: 		
0x02F6	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,238 :: 		
0x02F8	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,239 :: 		
0x02FA	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,240 :: 		
0x02FC	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,241 :: 		
0x02FE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,242 :: 		
0x0300	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,243 :: 		
0x0304	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,244 :: 		
0x0306	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,245 :: 		
0x0308	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,246 :: 		
0x030A	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,247 :: 		
0x030C	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,249 :: 		
TNORMUN4032:
;__Lib_MathDouble.c,250 :: 		
0x030E	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,251 :: 		
0x0310	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,252 :: 		
0x0312	0xF002EF28  	GOTO        NRM40JPSETFUN32
;__Lib_MathDouble.c,253 :: 		
0x0316	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,255 :: 		
NRMRND4032:
;__Lib_MathDouble.c,256 :: 		
0x0318	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,257 :: 		
0x031A	0xAE08      	BTFSS       R8, 7, 0
;__Lib_MathDouble.c,258 :: 		
0x031C	0xF002EF2D  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,259 :: 		
0x0320	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,260 :: 		
0x0322	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,261 :: 		
0x0324	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,262 :: 		
0x0326	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,263 :: 		
0x0328	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,264 :: 		
0x032A	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,265 :: 		
0x032C	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,266 :: 		
0x032E	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,268 :: 		
0x0330	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,269 :: 		
0x0332	0xF002EF2D  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,270 :: 		
0x0336	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,271 :: 		
0x0338	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,272 :: 		
0x033A	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,273 :: 		
0x033C	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,274 :: 		
0x033E	0xF002EF32  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,275 :: 		
0x0342	0xF002EF2D  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,277 :: 		
NRM4032A:
;__Lib_MathDouble.c,278 :: 		
0x0346	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,279 :: 		
0x034A	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,280 :: 		
0x034E	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,281 :: 		
0x0352	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,282 :: 		
0x0354	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,283 :: 		
0x0356	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,284 :: 		
0x0358	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,285 :: 		
0x035A	0xF001EFDA  	GOTO        NRM4032B
;__Lib_MathDouble.c,288 :: 		
0x035E	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,289 :: 		
0x0360	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,290 :: 		
0x0362	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,291 :: 		
0x0364	0xF001EFC2  	GOTO        NORM4032A
;__Lib_MathDouble.c,292 :: 		
0x0368	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,293 :: 		
0x036A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,294 :: 		
0x036C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,295 :: 		
0x036E	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,297 :: 		
0x0370	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,298 :: 		
0x0372	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,299 :: 		
0x0374	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,300 :: 		
0x0376	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,301 :: 		
0x0378	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,302 :: 		
0x037A	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,304 :: 		
0x037C	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,305 :: 		
0x037E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,306 :: 		
0x0380	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,308 :: 		
0x0382	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,310 :: 		
NORM4032A:
;__Lib_MathDouble.c,311 :: 		
0x0384	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,313 :: 		
0x0386	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,314 :: 		
0x0388	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,315 :: 		
0x038C	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,316 :: 		
0x038E	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,317 :: 		
0x0390	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,318 :: 		
0x0392	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,319 :: 		
0x0394	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,320 :: 		
0x0396	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,321 :: 		
0x039A	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,322 :: 		
0x039C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,323 :: 		
0x039E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,324 :: 		
0x03A0	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,325 :: 		
0x03A2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,326 :: 		
0x03A4	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,327 :: 		
0x03A8	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,328 :: 		
0x03AA	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,329 :: 		
0x03AC	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,330 :: 		
0x03AE	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,331 :: 		
0x03B0	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,333 :: 		
NRM4032B:
;__Lib_MathDouble.c,334 :: 		
0x03B4	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,335 :: 		
0x03B8	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,336 :: 		
0x03BC	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,337 :: 		
0x03BE	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,338 :: 		
0x03C0	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,339 :: 		
0x03C2	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,340 :: 		
0x03C4	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,341 :: 		
0x03C6	0xF002EF07  	GOTO        NRM4032C
;__Lib_MathDouble.c,344 :: 		
0x03CA	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,345 :: 		
0x03CC	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,346 :: 		
0x03CE	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,347 :: 		
0x03D0	0xF001EFF2  	GOTO        NORM4032B
;__Lib_MathDouble.c,349 :: 		
0x03D4	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,350 :: 		
0x03D6	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,351 :: 		
0x03D8	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,352 :: 		
0x03DA	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,354 :: 		
0x03DC	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,355 :: 		
0x03DE	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,356 :: 		
0x03E0	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,358 :: 		
0x03E2	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,360 :: 		
NORM4032B:
;__Lib_MathDouble.c,361 :: 		
0x03E4	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,362 :: 		
0x03E6	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,363 :: 		
0x03E8	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,364 :: 		
0x03EC	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,365 :: 		
0x03EE	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,366 :: 		
0x03F0	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,367 :: 		
0x03F2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,368 :: 		
0x03F4	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,369 :: 		
0x03F8	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,370 :: 		
0x03FA	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,371 :: 		
0x03FC	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,372 :: 		
0x03FE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,373 :: 		
0x0400	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,374 :: 		
0x0404	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,375 :: 		
0x0406	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,376 :: 		
0x0408	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,377 :: 		
0x040A	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,379 :: 		
NRM4032C:
;__Lib_MathDouble.c,380 :: 		
0x040E	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,381 :: 		
0x0412	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,382 :: 		
0x0414	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,383 :: 		
0x0416	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,384 :: 		
0x0418	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,385 :: 		
0x041A	0xF002EF37  	GOTO        NRM40JPRES032
;__Lib_MathDouble.c,388 :: 		
0x041E	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,389 :: 		
0x0420	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,390 :: 		
0x0422	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,391 :: 		
0x0424	0xF002EF16  	GOTO        NORM4032C
;__Lib_MathDouble.c,392 :: 		
0x0428	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,394 :: 		
0x042A	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,396 :: 		
NORM4032C:
;__Lib_MathDouble.c,397 :: 		
0x042C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,399 :: 		
0x042E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,400 :: 		
0x0430	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,401 :: 		
0x0434	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,402 :: 		
0x0436	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,403 :: 		
0x0438	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,404 :: 		
0x043A	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,405 :: 		
0x043E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,406 :: 		
0x0440	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,407 :: 		
0x0442	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,408 :: 		
0x0444	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,409 :: 		
0x0448	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,410 :: 		
0x044A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,411 :: 		
0x044C	0xF001EF87  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,413 :: 		
NRM40JPSETFUN32:
;__Lib_MathDouble.c,414 :: 		
0x0450	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,415 :: 		
0x0452	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,417 :: 		
0x0454	0xDE16      	RCALL       _SETFUN32
;__Lib_MathDouble.c,419 :: 		
0x0456	0xF002EF3A  	GOTO        NRM40EEE
;__Lib_MathDouble.c,420 :: 		
NRM40JPFIXSIGN32:
;__Lib_MathDouble.c,421 :: 		
0x045A	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,422 :: 		
0x045C	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,424 :: 		
0x045E	0xDDDE      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,426 :: 		
0x0460	0xF002EF3A  	GOTO        NRM40EEE
;__Lib_MathDouble.c,427 :: 		
NRM40JPSETFOV32:
;__Lib_MathDouble.c,428 :: 		
0x0464	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,429 :: 		
0x0466	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,431 :: 		
0x0468	0xDE68      	RCALL       _SETFOV32
;__Lib_MathDouble.c,433 :: 		
0x046A	0xF002EF3A  	GOTO        NRM40EEE
;__Lib_MathDouble.c,434 :: 		
NRM40JPRES032:
;__Lib_MathDouble.c,435 :: 		
0x046E	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,436 :: 		
0x0470	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,438 :: 		
0x0472	0xDE00      	RCALL       _RES032
;__Lib_MathDouble.c,440 :: 		
NRM40EEE:
;__Lib_MathDouble.c,448 :: 		
0x0474	0x0012      	RETURN      0
; end of _NRM4032
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0476	0x0101      	MOVLB       1
0x0478	0x6BA2      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x047A	0xFFE9C19F  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x047E	0xFFEAC1A0  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0482	0xF1A1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0486	0x51A1      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0488	0x0A00      	XORLW       0
0x048A	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x048C	0xF1A3C1A1  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0490	0xDE17      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x0492	0x0101      	MOVLB       1
0x0494	0x2BA2      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0496	0x51A2      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0498	0x259F      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x049A	0x6EE9      	MOVWF       FSR0L 
0x049C	0x0E00      	MOVLW       0
0x049E	0x21A0      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x04A0	0x6EEA      	MOVWF       FSR0H 
0x04A2	0xF1A1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x04A6	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
0x04A8	0x0012      	RETURN      0
; end of _UART1_Write_Text
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x04AA	0x5004      	MOVF        R4, 0 
0x04AC	0x0A00      	XORLW       0
0x04AE	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x04B0	0x5005      	MOVF        R5, 0 
0x04B2	0x0A00      	XORLW       0
0x04B4	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x04B6	0x5006      	MOVF        R6, 0 
0x04B8	0x0A00      	XORLW       0
0x04BA	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x04BC	0x5007      	MOVF        R7, 0 
0x04BE	0x0A00      	XORLW       0
0x04C0	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x04C2	0x0EFF      	MOVLW       255
0x04C4	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x04C6	0x0EFF      	MOVLW       255
0x04C8	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x04CA	0x0E7F      	MOVLW       127
0x04CC	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x04CE	0x0EFF      	MOVLW       255
0x04D0	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x04D2	0x0012      	RETURN      0
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x04D4	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x04D6	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x04D8	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x04DA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x04DC	0xF003EF00  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x04E0	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x04E2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x04E4	0xF003EF04  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x04E8	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x04EA	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x04EC	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x04EE	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x04F0	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x04F2	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x04F4	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x04F8	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x04FC	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x0500	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x0502	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x0504	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x0506	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x0508	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x050A	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x050C	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x050E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x0510	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x0512	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x0514	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x0516	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x0518	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x051A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x051C	0xF002EF97  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x0520	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x0522	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x0524	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x0526	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x0528	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x052A	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x052C	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x052E	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x0530	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x0532	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x0534	0xF002EFA4  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x0538	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x053A	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x053C	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x053E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x0540	0xF003EF08  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x0544	0xF002EFAA  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x0548	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x054A	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x054C	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x054E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x0550	0xF003EF0C  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x0554	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x0556	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x0558	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x055A	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x055C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x055E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x0560	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x0562	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x0564	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x0566	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x0568	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x056A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x056C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x056E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x0570	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x0572	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x0574	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x0576	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x0578	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x057A	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x057C	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x057E	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x0580	0xF002EFC5  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x0584	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x0586	0xF002EFD0  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x058A	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x058C	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x058E	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x0590	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x0592	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x0594	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x0596	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x0598	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x059A	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x059C	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x059E	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x05A0	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x05A2	0xF002EFAC  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x05A6	0xF002EFF6  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x05AA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x05AC	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x05AE	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x05B0	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x05B2	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x05B4	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x05B6	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x05B8	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x05BA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x05BC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x05BE	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x05C0	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x05C2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x05C4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x05C6	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x05C8	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x05CA	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x05CC	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x05CE	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x05D0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x05D2	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x05D4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x05D6	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x05D8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x05DA	0xF002EFF6  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x05DE	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x05E0	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x05E2	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x05E4	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x05E6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x05E8	0xF003EF08  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x05EC	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x05EE	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x05F0	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x05F2	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x05F4	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x05F6	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x05F8	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x05FA	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x05FC	0xF003EF0E  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x0600	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x0602	0xDD4C      	RCALL       _SETFDZ32
;__Lib_MathDouble.c,1518 :: 		
0x0604	0xF003EF0E  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x0608	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x060A	0xDD34      	RCALL       _RES032
;__Lib_MathDouble.c,1525 :: 		
0x060C	0xF003EF0E  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x0610	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x0612	0xDD93      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1532 :: 		
0x0614	0xF003EF0E  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x0618	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x061A	0xDD33      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
0x061C	0x0012      	RETURN      0
; end of _Div_32x32_FP
_Mul_32x32_FP:
;__Lib_MathDouble.c,1130 :: 		
;__Lib_MathDouble.c,1148 :: 		
0x061E	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1149 :: 		
0x0620	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1151 :: 		
0x0622	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1152 :: 		
0x0624	0x6207      	CPFSEQ      R7, 0
;__Lib_MathDouble.c,1153 :: 		
0x0626	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,1154 :: 		
0x0628	0xF003EF94  	GOTO        MULJPRES032
;__Lib_MathDouble.c,1157 :: 		
0x062C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1158 :: 		
0x062E	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1159 :: 		
0x0630	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1161 :: 		
0x0632	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1162 :: 		
0x0634	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1163 :: 		
0x0636	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1164 :: 		
0x0638	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1165 :: 		
0x063A	0xF003EF25  	GOTO        MTUN32
;__Lib_MathDouble.c,1167 :: 		
0x063E	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1168 :: 		
0x0640	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1169 :: 		
0x0642	0xF003EF98  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1170 :: 		
0x0646	0xF003EF29  	GOTO        MOK32
;__Lib_MathDouble.c,1172 :: 		
MTUN32:
;__Lib_MathDouble.c,1173 :: 		
0x064A	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1174 :: 		
0x064C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1175 :: 		
0x064E	0xF003EF9C  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1177 :: 		
MOK32:
;__Lib_MathDouble.c,1178 :: 		
0x0652	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1179 :: 		
0x0654	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1181 :: 		
0x0656	0xF00EC002  	MOVFF       R2, R14
;__Lib_MathDouble.c,1182 :: 		
0x065A	0xF00BC001  	MOVFF       R1, R11
;__Lib_MathDouble.c,1183 :: 		
0x065E	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1185 :: 		
0x0662	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1186 :: 		
0x0664	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1187 :: 		
0x0666	0xF00CCFF4  	MOVFF       PRODH, R12
;__Lib_MathDouble.c,1189 :: 		
0x066A	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1190 :: 		
0x066C	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1191 :: 		
0x066E	0xF000CFF4  	MOVFF       PRODH, R0
;__Lib_MathDouble.c,1192 :: 		
0x0672	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_MathDouble.c,1194 :: 		
0x0676	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1195 :: 		
0x0678	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1196 :: 		
0x067A	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1197 :: 		
0x067C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1198 :: 		
0x067E	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1199 :: 		
0x0680	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1200 :: 		
0x0682	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1202 :: 		
0x0684	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1203 :: 		
0x0686	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1204 :: 		
0x0688	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1205 :: 		
0x068A	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1206 :: 		
0x068C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1207 :: 		
0x068E	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1208 :: 		
0x0690	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1209 :: 		
0x0692	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1211 :: 		
0x0694	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1212 :: 		
0x0696	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1213 :: 		
0x0698	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1214 :: 		
0x069A	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1215 :: 		
0x069C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1216 :: 		
0x069E	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1217 :: 		
0x06A0	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1218 :: 		
0x06A2	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1219 :: 		
0x06A4	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1220 :: 		
0x06A6	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1221 :: 		
0x06A8	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1222 :: 		
0x06AA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1223 :: 		
0x06AC	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1224 :: 		
0x06AE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1225 :: 		
0x06B0	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1227 :: 		
0x06B2	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1228 :: 		
0x06B4	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1229 :: 		
0x06B6	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1230 :: 		
0x06B8	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1231 :: 		
0x06BA	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1232 :: 		
0x06BC	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1233 :: 		
0x06BE	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1234 :: 		
0x06C0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1235 :: 		
0x06C2	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1236 :: 		
0x06C4	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1238 :: 		
0x06C6	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,1239 :: 		
0x06C8	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1240 :: 		
0x06CA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1241 :: 		
0x06CC	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1242 :: 		
0x06CE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1243 :: 		
0x06D0	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1244 :: 		
0x06D2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1245 :: 		
0x06D4	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1247 :: 		
0x06D6	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,1248 :: 		
0x06D8	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1249 :: 		
0x06DA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1250 :: 		
0x06DC	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1251 :: 		
0x06DE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1252 :: 		
0x06E0	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1254 :: 		
0x06E2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1255 :: 		
0x06E4	0xF003EF7C  	GOTO        MROUND32
;__Lib_MathDouble.c,1256 :: 		
0x06E8	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1257 :: 		
0x06EA	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1258 :: 		
0x06EC	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1259 :: 		
0x06EE	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1260 :: 		
0x06F0	0x0603      	DECF        R3, 1, 0
;__Lib_MathDouble.c,1261 :: 		
0x06F2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1262 :: 		
0x06F4	0xF003EF9C  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1264 :: 		
MROUND32:
;__Lib_MathDouble.c,1267 :: 		
0x06F8	0xF003EF8F  	GOTO        MUL32OK
;__Lib_MathDouble.c,1268 :: 		
0x06FC	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,1269 :: 		
0x06FE	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,1270 :: 		
0x0700	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,1271 :: 		
0x0702	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,1272 :: 		
0x0704	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1273 :: 		
0x0706	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1274 :: 		
0x0708	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1275 :: 		
0x070A	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1277 :: 		
0x070C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1278 :: 		
0x070E	0xF003EF8F  	GOTO        MUL32OK
;__Lib_MathDouble.c,1279 :: 		
0x0712	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1280 :: 		
0x0714	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1281 :: 		
0x0716	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1282 :: 		
0x0718	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,1283 :: 		
0x071A	0xF003EF98  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1285 :: 		
MUL32OK:
;__Lib_MathDouble.c,1286 :: 		
0x071E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1287 :: 		
0x0720	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,1289 :: 		
0x0722	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1290 :: 		
0x0724	0xF003EF9E  	GOTO        MULEEE
;__Lib_MathDouble.c,1291 :: 		
MULJPRES032:
;__Lib_MathDouble.c,1292 :: 		
0x0728	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1295 :: 		
0x072A	0xDCA4      	RCALL       _RES032
;__Lib_MathDouble.c,1297 :: 		
0x072C	0xF003EF9E  	GOTO        MULEEE
;__Lib_MathDouble.c,1298 :: 		
MULJPSETFOV32:
;__Lib_MathDouble.c,1299 :: 		
0x0730	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1302 :: 		
0x0732	0xDD03      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1304 :: 		
0x0734	0xF003EF9E  	GOTO        MULEEE
;__Lib_MathDouble.c,1305 :: 		
MULJPSETFUN32:
;__Lib_MathDouble.c,1306 :: 		
0x0738	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1309 :: 		
0x073A	0xDCA3      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1311 :: 		
MULEEE:
;__Lib_MathDouble.c,1318 :: 		
0x073C	0x0012      	RETURN      0
; end of _Mul_32x32_FP
_Double2Int:
;__Lib_MathDouble.c,1897 :: 		
;__Lib_MathDouble.c,1906 :: 		
0x073E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1907 :: 		
0x0740	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1908 :: 		
0x0742	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1909 :: 		
0x0744	0xF003EFE5  	GOTO        IRES016
;__Lib_MathDouble.c,1910 :: 		
0x0748	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1911 :: 		
0x074A	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1912 :: 		
0x074C	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1914 :: 		
0x074E	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,1915 :: 		
0x0750	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1916 :: 		
0x0752	0xAE03      	BTFSS       R3, 7, 0
;__Lib_MathDouble.c,1917 :: 		
0x0754	0xF003EFE9  	GOTO        SETIOV16
;__Lib_MathDouble.c,1918 :: 		
0x0758	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1920 :: 		
0x075A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1921 :: 		
0x075C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1922 :: 		
0x075E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1923 :: 		
0x0760	0xF003EFC4  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1924 :: 		
0x0764	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1925 :: 		
0x0766	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1926 :: 		
0x0768	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1927 :: 		
0x076C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1929 :: 		
0x076E	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1930 :: 		
0x0770	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1931 :: 		
0x0772	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1932 :: 		
0x0774	0xF003EFC4  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1933 :: 		
0x0778	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1934 :: 		
0x077A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1935 :: 		
0x077C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1937 :: 		
0x077E	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1938 :: 		
0x0780	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1939 :: 		
0x0782	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1940 :: 		
0x0784	0xF003EFCE  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1941 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1942 :: 		
0x0788	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1943 :: 		
0x078A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1944 :: 		
0x078C	0xF003EFCE  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1945 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1946 :: 		
0x0790	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1947 :: 		
0x0792	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1948 :: 		
0x0794	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1949 :: 		
0x0796	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1950 :: 		
0x0798	0xF003EFC8  	GOTO        SHIFT3216
;__Lib_MathDouble.c,1951 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1952 :: 		
0x079C	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1953 :: 		
0x079E	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,1954 :: 		
0x07A0	0xF003EFDB  	GOTO        INT3216OK
;__Lib_MathDouble.c,1955 :: 		
0x07A4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1956 :: 		
0x07A6	0xF003EFDB  	GOTO        INT3216OK
;__Lib_MathDouble.c,1957 :: 		
0x07AA	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1958 :: 		
0x07AC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1959 :: 		
0x07AE	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1960 :: 		
0x07B0	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1961 :: 		
0x07B2	0xF003EFF8  	GOTO        JPJSETIOV3224
;__Lib_MathDouble.c,1962 :: 		
INT3216OK:
;__Lib_MathDouble.c,1963 :: 		
0x07B6	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1964 :: 		
0x07B8	0xF003EFFD  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1966 :: 		
0x07BC	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1967 :: 		
0x07BE	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1968 :: 		
0x07C0	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1969 :: 		
0x07C2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1970 :: 		
0x07C4	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1971 :: 		
0x07C6	0xF003EFFD  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1973 :: 		
IRES016:
;__Lib_MathDouble.c,1974 :: 		
0x07CA	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1975 :: 		
0x07CC	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1976 :: 		
0x07CE	0xF003EFFD  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1977 :: 		
SETIOV16:
;__Lib_MathDouble.c,1978 :: 		
0x07D2	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1979 :: 		
0x07D4	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1980 :: 		
0x07D6	0xF004EF01  	GOTO        INT3216EER
;__Lib_MathDouble.c,1982 :: 		
0x07DA	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1983 :: 		
0x07DC	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1984 :: 		
0x07DE	0xF004EF01  	GOTO        INT3216EER
;__Lib_MathDouble.c,1985 :: 		
0x07E2	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1986 :: 		
0x07E4	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1987 :: 		
0x07E6	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1988 :: 		
0x07E8	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1989 :: 		
0x07EA	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1990 :: 		
0x07EC	0xF004EF01  	GOTO        INT3216EER
;__Lib_MathDouble.c,1992 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1993 :: 		
0x07F0	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1994 :: 		
0x07F2	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1996 :: 		
0x07F4	0xDC57      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,1998 :: 		
0x07F6	0xF004EF03  	GOTO        INT3216EEE
;__Lib_MathDouble.c,1999 :: 		
INT3216EOK:
;__Lib_MathDouble.c,2000 :: 		
0x07FA	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2001 :: 		
0x07FC	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2002 :: 		
0x07FE	0xF004EF03  	GOTO        INT3216EEE
;__Lib_MathDouble.c,2003 :: 		
INT3216EER:
;__Lib_MathDouble.c,2004 :: 		
0x0802	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2005 :: 		
0x0804	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2006 :: 		
INT3216EEE:
;__Lib_MathDouble.c,2007 :: 		
0x0806	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2008 :: 		
0x0808	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2009 :: 		
0x080A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2010 :: 		
0x080C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2015 :: 		
0x080E	0x0012      	RETURN      0
; end of _Double2Int
_getDistanceSonar2:
;sonar.h,32 :: 		unsigned short getDistanceSonar2(char Sensor){
;sonar.h,36 :: 		TMR1H=0x00;
0x0810	0x6ACF      	CLRF        TMR1H 
;sonar.h,37 :: 		TMR1L=0x00;
0x0812	0x6ACE      	CLRF        TMR1L 
;sonar.h,38 :: 		if(Sensor=='M'){
0x0814	0x0101      	MOVLB       1
0x0816	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x0818	0x0A4D      	XORLW       77
0x081A	0xE165      	BNZ         L_getDistanceSonar2623
;sonar.h,40 :: 		TRIG_MIDDLE = 0;
0x081C	0x9A80      	BCF         PORTA, 5 
;sonar.h,41 :: 		delay_us(2);
0x081E	0x0E03      	MOVLW       3
0x0820	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2624:
0x0822	0x2E0D      	DECFSZ      R13, 1, 0
0x0824	0xD7FE      	BRA         L_getDistanceSonar2624
;sonar.h,42 :: 		TRIG_MIDDLE = 1;
0x0826	0x8A80      	BSF         PORTA, 5 
;sonar.h,43 :: 		delay_us(5);
0x0828	0x0E08      	MOVLW       8
0x082A	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2625:
0x082C	0x2E0D      	DECFSZ      R13, 1, 0
0x082E	0xD7FE      	BRA         L_getDistanceSonar2625
;sonar.h,44 :: 		TRIG_MIDDLE =0;
0x0830	0x9A80      	BCF         PORTA, 5 
;sonar.h,46 :: 		while(!ECHO_MIDDLE)
L_getDistanceSonar2626:
0x0832	0xB084      	BTFSC       PORTE, 0 
0x0834	0xD012      	BRA         L_getDistanceSonar2627
;sonar.h,48 :: 		L=(TMR1L);
0x0836	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x083A	0x0E00      	MOVLW       0
0x083C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,49 :: 		H=(TMR1H);
0x083E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0842	0x0E00      	MOVLW       0
0x0844	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,50 :: 		if(H>0xF0)
0x0846	0x0E00      	MOVLW       0
0x0848	0x6E00      	MOVWF       R0 
0x084A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x084C	0x5C00      	SUBWF       R0, 0 
0x084E	0xE102      	BNZ         L__getDistanceSonar2959
0x0850	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0852	0x08F0      	SUBLW       240
L__getDistanceSonar2959:
0x0854	0xE201      	BC          L_getDistanceSonar2628
;sonar.h,51 :: 		break;
0x0856	0xD001      	BRA         L_getDistanceSonar2627
L_getDistanceSonar2628:
;sonar.h,52 :: 		}
0x0858	0xD7EC      	BRA         L_getDistanceSonar2626
L_getDistanceSonar2627:
;sonar.h,53 :: 		TMR1H=0;
0x085A	0x6ACF      	CLRF        TMR1H 
;sonar.h,54 :: 		TMR1L=0;
0x085C	0x6ACE      	CLRF        TMR1L 
;sonar.h,55 :: 		T1CON.TMR1ON=1;
0x085E	0x80CD      	BSF         T1CON, 0 
;sonar.h,56 :: 		while(ECHO_MIDDLE)
L_getDistanceSonar2629:
0x0860	0xA084      	BTFSS       PORTE, 0 
0x0862	0xD013      	BRA         L_getDistanceSonar2630
;sonar.h,58 :: 		L=(TMR1L);
0x0864	0x0101      	MOVLB       1
0x0866	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x086A	0x0E00      	MOVLW       0
0x086C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,59 :: 		H=(TMR1H);
0x086E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0872	0x0E00      	MOVLW       0
0x0874	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,60 :: 		if(H>0xF0)
0x0876	0x0E00      	MOVLW       0
0x0878	0x6E00      	MOVWF       R0 
0x087A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x087C	0x5C00      	SUBWF       R0, 0 
0x087E	0xE102      	BNZ         L__getDistanceSonar2960
0x0880	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0882	0x08F0      	SUBLW       240
L__getDistanceSonar2960:
0x0884	0xE201      	BC          L_getDistanceSonar2631
;sonar.h,61 :: 		break;
0x0886	0xD001      	BRA         L_getDistanceSonar2630
L_getDistanceSonar2631:
;sonar.h,62 :: 		}
0x0888	0xD7EB      	BRA         L_getDistanceSonar2629
L_getDistanceSonar2630:
0x088A	0x0101      	MOVLB       1
;sonar.h,63 :: 		L=(TMR1L);
0x088C	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0890	0x0E00      	MOVLW       0
0x0892	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,64 :: 		H=(TMR1H);
0x0894	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0898	0x0E00      	MOVLW       0
0x089A	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,65 :: 		x=(H*256 + L)*0.2;
0x089C	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x08A0	0x6A00      	CLRF        R0 
0x08A2	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x08A4	0x2600      	ADDWF       R0, 1 
0x08A6	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x08A8	0x2201      	ADDWFC      R1, 1 
0x08AA	0xDCD4      	RCALL       _Word2Double
0x08AC	0x0ECD      	MOVLW       205
0x08AE	0x6E04      	MOVWF       R4 
0x08B0	0x0ECC      	MOVLW       204
0x08B2	0x6E05      	MOVWF       R5 
0x08B4	0x0E4C      	MOVLW       76
0x08B6	0x6E06      	MOVWF       R6 
0x08B8	0x0E7C      	MOVLW       124
0x08BA	0x6E07      	MOVWF       R7 
0x08BC	0xDEB0      	RCALL       _Mul_32x32_FP
;sonar.h,66 :: 		y= (x/2)/29.1;
0x08BE	0x0E00      	MOVLW       0
0x08C0	0x6E04      	MOVWF       R4 
0x08C2	0x0E00      	MOVLW       0
0x08C4	0x6E05      	MOVWF       R5 
0x08C6	0x0E00      	MOVLW       0
0x08C8	0x6E06      	MOVWF       R6 
0x08CA	0x0E80      	MOVLW       128
0x08CC	0x6E07      	MOVWF       R7 
0x08CE	0xDDED      	RCALL       _Div_32x32_FP
0x08D0	0x0ECD      	MOVLW       205
0x08D2	0x6E04      	MOVWF       R4 
0x08D4	0x0ECC      	MOVLW       204
0x08D6	0x6E05      	MOVWF       R5 
0x08D8	0x0E68      	MOVLW       104
0x08DA	0x6E06      	MOVWF       R6 
0x08DC	0x0E83      	MOVLW       131
0x08DE	0x6E07      	MOVWF       R7 
0x08E0	0xDDE4      	RCALL       _Div_32x32_FP
;sonar.h,67 :: 		return (int)y;
0x08E2	0xDF2D      	RCALL       _Double2Int
0x08E4	0x0012      	RETURN      0
;sonar.h,68 :: 		}
L_getDistanceSonar2623:
;sonar.h,69 :: 		else if(Sensor == 'R'){
0x08E6	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x08E8	0x0A52      	XORLW       82
0x08EA	0xE164      	BNZ         L_getDistanceSonar2633
;sonar.h,70 :: 		TRIG_RIGHT = 0;
0x08EC	0x9080      	BCF         PORTA, 0 
;sonar.h,71 :: 		delay_us(2);
0x08EE	0x0E03      	MOVLW       3
0x08F0	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2634:
0x08F2	0x2E0D      	DECFSZ      R13, 1, 0
0x08F4	0xD7FE      	BRA         L_getDistanceSonar2634
;sonar.h,72 :: 		TRIG_RIGHT = 1;
0x08F6	0x8080      	BSF         PORTA, 0 
;sonar.h,73 :: 		delay_us(5);
0x08F8	0x0E08      	MOVLW       8
0x08FA	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2635:
0x08FC	0x2E0D      	DECFSZ      R13, 1, 0
0x08FE	0xD7FE      	BRA         L_getDistanceSonar2635
;sonar.h,74 :: 		TRIG_RIGHT =0;
0x0900	0x9080      	BCF         PORTA, 0 
;sonar.h,76 :: 		while(!ECHO_RIGHT)
L_getDistanceSonar2636:
0x0902	0xB280      	BTFSC       PORTA, 1 
0x0904	0xD012      	BRA         L_getDistanceSonar2637
;sonar.h,78 :: 		L=(TMR1L);
0x0906	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x090A	0x0E00      	MOVLW       0
0x090C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,79 :: 		H=(TMR1H);
0x090E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0912	0x0E00      	MOVLW       0
0x0914	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,80 :: 		if(H>0xF0)
0x0916	0x0E00      	MOVLW       0
0x0918	0x6E00      	MOVWF       R0 
0x091A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x091C	0x5C00      	SUBWF       R0, 0 
0x091E	0xE102      	BNZ         L__getDistanceSonar2961
0x0920	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0922	0x08F0      	SUBLW       240
L__getDistanceSonar2961:
0x0924	0xE201      	BC          L_getDistanceSonar2638
;sonar.h,81 :: 		break;
0x0926	0xD001      	BRA         L_getDistanceSonar2637
L_getDistanceSonar2638:
;sonar.h,82 :: 		}
0x0928	0xD7EC      	BRA         L_getDistanceSonar2636
L_getDistanceSonar2637:
;sonar.h,83 :: 		TMR1H=0;
0x092A	0x6ACF      	CLRF        TMR1H 
;sonar.h,84 :: 		TMR1L=0;
0x092C	0x6ACE      	CLRF        TMR1L 
;sonar.h,85 :: 		T1CON.TMR1ON=1;
0x092E	0x80CD      	BSF         T1CON, 0 
;sonar.h,86 :: 		while(ECHO_RIGHT)
L_getDistanceSonar2639:
0x0930	0xA280      	BTFSS       PORTA, 1 
0x0932	0xD012      	BRA         L_getDistanceSonar2640
;sonar.h,88 :: 		L=(TMR1L);
0x0934	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0938	0x0E00      	MOVLW       0
0x093A	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,89 :: 		H=(TMR1H);
0x093C	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0940	0x0E00      	MOVLW       0
0x0942	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,90 :: 		if(H>0xF0)
0x0944	0x0E00      	MOVLW       0
0x0946	0x6E00      	MOVWF       R0 
0x0948	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x094A	0x5C00      	SUBWF       R0, 0 
0x094C	0xE102      	BNZ         L__getDistanceSonar2962
0x094E	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0950	0x08F0      	SUBLW       240
L__getDistanceSonar2962:
0x0952	0xE201      	BC          L_getDistanceSonar2641
;sonar.h,91 :: 		break;
0x0954	0xD001      	BRA         L_getDistanceSonar2640
L_getDistanceSonar2641:
;sonar.h,92 :: 		}
0x0956	0xD7EC      	BRA         L_getDistanceSonar2639
L_getDistanceSonar2640:
0x0958	0x0101      	MOVLB       1
;sonar.h,93 :: 		L=(TMR1L);
0x095A	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x095E	0x0E00      	MOVLW       0
0x0960	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,94 :: 		H=(TMR1H);
0x0962	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0966	0x0E00      	MOVLW       0
0x0968	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,95 :: 		x=(H*256 + L)*0.2;
0x096A	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x096E	0x6A00      	CLRF        R0 
0x0970	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x0972	0x2600      	ADDWF       R0, 1 
0x0974	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x0976	0x2201      	ADDWFC      R1, 1 
0x0978	0xDC6D      	RCALL       _Word2Double
0x097A	0x0ECD      	MOVLW       205
0x097C	0x6E04      	MOVWF       R4 
0x097E	0x0ECC      	MOVLW       204
0x0980	0x6E05      	MOVWF       R5 
0x0982	0x0E4C      	MOVLW       76
0x0984	0x6E06      	MOVWF       R6 
0x0986	0x0E7C      	MOVLW       124
0x0988	0x6E07      	MOVWF       R7 
0x098A	0xDE49      	RCALL       _Mul_32x32_FP
;sonar.h,96 :: 		y= (x/2)/29.1;
0x098C	0x0E00      	MOVLW       0
0x098E	0x6E04      	MOVWF       R4 
0x0990	0x0E00      	MOVLW       0
0x0992	0x6E05      	MOVWF       R5 
0x0994	0x0E00      	MOVLW       0
0x0996	0x6E06      	MOVWF       R6 
0x0998	0x0E80      	MOVLW       128
0x099A	0x6E07      	MOVWF       R7 
0x099C	0xDD86      	RCALL       _Div_32x32_FP
0x099E	0x0ECD      	MOVLW       205
0x09A0	0x6E04      	MOVWF       R4 
0x09A2	0x0ECC      	MOVLW       204
0x09A4	0x6E05      	MOVWF       R5 
0x09A6	0x0E68      	MOVLW       104
0x09A8	0x6E06      	MOVWF       R6 
0x09AA	0x0E83      	MOVLW       131
0x09AC	0x6E07      	MOVWF       R7 
0x09AE	0xDD7D      	RCALL       _Div_32x32_FP
;sonar.h,97 :: 		return (int)y;
0x09B0	0xDEC6      	RCALL       _Double2Int
0x09B2	0x0012      	RETURN      0
;sonar.h,98 :: 		}
L_getDistanceSonar2633:
;sonar.h,99 :: 		else if(Sensor == 'L'){
0x09B4	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x09B6	0x0A4C      	XORLW       76
0x09B8	0xE164      	BNZ         L_getDistanceSonar2643
;sonar.h,100 :: 		TRIG_LEFT = 0;
0x09BA	0x9480      	BCF         PORTA, 2 
;sonar.h,101 :: 		delay_us(2);
0x09BC	0x0E03      	MOVLW       3
0x09BE	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2644:
0x09C0	0x2E0D      	DECFSZ      R13, 1, 0
0x09C2	0xD7FE      	BRA         L_getDistanceSonar2644
;sonar.h,102 :: 		TRIG_LEFT = 1;
0x09C4	0x8480      	BSF         PORTA, 2 
;sonar.h,103 :: 		delay_us(5);
0x09C6	0x0E08      	MOVLW       8
0x09C8	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2645:
0x09CA	0x2E0D      	DECFSZ      R13, 1, 0
0x09CC	0xD7FE      	BRA         L_getDistanceSonar2645
;sonar.h,104 :: 		TRIG_LEFT =0;
0x09CE	0x9480      	BCF         PORTA, 2 
;sonar.h,106 :: 		while(!ECHO_LEFT)
L_getDistanceSonar2646:
0x09D0	0xB680      	BTFSC       PORTA, 3 
0x09D2	0xD012      	BRA         L_getDistanceSonar2647
;sonar.h,108 :: 		L=(TMR1L);
0x09D4	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x09D8	0x0E00      	MOVLW       0
0x09DA	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,109 :: 		H=(TMR1H);
0x09DC	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x09E0	0x0E00      	MOVLW       0
0x09E2	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,110 :: 		if(H>0xF0)
0x09E4	0x0E00      	MOVLW       0
0x09E6	0x6E00      	MOVWF       R0 
0x09E8	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x09EA	0x5C00      	SUBWF       R0, 0 
0x09EC	0xE102      	BNZ         L__getDistanceSonar2963
0x09EE	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x09F0	0x08F0      	SUBLW       240
L__getDistanceSonar2963:
0x09F2	0xE201      	BC          L_getDistanceSonar2648
;sonar.h,111 :: 		break;
0x09F4	0xD001      	BRA         L_getDistanceSonar2647
L_getDistanceSonar2648:
;sonar.h,112 :: 		}
0x09F6	0xD7EC      	BRA         L_getDistanceSonar2646
L_getDistanceSonar2647:
;sonar.h,113 :: 		TMR1H=0;
0x09F8	0x6ACF      	CLRF        TMR1H 
;sonar.h,114 :: 		TMR1L=0;
0x09FA	0x6ACE      	CLRF        TMR1L 
;sonar.h,115 :: 		T1CON.TMR1ON=1;
0x09FC	0x80CD      	BSF         T1CON, 0 
;sonar.h,116 :: 		while(ECHO_LEFT)
L_getDistanceSonar2649:
0x09FE	0xA680      	BTFSS       PORTA, 3 
0x0A00	0xD012      	BRA         L_getDistanceSonar2650
;sonar.h,118 :: 		L=(TMR1L);
0x0A02	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0A06	0x0E00      	MOVLW       0
0x0A08	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,119 :: 		H=(TMR1H);
0x0A0A	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0A0E	0x0E00      	MOVLW       0
0x0A10	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,120 :: 		if(H>0xF0)
0x0A12	0x0E00      	MOVLW       0
0x0A14	0x6E00      	MOVWF       R0 
0x0A16	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x0A18	0x5C00      	SUBWF       R0, 0 
0x0A1A	0xE102      	BNZ         L__getDistanceSonar2964
0x0A1C	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0A1E	0x08F0      	SUBLW       240
L__getDistanceSonar2964:
0x0A20	0xE201      	BC          L_getDistanceSonar2651
;sonar.h,121 :: 		break;
0x0A22	0xD001      	BRA         L_getDistanceSonar2650
L_getDistanceSonar2651:
;sonar.h,122 :: 		}
0x0A24	0xD7EC      	BRA         L_getDistanceSonar2649
L_getDistanceSonar2650:
0x0A26	0x0101      	MOVLB       1
;sonar.h,123 :: 		L=(TMR1L);
0x0A28	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0A2C	0x0E00      	MOVLW       0
0x0A2E	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,124 :: 		H=(TMR1H);
0x0A30	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0A34	0x0E00      	MOVLW       0
0x0A36	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,125 :: 		x=(H*256 + L)*0.2;
0x0A38	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x0A3C	0x6A00      	CLRF        R0 
0x0A3E	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x0A40	0x2600      	ADDWF       R0, 1 
0x0A42	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x0A44	0x2201      	ADDWFC      R1, 1 
0x0A46	0xDC06      	RCALL       _Word2Double
0x0A48	0x0ECD      	MOVLW       205
0x0A4A	0x6E04      	MOVWF       R4 
0x0A4C	0x0ECC      	MOVLW       204
0x0A4E	0x6E05      	MOVWF       R5 
0x0A50	0x0E4C      	MOVLW       76
0x0A52	0x6E06      	MOVWF       R6 
0x0A54	0x0E7C      	MOVLW       124
0x0A56	0x6E07      	MOVWF       R7 
0x0A58	0xDDE2      	RCALL       _Mul_32x32_FP
;sonar.h,126 :: 		y= (x/2)/29.1;
0x0A5A	0x0E00      	MOVLW       0
0x0A5C	0x6E04      	MOVWF       R4 
0x0A5E	0x0E00      	MOVLW       0
0x0A60	0x6E05      	MOVWF       R5 
0x0A62	0x0E00      	MOVLW       0
0x0A64	0x6E06      	MOVWF       R6 
0x0A66	0x0E80      	MOVLW       128
0x0A68	0x6E07      	MOVWF       R7 
0x0A6A	0xDD1F      	RCALL       _Div_32x32_FP
0x0A6C	0x0ECD      	MOVLW       205
0x0A6E	0x6E04      	MOVWF       R4 
0x0A70	0x0ECC      	MOVLW       204
0x0A72	0x6E05      	MOVWF       R5 
0x0A74	0x0E68      	MOVLW       104
0x0A76	0x6E06      	MOVWF       R6 
0x0A78	0x0E83      	MOVLW       131
0x0A7A	0x6E07      	MOVWF       R7 
0x0A7C	0xDD16      	RCALL       _Div_32x32_FP
;sonar.h,127 :: 		return (int)y;
0x0A7E	0xDE5F      	RCALL       _Double2Int
0x0A80	0x0012      	RETURN      0
;sonar.h,128 :: 		}
L_getDistanceSonar2643:
;sonar.h,129 :: 		}
0x0A82	0x0012      	RETURN      0
; end of _getDistanceSonar2
_Add_32x32_FP:
;__Lib_MathDouble.c,563 :: 		
;__Lib_MathDouble.c,578 :: 		
0x0A84	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,579 :: 		
0x0A86	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,580 :: 		
0x0A88	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,582 :: 		
0x0A8A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,583 :: 		
0x0A8C	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,584 :: 		
0x0A8E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,586 :: 		
0x0A90	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,587 :: 		
0x0A92	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,588 :: 		
0x0A94	0xF006EF35  	GOTO        USEA32
;__Lib_MathDouble.c,591 :: 		
0x0A98	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,592 :: 		
0x0A9A	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,593 :: 		
0x0A9C	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,594 :: 		
0x0A9E	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,596 :: 		
0x0AA0	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,597 :: 		
0x0AA2	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,598 :: 		
0x0AA4	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,599 :: 		
0x0AA6	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,601 :: 		
0x0AA8	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,602 :: 		
0x0AAA	0x640B      	CPFSGT      R11, 0
;__Lib_MathDouble.c,603 :: 		
0x0AAC	0xF005EF85  	GOTO        BRETURN32
;__Lib_MathDouble.c,604 :: 		
0x0AB0	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,605 :: 		
0x0AB2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,606 :: 		
0x0AB4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,607 :: 		
0x0AB6	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,609 :: 		
0x0ABA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,610 :: 		
0x0ABC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,611 :: 		
0x0ABE	0xF005EFF4  	GOTO        BNIB32
;__Lib_MathDouble.c,613 :: 		
0x0AC2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,614 :: 		
0x0AC4	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,615 :: 		
0x0AC8	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,616 :: 		
0x0ACC	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,617 :: 		
0x0AD0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,618 :: 		
0x0AD2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,619 :: 		
0x0AD4	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,621 :: 		
0x0AD8	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,622 :: 		
0x0ADA	0xF005EFC9  	GOTO        BNIB32A
;__Lib_MathDouble.c,623 :: 		
0x0ADE	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,624 :: 		
0x0AE0	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,625 :: 		
0x0AE4	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,626 :: 		
0x0AE8	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,627 :: 		
0x0AEA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,628 :: 		
0x0AEC	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,630 :: 		
0x0AF0	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,631 :: 		
0x0AF2	0xF005EFA7  	GOTO        BNIB32B
;__Lib_MathDouble.c,632 :: 		
0x0AF6	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,633 :: 		
0x0AF8	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,634 :: 		
0x0AFC	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,635 :: 		
0x0AFE	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,636 :: 		
0x0B00	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,638 :: 		
0x0B04	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,639 :: 		
0x0B06	0xF005EF8E  	GOTO        BNIB32C
;__Lib_MathDouble.c,641 :: 		
BRETURN32:
;__Lib_MathDouble.c,642 :: 		
0x0B0A	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,643 :: 		
0x0B0E	0xF001C005  	MOVFF       R5, R1
;__Lib_MathDouble.c,644 :: 		
0x0B12	0xF000C004  	MOVFF       R4, R0
;__Lib_MathDouble.c,645 :: 		
0x0B16	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,646 :: 		
0x0B18	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,648 :: 		
BNIB32C:
;__Lib_MathDouble.c,649 :: 		
0x0B1C	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,650 :: 		
0x0B1E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,651 :: 		
0x0B20	0xF005EF99  	GOTO        BLOOP32C
;__Lib_MathDouble.c,652 :: 		
0x0B24	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,653 :: 		
0x0B26	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,654 :: 		
0x0B28	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,655 :: 		
0x0B2A	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,656 :: 		
0x0B2C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,657 :: 		
0x0B2E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,659 :: 		
BLOOP32C:
;__Lib_MathDouble.c,660 :: 		
0x0B32	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,661 :: 		
0x0B34	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,662 :: 		
0x0B36	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,663 :: 		
0x0B38	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,664 :: 		
0x0B3C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,665 :: 		
0x0B3E	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,666 :: 		
0x0B40	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,667 :: 		
0x0B42	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,668 :: 		
0x0B46	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,669 :: 		
0x0B48	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,670 :: 		
0x0B4A	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,672 :: 		
BNIB32B:
;__Lib_MathDouble.c,673 :: 		
0x0B4E	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,674 :: 		
0x0B50	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,675 :: 		
0x0B52	0xF005EFB8  	GOTO        BLOOP32B
;__Lib_MathDouble.c,676 :: 		
0x0B56	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,677 :: 		
0x0B58	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,678 :: 		
0x0B5A	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,679 :: 		
0x0B5C	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,680 :: 		
0x0B5E	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,681 :: 		
0x0B60	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,682 :: 		
0x0B62	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,683 :: 		
0x0B64	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,684 :: 		
0x0B66	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,685 :: 		
0x0B68	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,686 :: 		
0x0B6A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,687 :: 		
0x0B6C	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,689 :: 		
BLOOP32B:
;__Lib_MathDouble.c,690 :: 		
0x0B70	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,691 :: 		
0x0B72	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,692 :: 		
0x0B74	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,693 :: 		
0x0B76	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,694 :: 		
0x0B78	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,695 :: 		
0x0B7C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,696 :: 		
0x0B7E	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,697 :: 		
0x0B80	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,698 :: 		
0x0B82	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,699 :: 		
0x0B84	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,700 :: 		
0x0B88	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,701 :: 		
0x0B8A	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,702 :: 		
0x0B8C	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,703 :: 		
0x0B8E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,705 :: 		
BNIB32A:
;__Lib_MathDouble.c,706 :: 		
0x0B92	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,707 :: 		
0x0B94	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,708 :: 		
0x0B96	0xF005EFE0  	GOTO        BLOOP32A
;__Lib_MathDouble.c,709 :: 		
0x0B9A	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,710 :: 		
0x0B9C	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,711 :: 		
0x0B9E	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,712 :: 		
0x0BA0	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,713 :: 		
0x0BA2	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,714 :: 		
0x0BA4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,715 :: 		
0x0BA6	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,716 :: 		
0x0BA8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,717 :: 		
0x0BAA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,718 :: 		
0x0BAC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,719 :: 		
0x0BAE	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,720 :: 		
0x0BB0	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,721 :: 		
0x0BB2	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,722 :: 		
0x0BB4	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,723 :: 		
0x0BB6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,724 :: 		
0x0BB8	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,725 :: 		
0x0BBA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,726 :: 		
0x0BBC	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,728 :: 		
BLOOP32A:
;__Lib_MathDouble.c,729 :: 		
0x0BC0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,730 :: 		
0x0BC2	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,731 :: 		
0x0BC4	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,732 :: 		
0x0BC6	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,733 :: 		
0x0BC8	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,734 :: 		
0x0BCA	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,735 :: 		
0x0BCE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,736 :: 		
0x0BD0	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,737 :: 		
0x0BD2	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,738 :: 		
0x0BD4	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,739 :: 		
0x0BD6	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,740 :: 		
0x0BD8	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,741 :: 		
0x0BDC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,742 :: 		
0x0BDE	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,743 :: 		
0x0BE0	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,744 :: 		
0x0BE2	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,745 :: 		
0x0BE4	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,747 :: 		
BNIB32:
;__Lib_MathDouble.c,748 :: 		
0x0BE8	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,749 :: 		
0x0BEA	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,750 :: 		
0x0BEC	0xF006EF11  	GOTO        BLOOP32
;__Lib_MathDouble.c,751 :: 		
0x0BF0	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,752 :: 		
0x0BF2	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,753 :: 		
0x0BF4	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,754 :: 		
0x0BF6	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,755 :: 		
0x0BF8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,756 :: 		
0x0BFA	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,757 :: 		
0x0BFC	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,758 :: 		
0x0BFE	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,759 :: 		
0x0C00	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,760 :: 		
0x0C02	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,761 :: 		
0x0C04	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,762 :: 		
0x0C06	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,763 :: 		
0x0C08	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,764 :: 		
0x0C0A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,765 :: 		
0x0C0C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,766 :: 		
0x0C0E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,767 :: 		
0x0C10	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,768 :: 		
0x0C12	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,769 :: 		
0x0C14	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,770 :: 		
0x0C16	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,771 :: 		
0x0C18	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,772 :: 		
0x0C1A	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,773 :: 		
0x0C1C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,774 :: 		
0x0C1E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,776 :: 		
BLOOP32:
;__Lib_MathDouble.c,777 :: 		
0x0C22	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,778 :: 		
0x0C24	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,779 :: 		
0x0C26	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,780 :: 		
0x0C28	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,781 :: 		
0x0C2A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,782 :: 		
0x0C2C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,783 :: 		
0x0C2E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,784 :: 		
0x0C32	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,785 :: 		
0x0C34	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,786 :: 		
0x0C36	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,787 :: 		
0x0C38	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,788 :: 		
0x0C3A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,789 :: 		
0x0C3C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,790 :: 		
0x0C3E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,791 :: 		
0x0C42	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,792 :: 		
0x0C44	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,793 :: 		
0x0C46	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,794 :: 		
0x0C48	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,795 :: 		
0x0C4A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,797 :: 		
BLIGNED32:
;__Lib_MathDouble.c,798 :: 		
0x0C4C	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,799 :: 		
0x0C4E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,800 :: 		
0x0C50	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,801 :: 		
0x0C52	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,802 :: 		
0x0C56	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,803 :: 		
0x0C58	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,804 :: 		
0x0C5A	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,805 :: 		
0x0C5C	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,806 :: 		
0x0C5E	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,807 :: 		
0x0C60	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,808 :: 		
0x0C62	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,809 :: 		
0x0C64	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,810 :: 		
0x0C66	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,812 :: 		
USEA32:
;__Lib_MathDouble.c,813 :: 		
0x0C6A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,814 :: 		
0x0C6C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,815 :: 		
0x0C6E	0xF006EF3B  	GOTO        BNE032
;__Lib_MathDouble.c,816 :: 		
0x0C72	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,818 :: 		
BNE032:
;__Lib_MathDouble.c,819 :: 		
0x0C76	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,820 :: 		
0x0C78	0xF00AC002  	MOVFF       R2, R10
;__Lib_MathDouble.c,821 :: 		
0x0C7C	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,822 :: 		
0x0C7E	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,824 :: 		
0x0C80	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,825 :: 		
0x0C82	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,826 :: 		
0x0C84	0x6E07      	MOVWF       R7, 0
;__Lib_MathDouble.c,827 :: 		
0x0C86	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,828 :: 		
0x0C88	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,830 :: 		
0x0C8C	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,831 :: 		
0x0C8E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,832 :: 		
0x0C90	0xF006EFDB  	GOTO        ANIB32
;__Lib_MathDouble.c,833 :: 		
0x0C94	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,834 :: 		
0x0C96	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,835 :: 		
0x0C98	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,836 :: 		
0x0C9A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,837 :: 		
0x0C9C	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,838 :: 		
0x0C9E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,839 :: 		
0x0CA0	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,840 :: 		
0x0CA2	0x6A06      	CLRF        R6, 0
;__Lib_MathDouble.c,841 :: 		
0x0CA4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,842 :: 		
0x0CA6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,844 :: 		
0x0CAA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,845 :: 		
0x0CAC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,846 :: 		
0x0CAE	0xF006EFB0  	GOTO        ANIB32A
;__Lib_MathDouble.c,847 :: 		
0x0CB2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,848 :: 		
0x0CB4	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,849 :: 		
0x0CB6	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,850 :: 		
0x0CB8	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,851 :: 		
0x0CBA	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,852 :: 		
0x0CBC	0x6A05      	CLRF        R5, 0
;__Lib_MathDouble.c,853 :: 		
0x0CBE	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,854 :: 		
0x0CC0	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,856 :: 		
0x0CC4	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,857 :: 		
0x0CC6	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,858 :: 		
0x0CC8	0xF006EF8E  	GOTO        ANIB32B
;__Lib_MathDouble.c,859 :: 		
0x0CCC	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,860 :: 		
0x0CCE	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,861 :: 		
0x0CD0	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,862 :: 		
0x0CD2	0x6A04      	CLRF        R4, 0
;__Lib_MathDouble.c,863 :: 		
0x0CD4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,864 :: 		
0x0CD6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,866 :: 		
0x0CDA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,867 :: 		
0x0CDC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,868 :: 		
0x0CDE	0xF006EF75  	GOTO        ANIB32C
;__Lib_MathDouble.c,870 :: 		
0x0CE2	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,871 :: 		
0x0CE6	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,873 :: 		
ANIB32C:
;__Lib_MathDouble.c,874 :: 		
0x0CEA	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,875 :: 		
0x0CEC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,876 :: 		
0x0CEE	0xF006EF80  	GOTO        ALOOP32C
;__Lib_MathDouble.c,877 :: 		
0x0CF2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,878 :: 		
0x0CF4	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,879 :: 		
0x0CF6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,880 :: 		
0x0CF8	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,881 :: 		
0x0CFA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,882 :: 		
0x0CFC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,884 :: 		
ALOOP32C:
;__Lib_MathDouble.c,885 :: 		
0x0D00	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,886 :: 		
0x0D02	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,887 :: 		
0x0D04	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,888 :: 		
0x0D06	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,889 :: 		
0x0D0A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,890 :: 		
0x0D0C	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,891 :: 		
0x0D0E	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,892 :: 		
0x0D10	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,893 :: 		
0x0D14	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,894 :: 		
0x0D16	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,895 :: 		
0x0D18	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,897 :: 		
ANIB32B:
;__Lib_MathDouble.c,898 :: 		
0x0D1C	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,899 :: 		
0x0D1E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,900 :: 		
0x0D20	0xF006EF9F  	GOTO        ALOOP32B
;__Lib_MathDouble.c,901 :: 		
0x0D24	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,902 :: 		
0x0D26	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,903 :: 		
0x0D28	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,904 :: 		
0x0D2A	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,905 :: 		
0x0D2C	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,906 :: 		
0x0D2E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,907 :: 		
0x0D30	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,908 :: 		
0x0D32	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,909 :: 		
0x0D34	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,910 :: 		
0x0D36	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,911 :: 		
0x0D38	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,912 :: 		
0x0D3A	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,914 :: 		
ALOOP32B:
;__Lib_MathDouble.c,915 :: 		
0x0D3E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,916 :: 		
0x0D40	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,917 :: 		
0x0D42	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,918 :: 		
0x0D44	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,919 :: 		
0x0D46	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,920 :: 		
0x0D4A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,921 :: 		
0x0D4C	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,922 :: 		
0x0D4E	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,923 :: 		
0x0D50	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,924 :: 		
0x0D52	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,925 :: 		
0x0D56	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,926 :: 		
0x0D58	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,927 :: 		
0x0D5A	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,928 :: 		
0x0D5C	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,930 :: 		
ANIB32A:
;__Lib_MathDouble.c,931 :: 		
0x0D60	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,932 :: 		
0x0D62	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,933 :: 		
0x0D64	0xF006EFC7  	GOTO        ALOOP32A
;__Lib_MathDouble.c,934 :: 		
0x0D68	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,935 :: 		
0x0D6A	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,936 :: 		
0x0D6C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,937 :: 		
0x0D6E	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,938 :: 		
0x0D70	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,939 :: 		
0x0D72	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,940 :: 		
0x0D74	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,941 :: 		
0x0D76	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,942 :: 		
0x0D78	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,943 :: 		
0x0D7A	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,944 :: 		
0x0D7C	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,945 :: 		
0x0D7E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,946 :: 		
0x0D80	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,947 :: 		
0x0D82	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,948 :: 		
0x0D84	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,949 :: 		
0x0D86	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,950 :: 		
0x0D88	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,951 :: 		
0x0D8A	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,953 :: 		
ALOOP32A:
;__Lib_MathDouble.c,954 :: 		
0x0D8E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,955 :: 		
0x0D90	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,956 :: 		
0x0D92	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,957 :: 		
0x0D94	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,958 :: 		
0x0D96	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,959 :: 		
0x0D98	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,960 :: 		
0x0D9C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,961 :: 		
0x0D9E	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,962 :: 		
0x0DA0	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,963 :: 		
0x0DA2	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,964 :: 		
0x0DA4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,965 :: 		
0x0DA6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,966 :: 		
0x0DAA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,967 :: 		
0x0DAC	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,968 :: 		
0x0DAE	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,969 :: 		
0x0DB0	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,970 :: 		
0x0DB2	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,972 :: 		
ANIB32:
;__Lib_MathDouble.c,973 :: 		
0x0DB6	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,974 :: 		
0x0DB8	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,975 :: 		
0x0DBA	0xF006EFF8  	GOTO        ALOOP32
;__Lib_MathDouble.c,976 :: 		
0x0DBE	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,977 :: 		
0x0DC0	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,978 :: 		
0x0DC2	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,979 :: 		
0x0DC4	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,980 :: 		
0x0DC6	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,981 :: 		
0x0DC8	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,982 :: 		
0x0DCA	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,983 :: 		
0x0DCC	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,984 :: 		
0x0DCE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,985 :: 		
0x0DD0	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,986 :: 		
0x0DD2	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,987 :: 		
0x0DD4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,988 :: 		
0x0DD6	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,989 :: 		
0x0DD8	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,990 :: 		
0x0DDA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,991 :: 		
0x0DDC	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,992 :: 		
0x0DDE	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,993 :: 		
0x0DE0	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,994 :: 		
0x0DE2	0x2605      	ADDWF       R5, 1, 0
;__Lib_MathDouble.c,995 :: 		
0x0DE4	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,996 :: 		
0x0DE6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,997 :: 		
0x0DE8	0x6E06      	MOVWF       R6, 0
;__Lib_MathDouble.c,998 :: 		
0x0DEA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,999 :: 		
0x0DEC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1001 :: 		
ALOOP32:
;__Lib_MathDouble.c,1002 :: 		
0x0DF0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1003 :: 		
0x0DF2	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1004 :: 		
0x0DF4	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1005 :: 		
0x0DF6	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1006 :: 		
0x0DF8	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1007 :: 		
0x0DFA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1008 :: 		
0x0DFC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1009 :: 		
0x0E00	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1010 :: 		
0x0E02	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1011 :: 		
0x0E04	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1012 :: 		
0x0E06	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1013 :: 		
0x0E08	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1014 :: 		
0x0E0A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1015 :: 		
0x0E0C	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1016 :: 		
0x0E10	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1017 :: 		
0x0E12	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1018 :: 		
0x0E14	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1019 :: 		
0x0E16	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1020 :: 		
0x0E18	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1022 :: 		
ALIGNED32:
;__Lib_MathDouble.c,1023 :: 		
0x0E1A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1024 :: 		
0x0E1C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1025 :: 		
0x0E1E	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,1026 :: 		
0x0E20	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,1027 :: 		
0x0E24	0x1E09      	COMF        R9, 1, 0
;__Lib_MathDouble.c,1028 :: 		
0x0E26	0x1E04      	COMF        R4, 1, 0
;__Lib_MathDouble.c,1029 :: 		
0x0E28	0x1E05      	COMF        R5, 1, 0
;__Lib_MathDouble.c,1030 :: 		
0x0E2A	0x1E06      	COMF        R6, 1, 0
;__Lib_MathDouble.c,1031 :: 		
0x0E2C	0x2A09      	INCF        R9, 1, 0
;__Lib_MathDouble.c,1032 :: 		
0x0E2E	0x2204      	ADDWFC      R4, 1, 0
;__Lib_MathDouble.c,1033 :: 		
0x0E30	0x2205      	ADDWFC      R5, 1, 0
;__Lib_MathDouble.c,1034 :: 		
0x0E32	0x2206      	ADDWFC      R6, 1, 0
;__Lib_MathDouble.c,1036 :: 		
AOK32:
;__Lib_MathDouble.c,1037 :: 		
0x0E34	0x5009      	MOVF        R9, 0, 0
;__Lib_MathDouble.c,1038 :: 		
0x0E36	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1039 :: 		
0x0E38	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1040 :: 		
0x0E3A	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1041 :: 		
0x0E3C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1042 :: 		
0x0E3E	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1043 :: 		
0x0E40	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1044 :: 		
0x0E42	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1046 :: 		
0x0E44	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_MathDouble.c,1047 :: 		
0x0E46	0xF007EF31  	GOTO        ACOMP32
;__Lib_MathDouble.c,1048 :: 		
0x0E4A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1049 :: 		
0x0E4C	0xF007EF40  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1051 :: 		
0x0E50	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1052 :: 		
0x0E52	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1053 :: 		
0x0E54	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1054 :: 		
0x0E56	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1055 :: 		
0x0E58	0x3E03      	INCFSZ      R3, 1, 0
;__Lib_MathDouble.c,1056 :: 		
0x0E5A	0xF007EF40  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1057 :: 		
0x0E5E	0xF007EF4C  	GOTO        ADDJPSETFOV32
;__Lib_MathDouble.c,1059 :: 		
ACOMP32:
;__Lib_MathDouble.c,1060 :: 		
0x0E62	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1061 :: 		
0x0E64	0xF007EF46  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1062 :: 		
0x0E68	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1063 :: 		
0x0E6A	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1064 :: 		
0x0E6C	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1065 :: 		
0x0E6E	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1066 :: 		
0x0E70	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1067 :: 		
0x0E72	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1068 :: 		
0x0E74	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1069 :: 		
0x0E76	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1070 :: 		
0x0E78	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1071 :: 		
0x0E7A	0x7E0A      	BTG         R10, 7, 0
;__Lib_MathDouble.c,1072 :: 		
0x0E7C	0xF007EF46  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1074 :: 		
ADDJPNRMRND4032:
;__Lib_MathDouble.c,1075 :: 		
0x0E80	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1076 :: 		
0x0E82	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1078 :: 		
0x0E84	0xF001EC4A  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1080 :: 		
0x0E88	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1081 :: 		
ADDJPNRM4032:
;__Lib_MathDouble.c,1082 :: 		
0x0E8C	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1083 :: 		
0x0E8E	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1085 :: 		
0x0E90	0xF001EC4A  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1087 :: 		
0x0E94	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1088 :: 		
ADDJPSETFOV32:
;__Lib_MathDouble.c,1089 :: 		
0x0E98	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1090 :: 		
0x0E9A	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1092 :: 		
0x0E9C	0xF000EC9D  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1094 :: 		
0x0EA0	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1095 :: 		
ADDEOK:
;__Lib_MathDouble.c,1096 :: 		
0x0EA4	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1097 :: 		
0x0EA6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1098 :: 		
ADDEEE:
;__Lib_MathDouble.c,1105 :: 		
0x0EA8	0x0012      	RETURN      0
; end of _Add_32x32_FP
_rotateClockwise:
;motion.h,84 :: 		void rotateClockwise(int pwm){
;motion.h,85 :: 		motorLeft_foward(pwm);
0x0EAA	0xF19FC19A  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorLeft_foward_pwm
0x0EAE	0xF1A0C19B  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorLeft_foward_pwm+1
0x0EB2	0xF001EC1B  	CALL        _motorLeft_foward, 0
;motion.h,86 :: 		motorRight_reverse(pwm);
0x0EB6	0xF19FC19A  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorRight_reverse_pwm
0x0EBA	0xF1A0C19B  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorRight_reverse_pwm+1
0x0EBE	0xF001EC21  	CALL        _motorRight_reverse, 0
;motion.h,87 :: 		}
0x0EC2	0x0012      	RETURN      0
; end of _rotateClockwise
_moveForward:
;motion.h,64 :: 		void moveForward(int pwmLeft, int pwmRight){
;motion.h,65 :: 		motorLeft_foward(pwmLeft);
0x0EC4	0xF19FC19A  	MOVFF       FARG_moveForward_pwmLeft, FARG_motorLeft_foward_pwm
0x0EC8	0xF1A0C19B  	MOVFF       FARG_moveForward_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x0ECC	0xF001EC1B  	CALL        _motorLeft_foward, 0
;motion.h,66 :: 		motorRight_foward(pwmRight);
0x0ED0	0xF19FC19C  	MOVFF       FARG_moveForward_pwmRight, FARG_motorRight_foward_pwm
0x0ED4	0xF1A0C19D  	MOVFF       FARG_moveForward_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0ED8	0xF001EC3E  	CALL        _motorRight_foward, 0
;motion.h,67 :: 		}
0x0EDC	0x0012      	RETURN      0
; end of _moveForward
_sendText:
;debug.h,105 :: 		void sendText(char* aText){
;debug.h,106 :: 		UART1_Write_Text(aText);
0x0EDE	0xF19FC19A  	MOVFF       FARG_sendText_aText, FARG_UART1_Write_Text_uart_text
0x0EE2	0xF1A0C19B  	MOVFF       FARG_sendText_aText+1, FARG_UART1_Write_Text_uart_text+1
0x0EE6	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,107 :: 		}
0x0EEA	0x0012      	RETURN      0
; end of _sendText
_stop:
;motion.h,94 :: 		void stop(){
;motion.h,95 :: 		motorLeft_stop();
0x0EEC	0xF001EC27  	CALL        _motorLeft_stop, 0
;motion.h,96 :: 		motorRight_stop();
0x0EF0	0xF001EC18  	CALL        _motorRight_stop, 0
;motion.h,97 :: 		}
0x0EF4	0x0012      	RETURN      0
; end of _stop
_rotateAntiClockwise:
;motion.h,89 :: 		void rotateAntiClockwise(int pwm){
;motion.h,90 :: 		motorLeft_reverse(pwm);
0x0EF6	0xF19FC19A  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorLeft_reverse_pwm
0x0EFA	0xF1A0C19B  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorLeft_reverse_pwm+1
0x0EFE	0xF001EC44  	CALL        _motorLeft_reverse, 0
;motion.h,91 :: 		motorRight_foward(pwm);
0x0F02	0xF19FC19A  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorRight_foward_pwm
0x0F06	0xF1A0C19B  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorRight_foward_pwm+1
0x0F0A	0xF001EC3E  	CALL        _motorRight_foward, 0
;motion.h,92 :: 		}
0x0F0E	0x0012      	RETURN      0
; end of _rotateAntiClockwise
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x0F10	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x0F12	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x0F14	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
0x0F16	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0F18	0x6ABB      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x0F1A	0x98BA      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x0F1C	0x9ABA      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
0x0F1E	0x0012      	RETURN      0
; end of _PWM2_Init
_turnLeft:
;motion.h,79 :: 		void turnLeft(int pwmRight){
;motion.h,80 :: 		motorRight_foward(pwmRight);
0x0F20	0xF19FC196  	MOVFF       FARG_turnLeft_pwmRight, FARG_motorRight_foward_pwm
0x0F24	0xF1A0C197  	MOVFF       FARG_turnLeft_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0F28	0xF001EC3E  	CALL        _motorRight_foward, 0
;motion.h,81 :: 		motorLeft_stop();
0x0F2C	0xF001EC27  	CALL        _motorLeft_stop, 0
;motion.h,82 :: 		}
0x0F30	0x0012      	RETURN      0
; end of _turnLeft
_turnRight:
;motion.h,74 :: 		void turnRight(int pwmLeft){
;motion.h,75 :: 		motorLeft_foward(pwmLeft);
0x0F32	0xF19FC196  	MOVFF       FARG_turnRight_pwmLeft, FARG_motorLeft_foward_pwm
0x0F36	0xF1A0C197  	MOVFF       FARG_turnRight_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x0F3A	0xF001EC1B  	CALL        _motorLeft_foward, 0
;motion.h,76 :: 		motorRight_stop();
0x0F3E	0xF001EC18  	CALL        _motorRight_stop, 0
;motion.h,77 :: 		}
0x0F42	0x0012      	RETURN      0
; end of _turnRight
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0F44	0x9294      	BCF         TRISC1_bit, 1 
;__Lib_PWM_c21.c,21 :: 		
0x0F46	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x0F48	0x0E0C      	MOVLW       12
0x0F4A	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
0x0F4C	0x0012      	RETURN      0
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x0F4E	0x9494      	BCF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,56 :: 		
0x0F50	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x0F52	0x0E0C      	MOVLW       12
0x0F54	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
0x0F56	0x0012      	RETURN      0
; end of _PWM1_Start
_Int2Double:
;__Lib_MathDouble.c,2285 :: 		
;__Lib_MathDouble.c,2294 :: 		
0x0F58	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,2295 :: 		
0x0F5C	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2296 :: 		
0x0F5E	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2297 :: 		
0x0F60	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2298 :: 		
0x0F62	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2299 :: 		
0x0F64	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2302 :: 		
0x0F66	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2303 :: 		
0x0F68	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2304 :: 		
0x0F6A	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2305 :: 		
0x0F6C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2306 :: 		
0x0F6E	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2308 :: 		
0x0F70	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2309 :: 		
0x0F72	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2310 :: 		
0x0F74	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2311 :: 		
0x0F76	0xAE00      	BTFSS       R0, 7, 0
;__Lib_MathDouble.c,2312 :: 		
0x0F78	0xF007EFC4  	GOTO        FLO1632EEE
;__Lib_MathDouble.c,2314 :: 		
0x0F7C	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,2315 :: 		
0x0F7E	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,2317 :: 		
0x0F80	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,2318 :: 		
0x0F82	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2319 :: 		
0x0F84	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,2321 :: 		
0x0F86	0x8E0A      	BSF         R10, 7, 0
;__Lib_MathDouble.c,2322 :: 		
FLO1632EEE:
;__Lib_MathDouble.c,2323 :: 		
0x0F88	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2324 :: 		
0x0F8C	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2325 :: 		
0x0F90	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2326 :: 		
0x0F92	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2328 :: 		
0x0F94	0xF000ECA9  	CALL        _NRM3232, 0
;__Lib_MathDouble.c,2329 :: 		
0x0F98	0x0012      	RETURN      0
; end of _Int2Double
_Sub_32x32_FP:
;__Lib_MathDouble.c,1113 :: 		
;__Lib_MathDouble.c,1118 :: 		
0x0F9A	0x7E06      	BTG         R6, 7, 0
;__Lib_MathDouble.c,1120 :: 		
0x0F9C	0xDD73      	RCALL       _Add_32x32_FP
;__Lib_MathDouble.c,1121 :: 		
0x0F9E	0x0012      	RETURN      0
; end of _Sub_32x32_FP
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0FA0	0x0EC0      	MOVLW       _UART1_Write
0x0FA2	0x0101      	MOVLB       1
0x0FA4	0x6F7A      	MOVWF       _UART_Wr_Ptr, 1
0x0FA6	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x0FA8	0x6F7B      	MOVWF       _UART_Wr_Ptr+1, 1
0x0FAA	0x0EA3      	MOVLW       FARG_UART1_Write_data_
0x0FAC	0x6F7C      	MOVWF       _UART_Wr_Ptr+2, 1
0x0FAE	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0FB0	0x6F7D      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0FB2	0x0EFF      	MOVLW       _UART1_Read
0x0FB4	0x6F76      	MOVWF       _UART_Rd_Ptr, 1
0x0FB6	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x0FB8	0x6F77      	MOVWF       _UART_Rd_Ptr+1, 1
0x0FBA	0x0E00      	MOVLW       0
0x0FBC	0x6F78      	MOVWF       _UART_Rd_Ptr+2, 1
0x0FBE	0x0E00      	MOVLW       0
0x0FC0	0x6F79      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0FC2	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0FC4	0x6F6E      	MOVWF       _UART_Rdy_Ptr, 1
0x0FC6	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0FC8	0x6F6F      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0FCA	0x0E00      	MOVLW       0
0x0FCC	0x6F70      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0FCE	0x0E00      	MOVLW       0
0x0FD0	0x6F71      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0FD2	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0FD4	0x6F72      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0FD6	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0FD8	0x6F73      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0FDA	0x0E00      	MOVLW       0
0x0FDC	0x6F74      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0FDE	0x0E00      	MOVLW       0
0x0FE0	0x6F75      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0FE2	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0FE4	0x0E90      	MOVLW       144
0x0FE6	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0FE8	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x0FEA	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0FEC	0xAA9E      	BTFSS       PIR1, 5 
0x0FEE	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0FF0	0xF000CFAE  	MOVFF       RCREG, R0
0x0FF4	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
0x0FF6	0x0012      	RETURN      0
; end of _UART1_Init
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x0FF8	0x0E80      	MOVLW       128
0x0FFA	0x0101      	MOVLB       1
0x0FFC	0x1997      	XORWF       FARG_abs_a+1, 0, 1
0x0FFE	0x6E00      	MOVWF       R0 
0x1000	0x0E80      	MOVLW       128
0x1002	0x5C00      	SUBWF       R0, 0 
0x1004	0xE102      	BNZ         L__abs92
0x1006	0x0E00      	MOVLW       0
0x1008	0x5D96      	SUBWF       FARG_abs_a, 0, 1
L__abs92:
0x100A	0xE208      	BC          L_abs0
;__Lib_CStdlib.c,39 :: 		
0x100C	0x5196      	MOVF        FARG_abs_a, 0, 1
0x100E	0x0800      	SUBLW       0
0x1010	0x6E00      	MOVWF       R0 
0x1012	0xF001C197  	MOVFF       FARG_abs_a+1, R1
0x1016	0x0E00      	MOVLW       0
0x1018	0x5601      	SUBFWB      R1, 1 
0x101A	0x0012      	RETURN      0
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x101C	0xF000C196  	MOVFF       FARG_abs_a, R0
0x1020	0xF001C197  	MOVFF       FARG_abs_a+1, R1
;__Lib_CStdlib.c,41 :: 		
0x1024	0x0012      	RETURN      0
; end of _abs
_level2Aligning:
;Main 6.0V.c,43 :: 		void level2Aligning(){
;Main 6.0V.c,44 :: 		while((Sensor1 == 0 || Sensor2 == 0 || Sensor3 == 0 || Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0) && (Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0 || Sensor7 == 0 || Sensor8 == 0 || Sensor9 == 0))
L_level2Aligning665:
0x1026	0xA881      	BTFSS       PORTB, 4 
0x1028	0xD00B      	BRA         L__level2Aligning905
0x102A	0xA681      	BTFSS       PORTB, 3 
0x102C	0xD009      	BRA         L__level2Aligning905
0x102E	0xA883      	BTFSS       PORTD, 4 
0x1030	0xD007      	BRA         L__level2Aligning905
0x1032	0xAA83      	BTFSS       PORTD, 5 
0x1034	0xD005      	BRA         L__level2Aligning905
0x1036	0xAC83      	BTFSS       PORTD, 6 
0x1038	0xD003      	BRA         L__level2Aligning905
0x103A	0xAE83      	BTFSS       PORTD, 7 
0x103C	0xD001      	BRA         L__level2Aligning905
0x103E	0xD018      	BRA         L_level2Aligning666
L__level2Aligning905:
0x1040	0xAA83      	BTFSS       PORTD, 5 
0x1042	0xD00B      	BRA         L__level2Aligning904
0x1044	0xAC83      	BTFSS       PORTD, 6 
0x1046	0xD009      	BRA         L__level2Aligning904
0x1048	0xAE83      	BTFSS       PORTD, 7 
0x104A	0xD007      	BRA         L__level2Aligning904
0x104C	0xA481      	BTFSS       PORTB, 2 
0x104E	0xD005      	BRA         L__level2Aligning904
0x1050	0xAC81      	BTFSS       PORTB, 6 
0x1052	0xD003      	BRA         L__level2Aligning904
0x1054	0xAE81      	BTFSS       PORTB, 7 
0x1056	0xD001      	BRA         L__level2Aligning904
0x1058	0xD00B      	BRA         L_level2Aligning666
L__level2Aligning904:
L__level2Aligning903:
;Main 6.0V.c,45 :: 		moveForward(220,220);
0x105A	0x0EDC      	MOVLW       220
0x105C	0x0101      	MOVLB       1
0x105E	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x1060	0x0E00      	MOVLW       0
0x1062	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x1064	0x0EDC      	MOVLW       220
0x1066	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x1068	0x0E00      	MOVLW       0
0x106A	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x106C	0xDF2B      	RCALL       _moveForward
0x106E	0xD7DB      	BRA         L_level2Aligning665
L_level2Aligning666:
;Main 6.0V.c,46 :: 		delay_ms(1);
0x1070	0x0E07      	MOVLW       7
0x1072	0x6E0C      	MOVWF       R12, 0
0x1074	0x0E7D      	MOVLW       125
0x1076	0x6E0D      	MOVWF       R13, 0
L_level2Aligning673:
0x1078	0x2E0D      	DECFSZ      R13, 1, 0
0x107A	0xD7FE      	BRA         L_level2Aligning673
0x107C	0x2E0C      	DECFSZ      R12, 1, 0
0x107E	0xD7FC      	BRA         L_level2Aligning673
;Main 6.0V.c,47 :: 		stop();
0x1080	0xDF35      	RCALL       _stop
;Main 6.0V.c,48 :: 		sendText("Sensor5 at LEVEL 2 ");
0x1082	0x0E34      	MOVLW       ?lstr33_Main_326.0V
0x1084	0x0101      	MOVLB       1
0x1086	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x1088	0x0E01      	MOVLW       hi_addr(?lstr33_Main_326.0V)
0x108A	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x108C	0xDF28      	RCALL       _sendText
;Main 6.0V.c,49 :: 		delay_ms(500);
0x108E	0x0E0D      	MOVLW       13
0x1090	0x6E0B      	MOVWF       R11, 0
0x1092	0x0EAF      	MOVLW       175
0x1094	0x6E0C      	MOVWF       R12, 0
0x1096	0x0EB6      	MOVLW       182
0x1098	0x6E0D      	MOVWF       R13, 0
L_level2Aligning674:
0x109A	0x2E0D      	DECFSZ      R13, 1, 0
0x109C	0xD7FE      	BRA         L_level2Aligning674
0x109E	0x2E0C      	DECFSZ      R12, 1, 0
0x10A0	0xD7FC      	BRA         L_level2Aligning674
0x10A2	0x2E0B      	DECFSZ      R11, 1, 0
0x10A4	0xD7FA      	BRA         L_level2Aligning674
0x10A6	0x0000      	NOP
;Main 6.0V.c,50 :: 		while(Sensor1==0 || Sensor2==0 || Sensor3==0 || Sensor4==0 || Sensor5==0 || Sensor6==0 || Sensor7==0 || Sensor8==0 || Sensor9==0){
L_level2Aligning675:
0x10A8	0xA881      	BTFSS       PORTB, 4 
0x10AA	0xD011      	BRA         L__level2Aligning902
0x10AC	0xA681      	BTFSS       PORTB, 3 
0x10AE	0xD00F      	BRA         L__level2Aligning902
0x10B0	0xA883      	BTFSS       PORTD, 4 
0x10B2	0xD00D      	BRA         L__level2Aligning902
0x10B4	0xAA83      	BTFSS       PORTD, 5 
0x10B6	0xD00B      	BRA         L__level2Aligning902
0x10B8	0xAC83      	BTFSS       PORTD, 6 
0x10BA	0xD009      	BRA         L__level2Aligning902
0x10BC	0xAE83      	BTFSS       PORTD, 7 
0x10BE	0xD007      	BRA         L__level2Aligning902
0x10C0	0xA481      	BTFSS       PORTB, 2 
0x10C2	0xD005      	BRA         L__level2Aligning902
0x10C4	0xAC81      	BTFSS       PORTB, 6 
0x10C6	0xD003      	BRA         L__level2Aligning902
0x10C8	0xAE81      	BTFSS       PORTB, 7 
0x10CA	0xD001      	BRA         L__level2Aligning902
0x10CC	0xD012      	BRA         L_level2Aligning676
L__level2Aligning902:
;Main 6.0V.c,51 :: 		if(Sensor9 == 1)
0x10CE	0xAE81      	BTFSS       PORTB, 7 
0x10D0	0xD007      	BRA         L_level2Aligning679
;Main 6.0V.c,52 :: 		rotateClockwise(220);
0x10D2	0x0101      	MOVLB       1
0x10D4	0x0EDC      	MOVLW       220
0x10D6	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x10D8	0x0E00      	MOVLW       0
0x10DA	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x10DC	0xDEE6      	RCALL       _rotateClockwise
0x10DE	0xD008      	BRA         L_level2Aligning680
L_level2Aligning679:
;Main 6.0V.c,54 :: 		else if(Sensor1 == 1)
0x10E0	0xA881      	BTFSS       PORTB, 4 
0x10E2	0xD006      	BRA         L_level2Aligning681
;Main 6.0V.c,55 :: 		rotateAntiClockwise(220);
0x10E4	0x0EDC      	MOVLW       220
0x10E6	0x0101      	MOVLB       1
0x10E8	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x10EA	0x0E00      	MOVLW       0
0x10EC	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x10EE	0xDF03      	RCALL       _rotateAntiClockwise
L_level2Aligning681:
L_level2Aligning680:
;Main 6.0V.c,57 :: 		}
0x10F0	0xD7DB      	BRA         L_level2Aligning675
L_level2Aligning676:
;Main 6.0V.c,58 :: 		stop();
0x10F2	0xDEFC      	RCALL       _stop
;Main 6.0V.c,59 :: 		}
0x10F4	0x0012      	RETURN      0
; end of _level2Aligning
_moveStraightSlow:
;Main 6.0V.c,183 :: 		void moveStraightSlow(){
;Main 6.0V.c,184 :: 		moveForward(205,200);
0x10F6	0x0ECD      	MOVLW       205
0x10F8	0x0101      	MOVLB       1
0x10FA	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x10FC	0x0E00      	MOVLW       0
0x10FE	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x1100	0x0EC8      	MOVLW       200
0x1102	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x1104	0x0E00      	MOVLW       0
0x1106	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x1108	0xDEDD      	RCALL       _moveForward
;Main 6.0V.c,185 :: 		}
0x110A	0x0012      	RETURN      0
; end of _moveStraightSlow
_isAllWhite:
;sensorpanel.h,23 :: 		int isAllWhite(){
;sensorpanel.h,24 :: 		if( Scout==0 && Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0){
0x110C	0xBA81      	BTFSC       PORTB, 5 
0x110E	0xD017      	BRA         L_isAllWhite6
0x1110	0xB881      	BTFSC       PORTB, 4 
0x1112	0xD015      	BRA         L_isAllWhite6
0x1114	0xB681      	BTFSC       PORTB, 3 
0x1116	0xD013      	BRA         L_isAllWhite6
0x1118	0xB883      	BTFSC       PORTD, 4 
0x111A	0xD011      	BRA         L_isAllWhite6
0x111C	0xBA83      	BTFSC       PORTD, 5 
0x111E	0xD00F      	BRA         L_isAllWhite6
0x1120	0xBC83      	BTFSC       PORTD, 6 
0x1122	0xD00D      	BRA         L_isAllWhite6
0x1124	0xBE83      	BTFSC       PORTD, 7 
0x1126	0xD00B      	BRA         L_isAllWhite6
0x1128	0xB481      	BTFSC       PORTB, 2 
0x112A	0xD009      	BRA         L_isAllWhite6
0x112C	0xBC81      	BTFSC       PORTB, 6 
0x112E	0xD007      	BRA         L_isAllWhite6
0x1130	0xBE81      	BTFSC       PORTB, 7 
0x1132	0xD005      	BRA         L_isAllWhite6
L__isAllWhite770:
;sensorpanel.h,25 :: 		return 1;
0x1134	0x0E01      	MOVLW       1
0x1136	0x6E00      	MOVWF       R0 
0x1138	0x0E00      	MOVLW       0
0x113A	0x6E01      	MOVWF       R1 
0x113C	0x0012      	RETURN      0
;sensorpanel.h,26 :: 		}
L_isAllWhite6:
;sensorpanel.h,28 :: 		return 0;
0x113E	0x6A00      	CLRF        R0 
0x1140	0x6A01      	CLRF        R1 
;sensorpanel.h,29 :: 		}
0x1142	0x0012      	RETURN      0
; end of _isAllWhite
_isPathClear:
;Main 6.0V.c,317 :: 		int isPathClear() {
;Main 6.0V.c,318 :: 		if(getDistanceSonar2('L') < 5 || getDistanceSonar2('M') < 5 || getDistanceSonar2('R') < 5) {
0x1144	0x0E4C      	MOVLW       76
0x1146	0x0101      	MOVLB       1
0x1148	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x114A	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x114E	0x0E05      	MOVLW       5
0x1150	0x5C00      	SUBWF       R0, 0 
0x1152	0xE311      	BNC         L__isPathClear913
0x1154	0x0E4D      	MOVLW       77
0x1156	0x0101      	MOVLB       1
0x1158	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x115A	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x115E	0x0E05      	MOVLW       5
0x1160	0x5C00      	SUBWF       R0, 0 
0x1162	0xE309      	BNC         L__isPathClear913
0x1164	0x0E52      	MOVLW       82
0x1166	0x0101      	MOVLB       1
0x1168	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x116A	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x116E	0x0E05      	MOVLW       5
0x1170	0x5C00      	SUBWF       R0, 0 
0x1172	0xE301      	BNC         L__isPathClear913
0x1174	0xD003      	BRA         L_isPathClear758
L__isPathClear913:
;Main 6.0V.c,319 :: 		return 0;     // Not Clear
0x1176	0x6A00      	CLRF        R0 
0x1178	0x6A01      	CLRF        R1 
0x117A	0x0012      	RETURN      0
;Main 6.0V.c,320 :: 		} else {
L_isPathClear758:
;Main 6.0V.c,321 :: 		return 1;
0x117C	0x0E01      	MOVLW       1
0x117E	0x6E00      	MOVWF       R0 
0x1180	0x0E00      	MOVLW       0
0x1182	0x6E01      	MOVWF       R1 
;Main 6.0V.c,323 :: 		}
0x1184	0x0012      	RETURN      0
; end of _isPathClear
_sendSensorStatus:
;debug.h,13 :: 		void sendSensorStatus(){
;debug.h,14 :: 		if( Sensor1 == 1){
0x1186	0xA881      	BTFSS       PORTB, 4 
0x1188	0xD00B      	BRA         L_sendSensorStatus48
;debug.h,15 :: 		debugText = "1";
0x118A	0x0E17      	MOVLW       ?lstr3_Main_326.0V
0x118C	0x6E15      	MOVWF       _debugText 
0x118E	0x0E00      	MOVLW       hi_addr(?lstr3_Main_326.0V)
0x1190	0x6E16      	MOVWF       _debugText+1 
;debug.h,16 :: 		UART1_Write_Text(debugText);
0x1192	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1196	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x119A	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,17 :: 		}
0x119E	0xD00C      	BRA         L_sendSensorStatus49
L_sendSensorStatus48:
;debug.h,18 :: 		else if( Sensor1 == 0){
0x11A0	0xB881      	BTFSC       PORTB, 4 
0x11A2	0xD00A      	BRA         L_sendSensorStatus50
;debug.h,19 :: 		debugText = "0";
0x11A4	0x0E19      	MOVLW       ?lstr4_Main_326.0V
0x11A6	0x6E15      	MOVWF       _debugText 
0x11A8	0x0E00      	MOVLW       hi_addr(?lstr4_Main_326.0V)
0x11AA	0x6E16      	MOVWF       _debugText+1 
;debug.h,20 :: 		UART1_Write_Text(debugText);
0x11AC	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11B0	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11B4	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,21 :: 		}
L_sendSensorStatus50:
L_sendSensorStatus49:
;debug.h,23 :: 		if( Sensor2 == 1){
0x11B8	0xA681      	BTFSS       PORTB, 3 
0x11BA	0xD00B      	BRA         L_sendSensorStatus51
;debug.h,24 :: 		debugText = "1";
0x11BC	0x0E21      	MOVLW       ?lstr5_Main_326.0V
0x11BE	0x6E15      	MOVWF       _debugText 
0x11C0	0x0E00      	MOVLW       hi_addr(?lstr5_Main_326.0V)
0x11C2	0x6E16      	MOVWF       _debugText+1 
;debug.h,25 :: 		UART1_Write_Text(debugText);
0x11C4	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11C8	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11CC	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,26 :: 		}
0x11D0	0xD00C      	BRA         L_sendSensorStatus52
L_sendSensorStatus51:
;debug.h,27 :: 		else if( Sensor2 == 0){
0x11D2	0xB681      	BTFSC       PORTB, 3 
0x11D4	0xD00A      	BRA         L_sendSensorStatus53
;debug.h,28 :: 		debugText = "0";
0x11D6	0x0E23      	MOVLW       ?lstr6_Main_326.0V
0x11D8	0x6E15      	MOVWF       _debugText 
0x11DA	0x0E00      	MOVLW       hi_addr(?lstr6_Main_326.0V)
0x11DC	0x6E16      	MOVWF       _debugText+1 
;debug.h,29 :: 		UART1_Write_Text(debugText);
0x11DE	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11E2	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11E6	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,30 :: 		}
L_sendSensorStatus53:
L_sendSensorStatus52:
;debug.h,32 :: 		if( Sensor3 == 1){
0x11EA	0xA883      	BTFSS       PORTD, 4 
0x11EC	0xD00B      	BRA         L_sendSensorStatus54
;debug.h,33 :: 		debugText = "1";
0x11EE	0x0E1F      	MOVLW       ?lstr7_Main_326.0V
0x11F0	0x6E15      	MOVWF       _debugText 
0x11F2	0x0E00      	MOVLW       hi_addr(?lstr7_Main_326.0V)
0x11F4	0x6E16      	MOVWF       _debugText+1 
;debug.h,34 :: 		UART1_Write_Text(debugText);
0x11F6	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11FA	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11FE	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,35 :: 		}
0x1202	0xD00C      	BRA         L_sendSensorStatus55
L_sendSensorStatus54:
;debug.h,36 :: 		else if( Sensor3 == 0){
0x1204	0xB883      	BTFSC       PORTD, 4 
0x1206	0xD00A      	BRA         L_sendSensorStatus56
;debug.h,37 :: 		debugText = "0";
0x1208	0x0E1B      	MOVLW       ?lstr8_Main_326.0V
0x120A	0x6E15      	MOVWF       _debugText 
0x120C	0x0E00      	MOVLW       hi_addr(?lstr8_Main_326.0V)
0x120E	0x6E16      	MOVWF       _debugText+1 
;debug.h,38 :: 		UART1_Write_Text(debugText);
0x1210	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1214	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1218	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,39 :: 		}
L_sendSensorStatus56:
L_sendSensorStatus55:
;debug.h,41 :: 		if( Sensor4 == 1){
0x121C	0xAA83      	BTFSS       PORTD, 5 
0x121E	0xD00B      	BRA         L_sendSensorStatus57
;debug.h,42 :: 		debugText = "1";
0x1220	0x0E1D      	MOVLW       ?lstr9_Main_326.0V
0x1222	0x6E15      	MOVWF       _debugText 
0x1224	0x0E00      	MOVLW       hi_addr(?lstr9_Main_326.0V)
0x1226	0x6E16      	MOVWF       _debugText+1 
;debug.h,43 :: 		UART1_Write_Text(debugText);
0x1228	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x122C	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1230	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,44 :: 		}
0x1234	0xD00C      	BRA         L_sendSensorStatus58
L_sendSensorStatus57:
;debug.h,45 :: 		else if( Sensor4 == 0){
0x1236	0xBA83      	BTFSC       PORTD, 5 
0x1238	0xD00A      	BRA         L_sendSensorStatus59
;debug.h,46 :: 		debugText = "0";
0x123A	0x0E25      	MOVLW       ?lstr10_Main_326.0V
0x123C	0x6E15      	MOVWF       _debugText 
0x123E	0x0E00      	MOVLW       hi_addr(?lstr10_Main_326.0V)
0x1240	0x6E16      	MOVWF       _debugText+1 
;debug.h,47 :: 		UART1_Write_Text(debugText);
0x1242	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1246	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x124A	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,48 :: 		}
L_sendSensorStatus59:
L_sendSensorStatus58:
;debug.h,50 :: 		if( Sensor5 == 1){
0x124E	0xAC83      	BTFSS       PORTD, 6 
0x1250	0xD00B      	BRA         L_sendSensorStatus60
;debug.h,51 :: 		debugText = "1";
0x1252	0x0EBC      	MOVLW       ?lstr11_Main_326.0V
0x1254	0x6E15      	MOVWF       _debugText 
0x1256	0x0E00      	MOVLW       hi_addr(?lstr11_Main_326.0V)
0x1258	0x6E16      	MOVWF       _debugText+1 
;debug.h,52 :: 		UART1_Write_Text(debugText);
0x125A	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x125E	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1262	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,53 :: 		}
0x1266	0xD00C      	BRA         L_sendSensorStatus61
L_sendSensorStatus60:
;debug.h,54 :: 		else if( Sensor5 == 0){
0x1268	0xBC83      	BTFSC       PORTD, 6 
0x126A	0xD00A      	BRA         L_sendSensorStatus62
;debug.h,55 :: 		debugText = "0";
0x126C	0x0EBE      	MOVLW       ?lstr12_Main_326.0V
0x126E	0x6E15      	MOVWF       _debugText 
0x1270	0x0E00      	MOVLW       hi_addr(?lstr12_Main_326.0V)
0x1272	0x6E16      	MOVWF       _debugText+1 
;debug.h,56 :: 		UART1_Write_Text(debugText);
0x1274	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1278	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x127C	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,57 :: 		}
L_sendSensorStatus62:
L_sendSensorStatus61:
;debug.h,59 :: 		if( Sensor6 == 1){
0x1280	0xAE83      	BTFSS       PORTD, 7 
0x1282	0xD00B      	BRA         L_sendSensorStatus63
;debug.h,60 :: 		debugText = "1";
0x1284	0x0EBA      	MOVLW       ?lstr13_Main_326.0V
0x1286	0x6E15      	MOVWF       _debugText 
0x1288	0x0E00      	MOVLW       hi_addr(?lstr13_Main_326.0V)
0x128A	0x6E16      	MOVWF       _debugText+1 
;debug.h,61 :: 		UART1_Write_Text(debugText);
0x128C	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1290	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1294	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,62 :: 		}
0x1298	0xD00C      	BRA         L_sendSensorStatus64
L_sendSensorStatus63:
;debug.h,63 :: 		else if( Sensor6 == 0){
0x129A	0xBE83      	BTFSC       PORTD, 7 
0x129C	0xD00A      	BRA         L_sendSensorStatus65
;debug.h,64 :: 		debugText = "0";
0x129E	0x0EB6      	MOVLW       ?lstr14_Main_326.0V
0x12A0	0x6E15      	MOVWF       _debugText 
0x12A2	0x0E00      	MOVLW       hi_addr(?lstr14_Main_326.0V)
0x12A4	0x6E16      	MOVWF       _debugText+1 
;debug.h,65 :: 		UART1_Write_Text(debugText);
0x12A6	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12AA	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12AE	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,66 :: 		}
L_sendSensorStatus65:
L_sendSensorStatus64:
;debug.h,68 :: 		if( Sensor7 == 1){
0x12B2	0xA481      	BTFSS       PORTB, 2 
0x12B4	0xD00B      	BRA         L_sendSensorStatus66
;debug.h,69 :: 		debugText = "1";
0x12B6	0x0EB8      	MOVLW       ?lstr15_Main_326.0V
0x12B8	0x6E15      	MOVWF       _debugText 
0x12BA	0x0E00      	MOVLW       hi_addr(?lstr15_Main_326.0V)
0x12BC	0x6E16      	MOVWF       _debugText+1 
;debug.h,70 :: 		UART1_Write_Text(debugText);
0x12BE	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12C2	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12C6	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,71 :: 		}
0x12CA	0xD00C      	BRA         L_sendSensorStatus67
L_sendSensorStatus66:
;debug.h,72 :: 		else if( Sensor7 == 0){
0x12CC	0xB481      	BTFSC       PORTB, 2 
0x12CE	0xD00A      	BRA         L_sendSensorStatus68
;debug.h,73 :: 		debugText = "0";
0x12D0	0x0EC0      	MOVLW       ?lstr16_Main_326.0V
0x12D2	0x6E15      	MOVWF       _debugText 
0x12D4	0x0E00      	MOVLW       hi_addr(?lstr16_Main_326.0V)
0x12D6	0x6E16      	MOVWF       _debugText+1 
;debug.h,74 :: 		UART1_Write_Text(debugText);
0x12D8	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12DC	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12E0	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,75 :: 		}
L_sendSensorStatus68:
L_sendSensorStatus67:
;debug.h,77 :: 		if( Sensor8 == 1){
0x12E4	0xAC81      	BTFSS       PORTB, 6 
0x12E6	0xD00B      	BRA         L_sendSensorStatus69
;debug.h,78 :: 		debugText = "1";
0x12E8	0x0ECB      	MOVLW       ?lstr17_Main_326.0V
0x12EA	0x6E15      	MOVWF       _debugText 
0x12EC	0x0E00      	MOVLW       hi_addr(?lstr17_Main_326.0V)
0x12EE	0x6E16      	MOVWF       _debugText+1 
;debug.h,79 :: 		UART1_Write_Text(debugText);
0x12F0	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12F4	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12F8	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,80 :: 		}
0x12FC	0xD00C      	BRA         L_sendSensorStatus70
L_sendSensorStatus69:
;debug.h,81 :: 		else if( Sensor8 == 0){
0x12FE	0xBC81      	BTFSC       PORTB, 6 
0x1300	0xD00A      	BRA         L_sendSensorStatus71
;debug.h,82 :: 		debugText = "0";
0x1302	0x0ECD      	MOVLW       ?lstr18_Main_326.0V
0x1304	0x6E15      	MOVWF       _debugText 
0x1306	0x0E00      	MOVLW       hi_addr(?lstr18_Main_326.0V)
0x1308	0x6E16      	MOVWF       _debugText+1 
;debug.h,83 :: 		UART1_Write_Text(debugText);
0x130A	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x130E	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1312	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,84 :: 		}
L_sendSensorStatus71:
L_sendSensorStatus70:
;debug.h,86 :: 		if( Sensor9 == 1){
0x1316	0xAE81      	BTFSS       PORTB, 7 
0x1318	0xD00B      	BRA         L_sendSensorStatus72
;debug.h,87 :: 		debugText = "1";
0x131A	0x0EC9      	MOVLW       ?lstr19_Main_326.0V
0x131C	0x6E15      	MOVWF       _debugText 
0x131E	0x0E00      	MOVLW       hi_addr(?lstr19_Main_326.0V)
0x1320	0x6E16      	MOVWF       _debugText+1 
;debug.h,88 :: 		UART1_Write_Text(debugText);
0x1322	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1326	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x132A	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,89 :: 		}
0x132E	0xD00C      	BRA         L_sendSensorStatus73
L_sendSensorStatus72:
;debug.h,90 :: 		else if( Sensor9 == 0){
0x1330	0xBE81      	BTFSC       PORTB, 7 
0x1332	0xD00A      	BRA         L_sendSensorStatus74
;debug.h,91 :: 		debugText = "0";
0x1334	0x0EC2      	MOVLW       ?lstr20_Main_326.0V
0x1336	0x6E15      	MOVWF       _debugText 
0x1338	0x0E00      	MOVLW       hi_addr(?lstr20_Main_326.0V)
0x133A	0x6E16      	MOVWF       _debugText+1 
;debug.h,92 :: 		UART1_Write_Text(debugText);
0x133C	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1340	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1344	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,93 :: 		}
L_sendSensorStatus74:
L_sendSensorStatus73:
;debug.h,95 :: 		if( Scout == 1){
0x1348	0xAA81      	BTFSS       PORTB, 5 
0x134A	0xD00B      	BRA         L_sendSensorStatus75
;debug.h,96 :: 		debugText = " 1; ";
0x134C	0x0EC4      	MOVLW       ?lstr21_Main_326.0V
0x134E	0x6E15      	MOVWF       _debugText 
0x1350	0x0E00      	MOVLW       hi_addr(?lstr21_Main_326.0V)
0x1352	0x6E16      	MOVWF       _debugText+1 
;debug.h,97 :: 		UART1_Write_Text(debugText);
0x1354	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1358	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x135C	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,98 :: 		}
0x1360	0xD00C      	BRA         L_sendSensorStatus76
L_sendSensorStatus75:
;debug.h,99 :: 		else if( Scout == 0){
0x1362	0xBA81      	BTFSC       PORTB, 5 
0x1364	0xD00A      	BRA         L_sendSensorStatus77
;debug.h,100 :: 		debugText = " 0; ";
0x1366	0x0E70      	MOVLW       ?lstr22_Main_326.0V
0x1368	0x6E15      	MOVWF       _debugText 
0x136A	0x0E00      	MOVLW       hi_addr(?lstr22_Main_326.0V)
0x136C	0x6E16      	MOVWF       _debugText+1 
;debug.h,101 :: 		UART1_Write_Text(debugText);
0x136E	0xF19FC015  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1372	0xF1A0C016  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1376	0xF002EC3B  	CALL        _UART1_Write_Text, 0
;debug.h,102 :: 		}
L_sendSensorStatus77:
L_sendSensorStatus76:
;debug.h,103 :: 		}
0x137A	0x0012      	RETURN      0
; end of _sendSensorStatus
_isAllBlack:
;sensorpanel.h,15 :: 		int isAllBlack(){
;sensorpanel.h,16 :: 		if( Scout==1 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1){
0x137C	0xAA81      	BTFSS       PORTB, 5 
0x137E	0xD017      	BRA         L_isAllBlack2
0x1380	0xA881      	BTFSS       PORTB, 4 
0x1382	0xD015      	BRA         L_isAllBlack2
0x1384	0xA681      	BTFSS       PORTB, 3 
0x1386	0xD013      	BRA         L_isAllBlack2
0x1388	0xA883      	BTFSS       PORTD, 4 
0x138A	0xD011      	BRA         L_isAllBlack2
0x138C	0xAA83      	BTFSS       PORTD, 5 
0x138E	0xD00F      	BRA         L_isAllBlack2
0x1390	0xAC83      	BTFSS       PORTD, 6 
0x1392	0xD00D      	BRA         L_isAllBlack2
0x1394	0xAE83      	BTFSS       PORTD, 7 
0x1396	0xD00B      	BRA         L_isAllBlack2
0x1398	0xA481      	BTFSS       PORTB, 2 
0x139A	0xD009      	BRA         L_isAllBlack2
0x139C	0xAC81      	BTFSS       PORTB, 6 
0x139E	0xD007      	BRA         L_isAllBlack2
0x13A0	0xAE81      	BTFSS       PORTB, 7 
0x13A2	0xD005      	BRA         L_isAllBlack2
L__isAllBlack769:
;sensorpanel.h,17 :: 		return 1;
0x13A4	0x0E01      	MOVLW       1
0x13A6	0x6E00      	MOVWF       R0 
0x13A8	0x0E00      	MOVLW       0
0x13AA	0x6E01      	MOVWF       R1 
0x13AC	0x0012      	RETURN      0
;sensorpanel.h,18 :: 		}
L_isAllBlack2:
;sensorpanel.h,20 :: 		return 0;
0x13AE	0x6A00      	CLRF        R0 
0x13B0	0x6A01      	CLRF        R1 
;sensorpanel.h,21 :: 		}
0x13B2	0x0012      	RETURN      0
; end of _isAllBlack
_reverse:
;motion.h,69 :: 		void reverse(int pwmLeft, int pwmRight){
;motion.h,70 :: 		motorLeft_reverse(pwmLeft);
0x13B4	0xF19FC196  	MOVFF       FARG_reverse_pwmLeft, FARG_motorLeft_reverse_pwm
0x13B8	0xF1A0C197  	MOVFF       FARG_reverse_pwmLeft+1, FARG_motorLeft_reverse_pwm+1
0x13BC	0xF001EC44  	CALL        _motorLeft_reverse, 0
;motion.h,71 :: 		motorRight_reverse(pwmRight);
0x13C0	0xF19FC198  	MOVFF       FARG_reverse_pwmRight, FARG_motorRight_reverse_pwm
0x13C4	0xF1A0C199  	MOVFF       FARG_reverse_pwmRight+1, FARG_motorRight_reverse_pwm+1
0x13C8	0xF001EC21  	CALL        _motorRight_reverse, 0
;motion.h,72 :: 		}
0x13CC	0x0012      	RETURN      0
; end of _reverse
_rotateByDegree:
;motion.h,99 :: 		void rotateByDegree(int degree){
;motion.h,100 :: 		if( degree == -90 ){
0x13CE	0x0EFF      	MOVLW       255
0x13D0	0x0101      	MOVLB       1
0x13D2	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x13D4	0xE102      	BNZ         L__rotateByDegree914
0x13D6	0x0EA6      	MOVLW       166
0x13D8	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree914:
0x13DA	0xE115      	BNZ         L_rotateByDegree8
;motion.h,101 :: 		rotateAntiClockwise(255);
0x13DC	0x0EFF      	MOVLW       255
0x13DE	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x13E0	0x0E00      	MOVLW       0
0x13E2	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x13E4	0xDD88      	RCALL       _rotateAntiClockwise
;motion.h,102 :: 		delay_ms(230);
0x13E6	0x0E06      	MOVLW       6
0x13E8	0x6E0B      	MOVWF       R11, 0
0x13EA	0x0ED6      	MOVLW       214
0x13EC	0x6E0C      	MOVWF       R12, 0
0x13EE	0x0E7B      	MOVLW       123
0x13F0	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree9:
0x13F2	0x2E0D      	DECFSZ      R13, 1, 0
0x13F4	0xD7FE      	BRA         L_rotateByDegree9
0x13F6	0x2E0C      	DECFSZ      R12, 1, 0
0x13F8	0xD7FC      	BRA         L_rotateByDegree9
0x13FA	0x2E0B      	DECFSZ      R11, 1, 0
0x13FC	0xD7FA      	BRA         L_rotateByDegree9
0x13FE	0x0000      	NOP
0x1400	0x0000      	NOP
;motion.h,103 :: 		stop();
0x1402	0xDD74      	RCALL       _stop
;motion.h,104 :: 		}
0x1404	0xD15B      	BRA         L_rotateByDegree10
L_rotateByDegree8:
;motion.h,105 :: 		else if( degree == 90 ){
0x1406	0x0E00      	MOVLW       0
0x1408	0x0101      	MOVLB       1
0x140A	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x140C	0xE102      	BNZ         L__rotateByDegree915
0x140E	0x0E5A      	MOVLW       90
0x1410	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree915:
0x1412	0xE115      	BNZ         L_rotateByDegree11
;motion.h,106 :: 		rotateClockwise(255);
0x1414	0x0EFF      	MOVLW       255
0x1416	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1418	0x0E00      	MOVLW       0
0x141A	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x141C	0xDD46      	RCALL       _rotateClockwise
;motion.h,107 :: 		delay_ms(230);
0x141E	0x0E06      	MOVLW       6
0x1420	0x6E0B      	MOVWF       R11, 0
0x1422	0x0ED6      	MOVLW       214
0x1424	0x6E0C      	MOVWF       R12, 0
0x1426	0x0E7B      	MOVLW       123
0x1428	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree12:
0x142A	0x2E0D      	DECFSZ      R13, 1, 0
0x142C	0xD7FE      	BRA         L_rotateByDegree12
0x142E	0x2E0C      	DECFSZ      R12, 1, 0
0x1430	0xD7FC      	BRA         L_rotateByDegree12
0x1432	0x2E0B      	DECFSZ      R11, 1, 0
0x1434	0xD7FA      	BRA         L_rotateByDegree12
0x1436	0x0000      	NOP
0x1438	0x0000      	NOP
;motion.h,108 :: 		stop();
0x143A	0xDD58      	RCALL       _stop
;motion.h,109 :: 		}
0x143C	0xD13F      	BRA         L_rotateByDegree13
L_rotateByDegree11:
;motion.h,110 :: 		else if( degree == -30 ){
0x143E	0x0EFF      	MOVLW       255
0x1440	0x0101      	MOVLB       1
0x1442	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1444	0xE102      	BNZ         L__rotateByDegree916
0x1446	0x0EE2      	MOVLW       226
0x1448	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree916:
0x144A	0xE123      	BNZ         L_rotateByDegree14
;motion.h,111 :: 		rotateAntiClockwise(255);
0x144C	0x0EFF      	MOVLW       255
0x144E	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1450	0x0E00      	MOVLW       0
0x1452	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1454	0xDD50      	RCALL       _rotateAntiClockwise
;motion.h,112 :: 		delay_ms(100);
0x1456	0x0E03      	MOVLW       3
0x1458	0x6E0B      	MOVWF       R11, 0
0x145A	0x0E8A      	MOVLW       138
0x145C	0x6E0C      	MOVWF       R12, 0
0x145E	0x0E55      	MOVLW       85
0x1460	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree15:
0x1462	0x2E0D      	DECFSZ      R13, 1, 0
0x1464	0xD7FE      	BRA         L_rotateByDegree15
0x1466	0x2E0C      	DECFSZ      R12, 1, 0
0x1468	0xD7FC      	BRA         L_rotateByDegree15
0x146A	0x2E0B      	DECFSZ      R11, 1, 0
0x146C	0xD7FA      	BRA         L_rotateByDegree15
0x146E	0x0000      	NOP
0x1470	0x0000      	NOP
;motion.h,113 :: 		stop();
0x1472	0xDD3C      	RCALL       _stop
;motion.h,114 :: 		delay_ms(200);
0x1474	0x0E06      	MOVLW       6
0x1476	0x6E0B      	MOVWF       R11, 0
0x1478	0x0E13      	MOVLW       19
0x147A	0x6E0C      	MOVWF       R12, 0
0x147C	0x0EAD      	MOVLW       173
0x147E	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree16:
0x1480	0x2E0D      	DECFSZ      R13, 1, 0
0x1482	0xD7FE      	BRA         L_rotateByDegree16
0x1484	0x2E0C      	DECFSZ      R12, 1, 0
0x1486	0xD7FC      	BRA         L_rotateByDegree16
0x1488	0x2E0B      	DECFSZ      R11, 1, 0
0x148A	0xD7FA      	BRA         L_rotateByDegree16
0x148C	0x0000      	NOP
0x148E	0x0000      	NOP
;motion.h,115 :: 		}
0x1490	0xD115      	BRA         L_rotateByDegree17
L_rotateByDegree14:
;motion.h,116 :: 		else if( degree == 30 ){
0x1492	0x0E00      	MOVLW       0
0x1494	0x0101      	MOVLB       1
0x1496	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1498	0xE102      	BNZ         L__rotateByDegree917
0x149A	0x0E1E      	MOVLW       30
0x149C	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree917:
0x149E	0xE123      	BNZ         L_rotateByDegree18
;motion.h,117 :: 		rotateClockwise(255);
0x14A0	0x0EFF      	MOVLW       255
0x14A2	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x14A4	0x0E00      	MOVLW       0
0x14A6	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x14A8	0xDD00      	RCALL       _rotateClockwise
;motion.h,118 :: 		delay_ms(100);
0x14AA	0x0E03      	MOVLW       3
0x14AC	0x6E0B      	MOVWF       R11, 0
0x14AE	0x0E8A      	MOVLW       138
0x14B0	0x6E0C      	MOVWF       R12, 0
0x14B2	0x0E55      	MOVLW       85
0x14B4	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree19:
0x14B6	0x2E0D      	DECFSZ      R13, 1, 0
0x14B8	0xD7FE      	BRA         L_rotateByDegree19
0x14BA	0x2E0C      	DECFSZ      R12, 1, 0
0x14BC	0xD7FC      	BRA         L_rotateByDegree19
0x14BE	0x2E0B      	DECFSZ      R11, 1, 0
0x14C0	0xD7FA      	BRA         L_rotateByDegree19
0x14C2	0x0000      	NOP
0x14C4	0x0000      	NOP
;motion.h,119 :: 		stop();
0x14C6	0xDD12      	RCALL       _stop
;motion.h,120 :: 		delay_ms(200);
0x14C8	0x0E06      	MOVLW       6
0x14CA	0x6E0B      	MOVWF       R11, 0
0x14CC	0x0E13      	MOVLW       19
0x14CE	0x6E0C      	MOVWF       R12, 0
0x14D0	0x0EAD      	MOVLW       173
0x14D2	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree20:
0x14D4	0x2E0D      	DECFSZ      R13, 1, 0
0x14D6	0xD7FE      	BRA         L_rotateByDegree20
0x14D8	0x2E0C      	DECFSZ      R12, 1, 0
0x14DA	0xD7FC      	BRA         L_rotateByDegree20
0x14DC	0x2E0B      	DECFSZ      R11, 1, 0
0x14DE	0xD7FA      	BRA         L_rotateByDegree20
0x14E0	0x0000      	NOP
0x14E2	0x0000      	NOP
;motion.h,121 :: 		}
0x14E4	0xD0EB      	BRA         L_rotateByDegree21
L_rotateByDegree18:
;motion.h,122 :: 		else if( degree == -60 ){
0x14E6	0x0EFF      	MOVLW       255
0x14E8	0x0101      	MOVLB       1
0x14EA	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x14EC	0xE102      	BNZ         L__rotateByDegree918
0x14EE	0x0EC4      	MOVLW       196
0x14F0	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree918:
0x14F2	0xE123      	BNZ         L_rotateByDegree22
;motion.h,123 :: 		rotateAntiClockwise(255);
0x14F4	0x0EFF      	MOVLW       255
0x14F6	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x14F8	0x0E00      	MOVLW       0
0x14FA	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x14FC	0xDCFC      	RCALL       _rotateAntiClockwise
;motion.h,124 :: 		delay_ms(155);
0x14FE	0x0E04      	MOVLW       4
0x1500	0x6E0B      	MOVWF       R11, 0
0x1502	0x0EEF      	MOVLW       239
0x1504	0x6E0C      	MOVWF       R12, 0
0x1506	0x0E79      	MOVLW       121
0x1508	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree23:
0x150A	0x2E0D      	DECFSZ      R13, 1, 0
0x150C	0xD7FE      	BRA         L_rotateByDegree23
0x150E	0x2E0C      	DECFSZ      R12, 1, 0
0x1510	0xD7FC      	BRA         L_rotateByDegree23
0x1512	0x2E0B      	DECFSZ      R11, 1, 0
0x1514	0xD7FA      	BRA         L_rotateByDegree23
0x1516	0x0000      	NOP
0x1518	0x0000      	NOP
;motion.h,125 :: 		stop();
0x151A	0xDCE8      	RCALL       _stop
;motion.h,126 :: 		delay_ms(200);
0x151C	0x0E06      	MOVLW       6
0x151E	0x6E0B      	MOVWF       R11, 0
0x1520	0x0E13      	MOVLW       19
0x1522	0x6E0C      	MOVWF       R12, 0
0x1524	0x0EAD      	MOVLW       173
0x1526	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree24:
0x1528	0x2E0D      	DECFSZ      R13, 1, 0
0x152A	0xD7FE      	BRA         L_rotateByDegree24
0x152C	0x2E0C      	DECFSZ      R12, 1, 0
0x152E	0xD7FC      	BRA         L_rotateByDegree24
0x1530	0x2E0B      	DECFSZ      R11, 1, 0
0x1532	0xD7FA      	BRA         L_rotateByDegree24
0x1534	0x0000      	NOP
0x1536	0x0000      	NOP
;motion.h,127 :: 		}
0x1538	0xD0C1      	BRA         L_rotateByDegree25
L_rotateByDegree22:
;motion.h,128 :: 		else if( degree == 60 ){
0x153A	0x0E00      	MOVLW       0
0x153C	0x0101      	MOVLB       1
0x153E	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1540	0xE102      	BNZ         L__rotateByDegree919
0x1542	0x0E3C      	MOVLW       60
0x1544	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree919:
0x1546	0xE123      	BNZ         L_rotateByDegree26
;motion.h,129 :: 		rotateClockwise(255);
0x1548	0x0EFF      	MOVLW       255
0x154A	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x154C	0x0E00      	MOVLW       0
0x154E	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x1550	0xDCAC      	RCALL       _rotateClockwise
;motion.h,130 :: 		delay_ms(155);
0x1552	0x0E04      	MOVLW       4
0x1554	0x6E0B      	MOVWF       R11, 0
0x1556	0x0EEF      	MOVLW       239
0x1558	0x6E0C      	MOVWF       R12, 0
0x155A	0x0E79      	MOVLW       121
0x155C	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree27:
0x155E	0x2E0D      	DECFSZ      R13, 1, 0
0x1560	0xD7FE      	BRA         L_rotateByDegree27
0x1562	0x2E0C      	DECFSZ      R12, 1, 0
0x1564	0xD7FC      	BRA         L_rotateByDegree27
0x1566	0x2E0B      	DECFSZ      R11, 1, 0
0x1568	0xD7FA      	BRA         L_rotateByDegree27
0x156A	0x0000      	NOP
0x156C	0x0000      	NOP
;motion.h,131 :: 		stop();
0x156E	0xDCBE      	RCALL       _stop
;motion.h,132 :: 		delay_ms(200);
0x1570	0x0E06      	MOVLW       6
0x1572	0x6E0B      	MOVWF       R11, 0
0x1574	0x0E13      	MOVLW       19
0x1576	0x6E0C      	MOVWF       R12, 0
0x1578	0x0EAD      	MOVLW       173
0x157A	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree28:
0x157C	0x2E0D      	DECFSZ      R13, 1, 0
0x157E	0xD7FE      	BRA         L_rotateByDegree28
0x1580	0x2E0C      	DECFSZ      R12, 1, 0
0x1582	0xD7FC      	BRA         L_rotateByDegree28
0x1584	0x2E0B      	DECFSZ      R11, 1, 0
0x1586	0xD7FA      	BRA         L_rotateByDegree28
0x1588	0x0000      	NOP
0x158A	0x0000      	NOP
;motion.h,133 :: 		}
0x158C	0xD097      	BRA         L_rotateByDegree29
L_rotateByDegree26:
;motion.h,134 :: 		else if( degree == -45 ){
0x158E	0x0EFF      	MOVLW       255
0x1590	0x0101      	MOVLB       1
0x1592	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1594	0xE102      	BNZ         L__rotateByDegree920
0x1596	0x0ED3      	MOVLW       211
0x1598	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree920:
0x159A	0xE121      	BNZ         L_rotateByDegree30
;motion.h,135 :: 		rotateAntiClockwise(255);
0x159C	0x0EFF      	MOVLW       255
0x159E	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x15A0	0x0E00      	MOVLW       0
0x15A2	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x15A4	0xDCA8      	RCALL       _rotateAntiClockwise
;motion.h,136 :: 		delay_ms(135);
0x15A6	0x0E04      	MOVLW       4
0x15A8	0x6E0B      	MOVWF       R11, 0
0x15AA	0x0E6D      	MOVLW       109
0x15AC	0x6E0C      	MOVWF       R12, 0
0x15AE	0x0E9B      	MOVLW       155
0x15B0	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree31:
0x15B2	0x2E0D      	DECFSZ      R13, 1, 0
0x15B4	0xD7FE      	BRA         L_rotateByDegree31
0x15B6	0x2E0C      	DECFSZ      R12, 1, 0
0x15B8	0xD7FC      	BRA         L_rotateByDegree31
0x15BA	0x2E0B      	DECFSZ      R11, 1, 0
0x15BC	0xD7FA      	BRA         L_rotateByDegree31
;motion.h,137 :: 		stop();
0x15BE	0xDC96      	RCALL       _stop
;motion.h,138 :: 		delay_ms(200);
0x15C0	0x0E06      	MOVLW       6
0x15C2	0x6E0B      	MOVWF       R11, 0
0x15C4	0x0E13      	MOVLW       19
0x15C6	0x6E0C      	MOVWF       R12, 0
0x15C8	0x0EAD      	MOVLW       173
0x15CA	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree32:
0x15CC	0x2E0D      	DECFSZ      R13, 1, 0
0x15CE	0xD7FE      	BRA         L_rotateByDegree32
0x15D0	0x2E0C      	DECFSZ      R12, 1, 0
0x15D2	0xD7FC      	BRA         L_rotateByDegree32
0x15D4	0x2E0B      	DECFSZ      R11, 1, 0
0x15D6	0xD7FA      	BRA         L_rotateByDegree32
0x15D8	0x0000      	NOP
0x15DA	0x0000      	NOP
;motion.h,139 :: 		}
0x15DC	0xD06F      	BRA         L_rotateByDegree33
L_rotateByDegree30:
;motion.h,140 :: 		else if( degree == 45 ){
0x15DE	0x0E00      	MOVLW       0
0x15E0	0x0101      	MOVLB       1
0x15E2	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x15E4	0xE102      	BNZ         L__rotateByDegree921
0x15E6	0x0E2D      	MOVLW       45
0x15E8	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree921:
0x15EA	0xE121      	BNZ         L_rotateByDegree34
;motion.h,141 :: 		rotateClockwise(255);
0x15EC	0x0EFF      	MOVLW       255
0x15EE	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x15F0	0x0E00      	MOVLW       0
0x15F2	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x15F4	0xDC5A      	RCALL       _rotateClockwise
;motion.h,142 :: 		delay_ms(135);
0x15F6	0x0E04      	MOVLW       4
0x15F8	0x6E0B      	MOVWF       R11, 0
0x15FA	0x0E6D      	MOVLW       109
0x15FC	0x6E0C      	MOVWF       R12, 0
0x15FE	0x0E9B      	MOVLW       155
0x1600	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree35:
0x1602	0x2E0D      	DECFSZ      R13, 1, 0
0x1604	0xD7FE      	BRA         L_rotateByDegree35
0x1606	0x2E0C      	DECFSZ      R12, 1, 0
0x1608	0xD7FC      	BRA         L_rotateByDegree35
0x160A	0x2E0B      	DECFSZ      R11, 1, 0
0x160C	0xD7FA      	BRA         L_rotateByDegree35
;motion.h,143 :: 		stop();
0x160E	0xDC6E      	RCALL       _stop
;motion.h,144 :: 		delay_ms(200);
0x1610	0x0E06      	MOVLW       6
0x1612	0x6E0B      	MOVWF       R11, 0
0x1614	0x0E13      	MOVLW       19
0x1616	0x6E0C      	MOVWF       R12, 0
0x1618	0x0EAD      	MOVLW       173
0x161A	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree36:
0x161C	0x2E0D      	DECFSZ      R13, 1, 0
0x161E	0xD7FE      	BRA         L_rotateByDegree36
0x1620	0x2E0C      	DECFSZ      R12, 1, 0
0x1622	0xD7FC      	BRA         L_rotateByDegree36
0x1624	0x2E0B      	DECFSZ      R11, 1, 0
0x1626	0xD7FA      	BRA         L_rotateByDegree36
0x1628	0x0000      	NOP
0x162A	0x0000      	NOP
;motion.h,145 :: 		}
0x162C	0xD047      	BRA         L_rotateByDegree37
L_rotateByDegree34:
;motion.h,146 :: 		else if( degree == -2 ){
0x162E	0x0EFF      	MOVLW       255
0x1630	0x0101      	MOVLB       1
0x1632	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1634	0xE102      	BNZ         L__rotateByDegree922
0x1636	0x0EFE      	MOVLW       254
0x1638	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree922:
0x163A	0xE11D      	BNZ         L_rotateByDegree38
;motion.h,147 :: 		rotateAntiClockwise(255);
0x163C	0x0EFF      	MOVLW       255
0x163E	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1640	0x0E00      	MOVLW       0
0x1642	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1644	0xDC58      	RCALL       _rotateAntiClockwise
;motion.h,148 :: 		delay_ms(6);
0x1646	0x0E27      	MOVLW       39
0x1648	0x6E0C      	MOVWF       R12, 0
0x164A	0x0EF5      	MOVLW       245
0x164C	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree39:
0x164E	0x2E0D      	DECFSZ      R13, 1, 0
0x1650	0xD7FE      	BRA         L_rotateByDegree39
0x1652	0x2E0C      	DECFSZ      R12, 1, 0
0x1654	0xD7FC      	BRA         L_rotateByDegree39
;motion.h,149 :: 		stop();
0x1656	0xDC4A      	RCALL       _stop
;motion.h,150 :: 		delay_ms(50);
0x1658	0x0E02      	MOVLW       2
0x165A	0x6E0B      	MOVWF       R11, 0
0x165C	0x0E45      	MOVLW       69
0x165E	0x6E0C      	MOVWF       R12, 0
0x1660	0x0EA9      	MOVLW       169
0x1662	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree40:
0x1664	0x2E0D      	DECFSZ      R13, 1, 0
0x1666	0xD7FE      	BRA         L_rotateByDegree40
0x1668	0x2E0C      	DECFSZ      R12, 1, 0
0x166A	0xD7FC      	BRA         L_rotateByDegree40
0x166C	0x2E0B      	DECFSZ      R11, 1, 0
0x166E	0xD7FA      	BRA         L_rotateByDegree40
0x1670	0x0000      	NOP
0x1672	0x0000      	NOP
;motion.h,151 :: 		}
0x1674	0xD023      	BRA         L_rotateByDegree41
L_rotateByDegree38:
;motion.h,152 :: 		else if( degree == 2 ){
0x1676	0x0E00      	MOVLW       0
0x1678	0x0101      	MOVLB       1
0x167A	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x167C	0xE102      	BNZ         L__rotateByDegree923
0x167E	0x0E02      	MOVLW       2
0x1680	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree923:
0x1682	0xE11C      	BNZ         L_rotateByDegree42
;motion.h,153 :: 		rotateClockwise(255);
0x1684	0x0EFF      	MOVLW       255
0x1686	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1688	0x0E00      	MOVLW       0
0x168A	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x168C	0xDC0E      	RCALL       _rotateClockwise
;motion.h,154 :: 		delay_ms(6);
0x168E	0x0E27      	MOVLW       39
0x1690	0x6E0C      	MOVWF       R12, 0
0x1692	0x0EF5      	MOVLW       245
0x1694	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree43:
0x1696	0x2E0D      	DECFSZ      R13, 1, 0
0x1698	0xD7FE      	BRA         L_rotateByDegree43
0x169A	0x2E0C      	DECFSZ      R12, 1, 0
0x169C	0xD7FC      	BRA         L_rotateByDegree43
;motion.h,155 :: 		stop();
0x169E	0xDC26      	RCALL       _stop
;motion.h,156 :: 		delay_ms(50);
0x16A0	0x0E02      	MOVLW       2
0x16A2	0x6E0B      	MOVWF       R11, 0
0x16A4	0x0E45      	MOVLW       69
0x16A6	0x6E0C      	MOVWF       R12, 0
0x16A8	0x0EA9      	MOVLW       169
0x16AA	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree44:
0x16AC	0x2E0D      	DECFSZ      R13, 1, 0
0x16AE	0xD7FE      	BRA         L_rotateByDegree44
0x16B0	0x2E0C      	DECFSZ      R12, 1, 0
0x16B2	0xD7FC      	BRA         L_rotateByDegree44
0x16B4	0x2E0B      	DECFSZ      R11, 1, 0
0x16B6	0xD7FA      	BRA         L_rotateByDegree44
0x16B8	0x0000      	NOP
0x16BA	0x0000      	NOP
;motion.h,157 :: 		}
L_rotateByDegree42:
L_rotateByDegree41:
L_rotateByDegree37:
L_rotateByDegree33:
L_rotateByDegree29:
L_rotateByDegree25:
L_rotateByDegree21:
L_rotateByDegree17:
L_rotateByDegree13:
L_rotateByDegree10:
;motion.h,158 :: 		}
0x16BC	0x0012      	RETURN      0
; end of _rotateByDegree
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x16BE	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x16C0	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x16C4	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x16C6	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x16C8	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x16CA	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x16CC	0x0012      	RETURN      0
; end of ___CC2DW
_configure:
;configuration.h,9 :: 		void configure(){
;configuration.h,12 :: 		TRISA = 0b11001010;
0x16CE	0x0ECA      	MOVLW       202
0x16D0	0x6E92      	MOVWF       TRISA 
;configuration.h,13 :: 		TRISB = 0b11111111;
0x16D2	0x0EFF      	MOVLW       255
0x16D4	0x6E93      	MOVWF       TRISB 
;configuration.h,14 :: 		TRISC = 0b00000000;
0x16D6	0x6A94      	CLRF        TRISC 
;configuration.h,15 :: 		TRISD = 0b11110010;
0x16D8	0x0EF2      	MOVLW       242
0x16DA	0x6E95      	MOVWF       TRISD 
;configuration.h,16 :: 		TRISE = 0b00000101;
0x16DC	0x0E05      	MOVLW       5
0x16DE	0x6E96      	MOVWF       TRISE 
;configuration.h,18 :: 		PORTA = 0;
0x16E0	0x6A80      	CLRF        PORTA 
;configuration.h,19 :: 		PORTB = 0;
0x16E2	0x6A81      	CLRF        PORTB 
;configuration.h,20 :: 		PORTC = 0;
0x16E4	0x6A82      	CLRF        PORTC 
;configuration.h,21 :: 		PORTD = 0;
0x16E6	0x6A83      	CLRF        PORTD 
;configuration.h,22 :: 		PORTE = 0;
0x16E8	0x6A84      	CLRF        PORTE 
;configuration.h,24 :: 		PWM1_Init(5000);
0x16EA	0x80CA      	BSF         T2CON, 0, 0
0x16EC	0x92CA      	BCF         T2CON, 1, 0
0x16EE	0x0EF9      	MOVLW       249
0x16F0	0x6ECB      	MOVWF       PR2, 0
0x16F2	0xDC0E      	RCALL       _PWM1_Init
;configuration.h,25 :: 		PWM2_Init(5000);
0x16F4	0x80CA      	BSF         T2CON, 0, 0
0x16F6	0x92CA      	BCF         T2CON, 1, 0
0x16F8	0x0EF9      	MOVLW       249
0x16FA	0x6ECB      	MOVWF       PR2, 0
0x16FC	0xDC0D      	RCALL       _PWM2_Init
;configuration.h,26 :: 		PWM1_Start();
0x16FE	0xDC27      	RCALL       _PWM1_Start
;configuration.h,27 :: 		PWM2_Start();
0x1700	0xDC21      	RCALL       _PWM2_Start
;configuration.h,28 :: 		UART1_Init(9600);
0x1702	0x0E81      	MOVLW       129
0x1704	0x6EAF      	MOVWF       SPBRG 
0x1706	0x84AC      	BSF         TXSTA, 2, 0
0x1708	0xDC4B      	RCALL       _UART1_Init
;configuration.h,36 :: 		ADCON0 = 0b11000001;
0x170A	0x0EC1      	MOVLW       193
0x170C	0x6EC2      	MOVWF       ADCON0 
;configuration.h,37 :: 		ADCON1 = 0b00000110;   //ADCON1 = 0b00000000;
0x170E	0x0E06      	MOVLW       6
0x1710	0x6EC1      	MOVWF       ADCON1 
;configuration.h,45 :: 		LEVEL = 0;
0x1712	0x0101      	MOVLB       1
0x1714	0x6B84      	CLRF        _LEVEL, 1
0x1716	0x6B85      	CLRF        _LEVEL+1, 1
;configuration.h,46 :: 		LEVEL1_STATE  = NOT_REACHED;
0x1718	0x6B86      	CLRF        _LEVEL1_STATE, 1
0x171A	0x6B87      	CLRF        _LEVEL1_STATE+1, 1
;configuration.h,47 :: 		LEVEL2_STATE  = NOT_REACHED;
0x171C	0x6B7E      	CLRF        _LEVEL2_STATE, 1
0x171E	0x6B7F      	CLRF        _LEVEL2_STATE+1, 1
;configuration.h,48 :: 		LEVEL3_STATE  = NOT_REACHED;
0x1720	0x6B88      	CLRF        _LEVEL3_STATE, 1
0x1722	0x6B89      	CLRF        _LEVEL3_STATE+1, 1
;configuration.h,51 :: 		T0CON=0xC3;
0x1724	0x0EC3      	MOVLW       195
0x1726	0x6ED5      	MOVWF       T0CON 
;configuration.h,52 :: 		TMR0L=0x00;
0x1728	0x6AD6      	CLRF        TMR0L 
;configuration.h,53 :: 		INTCON.TMR0IE=1;
0x172A	0x8AF2      	BSF         INTCON, 5 
;configuration.h,55 :: 		T1CON=0x80;
0x172C	0x0E80      	MOVLW       128
0x172E	0x6ECD      	MOVWF       T1CON 
;configuration.h,56 :: 		TMR1H=0x00;
0x1730	0x6ACF      	CLRF        TMR1H 
;configuration.h,57 :: 		TMR1L=0x00;
0x1732	0x6ACE      	CLRF        TMR1L 
;configuration.h,58 :: 		}
0x1734	0x0012      	RETURN      0
; end of _configure
_level3Aligning:
;Main 6.0V.c,25 :: 		void level3Aligning(){
;Main 6.0V.c,26 :: 		while(Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0)
L_level3Aligning652:
0x1736	0xAA83      	BTFSS       PORTD, 5 
0x1738	0xD005      	BRA         L__level3Aligning901
0x173A	0xAC83      	BTFSS       PORTD, 6 
0x173C	0xD003      	BRA         L__level3Aligning901
0x173E	0xAE83      	BTFSS       PORTD, 7 
0x1740	0xD001      	BRA         L__level3Aligning901
0x1742	0xD00B      	BRA         L_level3Aligning653
L__level3Aligning901:
;Main 6.0V.c,27 :: 		reverse(220,220);
0x1744	0x0EDC      	MOVLW       220
0x1746	0x0101      	MOVLB       1
0x1748	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x174A	0x0E00      	MOVLW       0
0x174C	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x174E	0x0EDC      	MOVLW       220
0x1750	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x1752	0x0E00      	MOVLW       0
0x1754	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x1756	0xDE2E      	RCALL       _reverse
0x1758	0xD7EE      	BRA         L_level3Aligning652
L_level3Aligning653:
;Main 6.0V.c,28 :: 		delay_ms(1);
0x175A	0x0E07      	MOVLW       7
0x175C	0x6E0C      	MOVWF       R12, 0
0x175E	0x0E7D      	MOVLW       125
0x1760	0x6E0D      	MOVWF       R13, 0
L_level3Aligning656:
0x1762	0x2E0D      	DECFSZ      R13, 1, 0
0x1764	0xD7FE      	BRA         L_level3Aligning656
0x1766	0x2E0C      	DECFSZ      R12, 1, 0
0x1768	0xD7FC      	BRA         L_level3Aligning656
;Main 6.0V.c,29 :: 		stop();
0x176A	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,30 :: 		sendText("Sensor5 at LEVEL 2 ");
0x176E	0x0E20      	MOVLW       ?lstr32_Main_326.0V
0x1770	0x0101      	MOVLB       1
0x1772	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x1774	0x0E01      	MOVLW       hi_addr(?lstr32_Main_326.0V)
0x1776	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x1778	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,31 :: 		delay_ms(500);
0x177C	0x0E0D      	MOVLW       13
0x177E	0x6E0B      	MOVWF       R11, 0
0x1780	0x0EAF      	MOVLW       175
0x1782	0x6E0C      	MOVWF       R12, 0
0x1784	0x0EB6      	MOVLW       182
0x1786	0x6E0D      	MOVWF       R13, 0
L_level3Aligning657:
0x1788	0x2E0D      	DECFSZ      R13, 1, 0
0x178A	0xD7FE      	BRA         L_level3Aligning657
0x178C	0x2E0C      	DECFSZ      R12, 1, 0
0x178E	0xD7FC      	BRA         L_level3Aligning657
0x1790	0x2E0B      	DECFSZ      R11, 1, 0
0x1792	0xD7FA      	BRA         L_level3Aligning657
0x1794	0x0000      	NOP
;Main 6.0V.c,32 :: 		while(Sensor1==0 || Sensor2==0 || Sensor3==0 || Sensor4==0 || Sensor5==0 || Sensor6==0 || Sensor7==0 || Sensor8==0 || Sensor9==0){
L_level3Aligning658:
0x1796	0xA881      	BTFSS       PORTB, 4 
0x1798	0xD011      	BRA         L__level3Aligning900
0x179A	0xA681      	BTFSS       PORTB, 3 
0x179C	0xD00F      	BRA         L__level3Aligning900
0x179E	0xA883      	BTFSS       PORTD, 4 
0x17A0	0xD00D      	BRA         L__level3Aligning900
0x17A2	0xAA83      	BTFSS       PORTD, 5 
0x17A4	0xD00B      	BRA         L__level3Aligning900
0x17A6	0xAC83      	BTFSS       PORTD, 6 
0x17A8	0xD009      	BRA         L__level3Aligning900
0x17AA	0xAE83      	BTFSS       PORTD, 7 
0x17AC	0xD007      	BRA         L__level3Aligning900
0x17AE	0xA481      	BTFSS       PORTB, 2 
0x17B0	0xD005      	BRA         L__level3Aligning900
0x17B2	0xAC81      	BTFSS       PORTB, 6 
0x17B4	0xD003      	BRA         L__level3Aligning900
0x17B6	0xAE81      	BTFSS       PORTB, 7 
0x17B8	0xD001      	BRA         L__level3Aligning900
0x17BA	0xD014      	BRA         L_level3Aligning659
L__level3Aligning900:
;Main 6.0V.c,33 :: 		if(Sensor9 == 1)
0x17BC	0xAE81      	BTFSS       PORTB, 7 
0x17BE	0xD008      	BRA         L_level3Aligning662
;Main 6.0V.c,34 :: 		rotateAntiClockwise(220);
0x17C0	0x0101      	MOVLB       1
0x17C2	0x0EDC      	MOVLW       220
0x17C4	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x17C6	0x0E00      	MOVLW       0
0x17C8	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x17CA	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x17CE	0xD009      	BRA         L_level3Aligning663
L_level3Aligning662:
;Main 6.0V.c,36 :: 		else if(Sensor1 == 1)
0x17D0	0xA881      	BTFSS       PORTB, 4 
0x17D2	0xD007      	BRA         L_level3Aligning664
;Main 6.0V.c,37 :: 		rotateClockwise(220);
0x17D4	0x0EDC      	MOVLW       220
0x17D6	0x0101      	MOVLB       1
0x17D8	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x17DA	0x0E00      	MOVLW       0
0x17DC	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x17DE	0xF007EC55  	CALL        _rotateClockwise, 0
L_level3Aligning664:
L_level3Aligning663:
;Main 6.0V.c,39 :: 		}
0x17E2	0xD7D9      	BRA         L_level3Aligning658
L_level3Aligning659:
;Main 6.0V.c,40 :: 		stop();
0x17E4	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,41 :: 		}
0x17E8	0x0012      	RETURN      0
; end of _level3Aligning
_lineFollowNormalWorked:
;linefollow.h,107 :: 		void lineFollowNormalWorked(){
;linefollow.h,108 :: 		if(Scout == 1){
0x17EA	0xAA81      	BTFSS       PORTB, 5 
0x17EC	0xD138      	BRA         L_lineFollowNormalWorked121
;linefollow.h,110 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x17EE	0xB883      	BTFSC       PORTD, 4 
0x17F0	0xD013      	BRA         L_lineFollowNormalWorked124
0x17F2	0xAA83      	BTFSS       PORTD, 5 
0x17F4	0xD011      	BRA         L_lineFollowNormalWorked124
0x17F6	0xAC83      	BTFSS       PORTD, 6 
0x17F8	0xD00F      	BRA         L_lineFollowNormalWorked124
0x17FA	0xBE83      	BTFSC       PORTD, 7 
0x17FC	0xD00D      	BRA         L_lineFollowNormalWorked124
0x17FE	0xB481      	BTFSC       PORTB, 2 
0x1800	0xD00B      	BRA         L_lineFollowNormalWorked124
L__lineFollowNormalWorked820:
;linefollow.h,111 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1802	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x1806	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x180A	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x180E	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1812	0xF007EC62  	CALL        _moveForward, 0
0x1816	0xD122      	BRA         L_lineFollowNormalWorked125
L_lineFollowNormalWorked124:
;linefollow.h,112 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1818	0xB883      	BTFSC       PORTD, 4 
0x181A	0xD013      	BRA         L_lineFollowNormalWorked128
0x181C	0xAA83      	BTFSS       PORTD, 5 
0x181E	0xD011      	BRA         L_lineFollowNormalWorked128
0x1820	0xAC83      	BTFSS       PORTD, 6 
0x1822	0xD00F      	BRA         L_lineFollowNormalWorked128
0x1824	0xAE83      	BTFSS       PORTD, 7 
0x1826	0xD00D      	BRA         L_lineFollowNormalWorked128
0x1828	0xB481      	BTFSC       PORTB, 2 
0x182A	0xD00B      	BRA         L_lineFollowNormalWorked128
L__lineFollowNormalWorked819:
;linefollow.h,113 :: 		moveForward(FAST_PWM,FAST_PWM);
0x182C	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1830	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1834	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1838	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x183C	0xF007EC62  	CALL        _moveForward, 0
0x1840	0xD10D      	BRA         L_lineFollowNormalWorked129
L_lineFollowNormalWorked128:
;linefollow.h,114 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1842	0xB883      	BTFSC       PORTD, 4 
0x1844	0xD013      	BRA         L_lineFollowNormalWorked132
0x1846	0xBA83      	BTFSC       PORTD, 5 
0x1848	0xD011      	BRA         L_lineFollowNormalWorked132
0x184A	0xAC83      	BTFSS       PORTD, 6 
0x184C	0xD00F      	BRA         L_lineFollowNormalWorked132
0x184E	0xBE83      	BTFSC       PORTD, 7 
0x1850	0xD00D      	BRA         L_lineFollowNormalWorked132
0x1852	0xB481      	BTFSC       PORTB, 2 
0x1854	0xD00B      	BRA         L_lineFollowNormalWorked132
L__lineFollowNormalWorked818:
;linefollow.h,115 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1856	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x185A	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x185E	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1862	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1866	0xF007EC62  	CALL        _moveForward, 0
0x186A	0xD0F8      	BRA         L_lineFollowNormalWorked133
L_lineFollowNormalWorked132:
;linefollow.h,116 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x186C	0xB883      	BTFSC       PORTD, 4 
0x186E	0xD013      	BRA         L_lineFollowNormalWorked136
0x1870	0xBA83      	BTFSC       PORTD, 5 
0x1872	0xD011      	BRA         L_lineFollowNormalWorked136
0x1874	0xAC83      	BTFSS       PORTD, 6 
0x1876	0xD00F      	BRA         L_lineFollowNormalWorked136
0x1878	0xAE83      	BTFSS       PORTD, 7 
0x187A	0xD00D      	BRA         L_lineFollowNormalWorked136
0x187C	0xB481      	BTFSC       PORTB, 2 
0x187E	0xD00B      	BRA         L_lineFollowNormalWorked136
L__lineFollowNormalWorked817:
;linefollow.h,117 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x1880	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1884	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1888	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x188C	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x1890	0xF007EC62  	CALL        _moveForward, 0
0x1894	0xD0E3      	BRA         L_lineFollowNormalWorked137
L_lineFollowNormalWorked136:
;linefollow.h,122 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1896	0xA883      	BTFSS       PORTD, 4 
0x1898	0xD00F      	BRA         L_lineFollowNormalWorked140
0x189A	0xBA83      	BTFSC       PORTD, 5 
0x189C	0xD00D      	BRA         L_lineFollowNormalWorked140
0x189E	0xBC83      	BTFSC       PORTD, 6 
0x18A0	0xD00B      	BRA         L_lineFollowNormalWorked140
0x18A2	0xBE83      	BTFSC       PORTD, 7 
0x18A4	0xD009      	BRA         L_lineFollowNormalWorked140
0x18A6	0xB481      	BTFSC       PORTB, 2 
0x18A8	0xD007      	BRA         L_lineFollowNormalWorked140
L__lineFollowNormalWorked816:
;linefollow.h,124 :: 		turnLeft(FAST_PWM);
0x18AA	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x18AE	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x18B2	0xF007EC90  	CALL        _turnLeft, 0
0x18B6	0xD0D2      	BRA         L_lineFollowNormalWorked141
L_lineFollowNormalWorked140:
;linefollow.h,125 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x18B8	0xA883      	BTFSS       PORTD, 4 
0x18BA	0xD00F      	BRA         L_lineFollowNormalWorked144
0x18BC	0xAA83      	BTFSS       PORTD, 5 
0x18BE	0xD00D      	BRA         L_lineFollowNormalWorked144
0x18C0	0xBC83      	BTFSC       PORTD, 6 
0x18C2	0xD00B      	BRA         L_lineFollowNormalWorked144
0x18C4	0xBE83      	BTFSC       PORTD, 7 
0x18C6	0xD009      	BRA         L_lineFollowNormalWorked144
0x18C8	0xB481      	BTFSC       PORTB, 2 
0x18CA	0xD007      	BRA         L_lineFollowNormalWorked144
L__lineFollowNormalWorked815:
;linefollow.h,127 :: 		turnLeft(FAST_PWM);
0x18CC	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x18D0	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x18D4	0xF007EC90  	CALL        _turnLeft, 0
0x18D8	0xD0C1      	BRA         L_lineFollowNormalWorked145
L_lineFollowNormalWorked144:
;linefollow.h,128 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x18DA	0xA883      	BTFSS       PORTD, 4 
0x18DC	0xD00F      	BRA         L_lineFollowNormalWorked148
0x18DE	0xAA83      	BTFSS       PORTD, 5 
0x18E0	0xD00D      	BRA         L_lineFollowNormalWorked148
0x18E2	0xAC83      	BTFSS       PORTD, 6 
0x18E4	0xD00B      	BRA         L_lineFollowNormalWorked148
0x18E6	0xBE83      	BTFSC       PORTD, 7 
0x18E8	0xD009      	BRA         L_lineFollowNormalWorked148
0x18EA	0xB481      	BTFSC       PORTB, 2 
0x18EC	0xD007      	BRA         L_lineFollowNormalWorked148
L__lineFollowNormalWorked814:
;linefollow.h,130 :: 		turnLeft(FAST_PWM);
0x18EE	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x18F2	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x18F6	0xF007EC90  	CALL        _turnLeft, 0
0x18FA	0xD0B0      	BRA         L_lineFollowNormalWorked149
L_lineFollowNormalWorked148:
;linefollow.h,131 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x18FC	0xB883      	BTFSC       PORTD, 4 
0x18FE	0xD00F      	BRA         L_lineFollowNormalWorked152
0x1900	0xAA83      	BTFSS       PORTD, 5 
0x1902	0xD00D      	BRA         L_lineFollowNormalWorked152
0x1904	0xBC83      	BTFSC       PORTD, 6 
0x1906	0xD00B      	BRA         L_lineFollowNormalWorked152
0x1908	0xBE83      	BTFSC       PORTD, 7 
0x190A	0xD009      	BRA         L_lineFollowNormalWorked152
0x190C	0xB481      	BTFSC       PORTB, 2 
0x190E	0xD007      	BRA         L_lineFollowNormalWorked152
L__lineFollowNormalWorked813:
;linefollow.h,133 :: 		turnLeft(FAST_PWM);
0x1910	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1914	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1918	0xF007EC90  	CALL        _turnLeft, 0
0x191C	0xD09F      	BRA         L_lineFollowNormalWorked153
L_lineFollowNormalWorked152:
;linefollow.h,136 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x191E	0xB883      	BTFSC       PORTD, 4 
0x1920	0xD00F      	BRA         L_lineFollowNormalWorked156
0x1922	0xBA83      	BTFSC       PORTD, 5 
0x1924	0xD00D      	BRA         L_lineFollowNormalWorked156
0x1926	0xBC83      	BTFSC       PORTD, 6 
0x1928	0xD00B      	BRA         L_lineFollowNormalWorked156
0x192A	0xAE83      	BTFSS       PORTD, 7 
0x192C	0xD009      	BRA         L_lineFollowNormalWorked156
0x192E	0xB481      	BTFSC       PORTB, 2 
0x1930	0xD007      	BRA         L_lineFollowNormalWorked156
L__lineFollowNormalWorked812:
;linefollow.h,138 :: 		turnRight(FAST_PWM);
0x1932	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1936	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x193A	0xF007EC99  	CALL        _turnRight, 0
0x193E	0xD08E      	BRA         L_lineFollowNormalWorked157
L_lineFollowNormalWorked156:
;linefollow.h,139 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1940	0xB883      	BTFSC       PORTD, 4 
0x1942	0xD00F      	BRA         L_lineFollowNormalWorked160
0x1944	0xBA83      	BTFSC       PORTD, 5 
0x1946	0xD00D      	BRA         L_lineFollowNormalWorked160
0x1948	0xAC83      	BTFSS       PORTD, 6 
0x194A	0xD00B      	BRA         L_lineFollowNormalWorked160
0x194C	0xAE83      	BTFSS       PORTD, 7 
0x194E	0xD009      	BRA         L_lineFollowNormalWorked160
0x1950	0xA481      	BTFSS       PORTB, 2 
0x1952	0xD007      	BRA         L_lineFollowNormalWorked160
L__lineFollowNormalWorked811:
;linefollow.h,141 :: 		turnRight(FAST_PWM);
0x1954	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1958	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x195C	0xF007EC99  	CALL        _turnRight, 0
0x1960	0xD07D      	BRA         L_lineFollowNormalWorked161
L_lineFollowNormalWorked160:
;linefollow.h,142 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x1962	0xB883      	BTFSC       PORTD, 4 
0x1964	0xD00F      	BRA         L_lineFollowNormalWorked164
0x1966	0xBA83      	BTFSC       PORTD, 5 
0x1968	0xD00D      	BRA         L_lineFollowNormalWorked164
0x196A	0xBC83      	BTFSC       PORTD, 6 
0x196C	0xD00B      	BRA         L_lineFollowNormalWorked164
0x196E	0xAE83      	BTFSS       PORTD, 7 
0x1970	0xD009      	BRA         L_lineFollowNormalWorked164
0x1972	0xA481      	BTFSS       PORTB, 2 
0x1974	0xD007      	BRA         L_lineFollowNormalWorked164
L__lineFollowNormalWorked810:
;linefollow.h,144 :: 		turnRight(FAST_PWM);
0x1976	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x197A	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x197E	0xF007EC99  	CALL        _turnRight, 0
0x1982	0xD06C      	BRA         L_lineFollowNormalWorked165
L_lineFollowNormalWorked164:
;linefollow.h,145 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x1984	0xB883      	BTFSC       PORTD, 4 
0x1986	0xD00F      	BRA         L_lineFollowNormalWorked168
0x1988	0xBA83      	BTFSC       PORTD, 5 
0x198A	0xD00D      	BRA         L_lineFollowNormalWorked168
0x198C	0xBC83      	BTFSC       PORTD, 6 
0x198E	0xD00B      	BRA         L_lineFollowNormalWorked168
0x1990	0xBE83      	BTFSC       PORTD, 7 
0x1992	0xD009      	BRA         L_lineFollowNormalWorked168
0x1994	0xA481      	BTFSS       PORTB, 2 
0x1996	0xD007      	BRA         L_lineFollowNormalWorked168
L__lineFollowNormalWorked809:
;linefollow.h,147 :: 		turnRight(FAST_PWM);
0x1998	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x199C	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x19A0	0xF007EC99  	CALL        _turnRight, 0
0x19A4	0xD05B      	BRA         L_lineFollowNormalWorked169
L_lineFollowNormalWorked168:
;linefollow.h,150 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x19A6	0xA883      	BTFSS       PORTD, 4 
0x19A8	0xD013      	BRA         L_lineFollowNormalWorked172
0x19AA	0xAA83      	BTFSS       PORTD, 5 
0x19AC	0xD011      	BRA         L_lineFollowNormalWorked172
0x19AE	0xAC83      	BTFSS       PORTD, 6 
0x19B0	0xD00F      	BRA         L_lineFollowNormalWorked172
0x19B2	0xAE83      	BTFSS       PORTD, 7 
0x19B4	0xD00D      	BRA         L_lineFollowNormalWorked172
0x19B6	0xB481      	BTFSC       PORTB, 2 
0x19B8	0xD00B      	BRA         L_lineFollowNormalWorked172
L__lineFollowNormalWorked808:
;linefollow.h,151 :: 		moveForward(FAST_PWM,FAST_PWM);
0x19BA	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x19BE	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x19C2	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x19C6	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x19CA	0xF007EC62  	CALL        _moveForward, 0
0x19CE	0xD046      	BRA         L_lineFollowNormalWorked173
L_lineFollowNormalWorked172:
;linefollow.h,152 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x19D0	0xB883      	BTFSC       PORTD, 4 
0x19D2	0xD013      	BRA         L_lineFollowNormalWorked176
0x19D4	0xAA83      	BTFSS       PORTD, 5 
0x19D6	0xD011      	BRA         L_lineFollowNormalWorked176
0x19D8	0xAC83      	BTFSS       PORTD, 6 
0x19DA	0xD00F      	BRA         L_lineFollowNormalWorked176
0x19DC	0xAE83      	BTFSS       PORTD, 7 
0x19DE	0xD00D      	BRA         L_lineFollowNormalWorked176
0x19E0	0xA481      	BTFSS       PORTB, 2 
0x19E2	0xD00B      	BRA         L_lineFollowNormalWorked176
L__lineFollowNormalWorked807:
;linefollow.h,153 :: 		moveForward(FAST_PWM,FAST_PWM);
0x19E4	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x19E8	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x19EC	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x19F0	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x19F4	0xF007EC62  	CALL        _moveForward, 0
0x19F8	0xD031      	BRA         L_lineFollowNormalWorked177
L_lineFollowNormalWorked176:
;linefollow.h,154 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x19FA	0xB881      	BTFSC       PORTB, 4 
0x19FC	0xD01C      	BRA         L_lineFollowNormalWorked180
0x19FE	0xB681      	BTFSC       PORTB, 3 
0x1A00	0xD01A      	BRA         L_lineFollowNormalWorked180
0x1A02	0xB883      	BTFSC       PORTD, 4 
0x1A04	0xD018      	BRA         L_lineFollowNormalWorked180
0x1A06	0xBA83      	BTFSC       PORTD, 5 
0x1A08	0xD016      	BRA         L_lineFollowNormalWorked180
0x1A0A	0xBC83      	BTFSC       PORTD, 6 
0x1A0C	0xD014      	BRA         L_lineFollowNormalWorked180
0x1A0E	0xBE83      	BTFSC       PORTD, 7 
0x1A10	0xD012      	BRA         L_lineFollowNormalWorked180
0x1A12	0xB481      	BTFSC       PORTB, 2 
0x1A14	0xD010      	BRA         L_lineFollowNormalWorked180
0x1A16	0xBC81      	BTFSC       PORTB, 6 
0x1A18	0xD00E      	BRA         L_lineFollowNormalWorked180
0x1A1A	0xBE81      	BTFSC       PORTB, 7 
0x1A1C	0xD00C      	BRA         L_lineFollowNormalWorked180
L__lineFollowNormalWorked806:
;linefollow.h,155 :: 		moveForward(255,255);
0x1A1E	0x0EFF      	MOVLW       255
0x1A20	0x0101      	MOVLB       1
0x1A22	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x1A24	0x0E00      	MOVLW       0
0x1A26	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x1A28	0x0EFF      	MOVLW       255
0x1A2A	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x1A2C	0x0E00      	MOVLW       0
0x1A2E	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x1A30	0xF007EC62  	CALL        _moveForward, 0
0x1A34	0xD013      	BRA         L_lineFollowNormalWorked181
L_lineFollowNormalWorked180:
;linefollow.h,157 :: 		else if(isAllBlack()){
0x1A36	0xDCA2      	RCALL       _isAllBlack
0x1A38	0x5000      	MOVF        R0, 0 
0x1A3A	0x1001      	IORWF       R1, 0 
0x1A3C	0xE003      	BZ          L_lineFollowNormalWorked182
;linefollow.h,160 :: 		sendSensorStatus();
0x1A3E	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,161 :: 		}
0x1A42	0xD00C      	BRA         L_lineFollowNormalWorked183
L_lineFollowNormalWorked182:
0x1A44	0x0101      	MOVLB       1
;linefollow.h,164 :: 		reverse(220,220);
0x1A46	0x0EDC      	MOVLW       220
0x1A48	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x1A4A	0x0E00      	MOVLW       0
0x1A4C	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x1A4E	0x0EDC      	MOVLW       220
0x1A50	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x1A52	0x0E00      	MOVLW       0
0x1A54	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x1A56	0xDCAE      	RCALL       _reverse
;linefollow.h,165 :: 		sendSensorStatus();
0x1A58	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,167 :: 		}
L_lineFollowNormalWorked183:
L_lineFollowNormalWorked181:
L_lineFollowNormalWorked177:
L_lineFollowNormalWorked173:
L_lineFollowNormalWorked169:
L_lineFollowNormalWorked165:
L_lineFollowNormalWorked161:
L_lineFollowNormalWorked157:
L_lineFollowNormalWorked153:
L_lineFollowNormalWorked149:
L_lineFollowNormalWorked145:
L_lineFollowNormalWorked141:
L_lineFollowNormalWorked137:
L_lineFollowNormalWorked133:
L_lineFollowNormalWorked129:
L_lineFollowNormalWorked125:
;linefollow.h,168 :: 		}
0x1A5C	0xD204      	BRA         L_lineFollowNormalWorked184
L_lineFollowNormalWorked121:
;linefollow.h,175 :: 		if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x1A5E	0xA881      	BTFSS       PORTB, 4 
0x1A60	0xD017      	BRA         L_lineFollowNormalWorked187
0x1A62	0xA681      	BTFSS       PORTB, 3 
0x1A64	0xD015      	BRA         L_lineFollowNormalWorked187
0x1A66	0xA883      	BTFSS       PORTD, 4 
0x1A68	0xD013      	BRA         L_lineFollowNormalWorked187
0x1A6A	0xAA83      	BTFSS       PORTD, 5 
0x1A6C	0xD011      	BRA         L_lineFollowNormalWorked187
0x1A6E	0xAC83      	BTFSS       PORTD, 6 
0x1A70	0xD00F      	BRA         L_lineFollowNormalWorked187
0x1A72	0xBE83      	BTFSC       PORTD, 7 
0x1A74	0xD00D      	BRA         L_lineFollowNormalWorked187
0x1A76	0xB481      	BTFSC       PORTB, 2 
0x1A78	0xD00B      	BRA         L_lineFollowNormalWorked187
0x1A7A	0xBC81      	BTFSC       PORTB, 6 
0x1A7C	0xD009      	BRA         L_lineFollowNormalWorked187
0x1A7E	0xBE81      	BTFSC       PORTB, 7 
0x1A80	0xD007      	BRA         L_lineFollowNormalWorked187
L__lineFollowNormalWorked805:
0x1A82	0x0101      	MOVLB       1
;linefollow.h,176 :: 		rotateByDegree(-90);
0x1A84	0x0EA6      	MOVLW       166
0x1A86	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1A88	0x0EFF      	MOVLW       255
0x1A8A	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1A8C	0xDCA0      	RCALL       _rotateByDegree
0x1A8E	0xD1EB      	BRA         L_lineFollowNormalWorked188
L_lineFollowNormalWorked187:
;linefollow.h,177 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x1A90	0xA881      	BTFSS       PORTB, 4 
0x1A92	0xD017      	BRA         L_lineFollowNormalWorked191
0x1A94	0xA681      	BTFSS       PORTB, 3 
0x1A96	0xD015      	BRA         L_lineFollowNormalWorked191
0x1A98	0xA883      	BTFSS       PORTD, 4 
0x1A9A	0xD013      	BRA         L_lineFollowNormalWorked191
0x1A9C	0xAA83      	BTFSS       PORTD, 5 
0x1A9E	0xD011      	BRA         L_lineFollowNormalWorked191
0x1AA0	0xAC83      	BTFSS       PORTD, 6 
0x1AA2	0xD00F      	BRA         L_lineFollowNormalWorked191
0x1AA4	0xAE83      	BTFSS       PORTD, 7 
0x1AA6	0xD00D      	BRA         L_lineFollowNormalWorked191
0x1AA8	0xB481      	BTFSC       PORTB, 2 
0x1AAA	0xD00B      	BRA         L_lineFollowNormalWorked191
0x1AAC	0xBC81      	BTFSC       PORTB, 6 
0x1AAE	0xD009      	BRA         L_lineFollowNormalWorked191
0x1AB0	0xBE81      	BTFSC       PORTB, 7 
0x1AB2	0xD007      	BRA         L_lineFollowNormalWorked191
L__lineFollowNormalWorked804:
;linefollow.h,178 :: 		rotateByDegree(-90);
0x1AB4	0x0EA6      	MOVLW       166
0x1AB6	0x0101      	MOVLB       1
0x1AB8	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1ABA	0x0EFF      	MOVLW       255
0x1ABC	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1ABE	0xDC87      	RCALL       _rotateByDegree
0x1AC0	0xD1D2      	BRA         L_lineFollowNormalWorked192
L_lineFollowNormalWorked191:
;linefollow.h,179 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==0 && Sensor9==0)
0x1AC2	0xA881      	BTFSS       PORTB, 4 
0x1AC4	0xD017      	BRA         L_lineFollowNormalWorked195
0x1AC6	0xA681      	BTFSS       PORTB, 3 
0x1AC8	0xD015      	BRA         L_lineFollowNormalWorked195
0x1ACA	0xA883      	BTFSS       PORTD, 4 
0x1ACC	0xD013      	BRA         L_lineFollowNormalWorked195
0x1ACE	0xAA83      	BTFSS       PORTD, 5 
0x1AD0	0xD011      	BRA         L_lineFollowNormalWorked195
0x1AD2	0xAC83      	BTFSS       PORTD, 6 
0x1AD4	0xD00F      	BRA         L_lineFollowNormalWorked195
0x1AD6	0xAE83      	BTFSS       PORTD, 7 
0x1AD8	0xD00D      	BRA         L_lineFollowNormalWorked195
0x1ADA	0xA481      	BTFSS       PORTB, 2 
0x1ADC	0xD00B      	BRA         L_lineFollowNormalWorked195
0x1ADE	0xBC81      	BTFSC       PORTB, 6 
0x1AE0	0xD009      	BRA         L_lineFollowNormalWorked195
0x1AE2	0xBE81      	BTFSC       PORTB, 7 
0x1AE4	0xD007      	BRA         L_lineFollowNormalWorked195
L__lineFollowNormalWorked803:
;linefollow.h,180 :: 		rotateByDegree(-90);
0x1AE6	0x0EA6      	MOVLW       166
0x1AE8	0x0101      	MOVLB       1
0x1AEA	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1AEC	0x0EFF      	MOVLW       255
0x1AEE	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1AF0	0xDC6E      	RCALL       _rotateByDegree
0x1AF2	0xD1B9      	BRA         L_lineFollowNormalWorked196
L_lineFollowNormalWorked195:
;linefollow.h,183 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1AF4	0xB881      	BTFSC       PORTB, 4 
0x1AF6	0xD017      	BRA         L_lineFollowNormalWorked199
0x1AF8	0xB681      	BTFSC       PORTB, 3 
0x1AFA	0xD015      	BRA         L_lineFollowNormalWorked199
0x1AFC	0xA883      	BTFSS       PORTD, 4 
0x1AFE	0xD013      	BRA         L_lineFollowNormalWorked199
0x1B00	0xAA83      	BTFSS       PORTD, 5 
0x1B02	0xD011      	BRA         L_lineFollowNormalWorked199
0x1B04	0xAC83      	BTFSS       PORTD, 6 
0x1B06	0xD00F      	BRA         L_lineFollowNormalWorked199
0x1B08	0xAE83      	BTFSS       PORTD, 7 
0x1B0A	0xD00D      	BRA         L_lineFollowNormalWorked199
0x1B0C	0xA481      	BTFSS       PORTB, 2 
0x1B0E	0xD00B      	BRA         L_lineFollowNormalWorked199
0x1B10	0xAC81      	BTFSS       PORTB, 6 
0x1B12	0xD009      	BRA         L_lineFollowNormalWorked199
0x1B14	0xAE81      	BTFSS       PORTB, 7 
0x1B16	0xD007      	BRA         L_lineFollowNormalWorked199
L__lineFollowNormalWorked802:
;linefollow.h,184 :: 		rotateByDegree(90);
0x1B18	0x0E5A      	MOVLW       90
0x1B1A	0x0101      	MOVLB       1
0x1B1C	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1B1E	0x0E00      	MOVLW       0
0x1B20	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1B22	0xDC55      	RCALL       _rotateByDegree
0x1B24	0xD1A0      	BRA         L_lineFollowNormalWorked200
L_lineFollowNormalWorked199:
;linefollow.h,185 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1B26	0xB881      	BTFSC       PORTB, 4 
0x1B28	0xD017      	BRA         L_lineFollowNormalWorked203
0x1B2A	0xB681      	BTFSC       PORTB, 3 
0x1B2C	0xD015      	BRA         L_lineFollowNormalWorked203
0x1B2E	0xB883      	BTFSC       PORTD, 4 
0x1B30	0xD013      	BRA         L_lineFollowNormalWorked203
0x1B32	0xAA83      	BTFSS       PORTD, 5 
0x1B34	0xD011      	BRA         L_lineFollowNormalWorked203
0x1B36	0xAC83      	BTFSS       PORTD, 6 
0x1B38	0xD00F      	BRA         L_lineFollowNormalWorked203
0x1B3A	0xAE83      	BTFSS       PORTD, 7 
0x1B3C	0xD00D      	BRA         L_lineFollowNormalWorked203
0x1B3E	0xA481      	BTFSS       PORTB, 2 
0x1B40	0xD00B      	BRA         L_lineFollowNormalWorked203
0x1B42	0xAC81      	BTFSS       PORTB, 6 
0x1B44	0xD009      	BRA         L_lineFollowNormalWorked203
0x1B46	0xAE81      	BTFSS       PORTB, 7 
0x1B48	0xD007      	BRA         L_lineFollowNormalWorked203
L__lineFollowNormalWorked801:
;linefollow.h,186 :: 		rotateByDegree(90);
0x1B4A	0x0E5A      	MOVLW       90
0x1B4C	0x0101      	MOVLB       1
0x1B4E	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1B50	0x0E00      	MOVLW       0
0x1B52	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1B54	0xDC3C      	RCALL       _rotateByDegree
0x1B56	0xD187      	BRA         L_lineFollowNormalWorked204
L_lineFollowNormalWorked203:
;linefollow.h,187 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1B58	0xB881      	BTFSC       PORTB, 4 
0x1B5A	0xD017      	BRA         L_lineFollowNormalWorked207
0x1B5C	0xB681      	BTFSC       PORTB, 3 
0x1B5E	0xD015      	BRA         L_lineFollowNormalWorked207
0x1B60	0xB883      	BTFSC       PORTD, 4 
0x1B62	0xD013      	BRA         L_lineFollowNormalWorked207
0x1B64	0xBA83      	BTFSC       PORTD, 5 
0x1B66	0xD011      	BRA         L_lineFollowNormalWorked207
0x1B68	0xAC83      	BTFSS       PORTD, 6 
0x1B6A	0xD00F      	BRA         L_lineFollowNormalWorked207
0x1B6C	0xAE83      	BTFSS       PORTD, 7 
0x1B6E	0xD00D      	BRA         L_lineFollowNormalWorked207
0x1B70	0xA481      	BTFSS       PORTB, 2 
0x1B72	0xD00B      	BRA         L_lineFollowNormalWorked207
0x1B74	0xAC81      	BTFSS       PORTB, 6 
0x1B76	0xD009      	BRA         L_lineFollowNormalWorked207
0x1B78	0xAE81      	BTFSS       PORTB, 7 
0x1B7A	0xD007      	BRA         L_lineFollowNormalWorked207
L__lineFollowNormalWorked800:
;linefollow.h,188 :: 		rotateByDegree(90);
0x1B7C	0x0E5A      	MOVLW       90
0x1B7E	0x0101      	MOVLB       1
0x1B80	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1B82	0x0E00      	MOVLW       0
0x1B84	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1B86	0xDC23      	RCALL       _rotateByDegree
0x1B88	0xD16E      	BRA         L_lineFollowNormalWorked208
L_lineFollowNormalWorked207:
;linefollow.h,193 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1B8A	0xA883      	BTFSS       PORTD, 4 
0x1B8C	0xD00F      	BRA         L_lineFollowNormalWorked211
0x1B8E	0xBA83      	BTFSC       PORTD, 5 
0x1B90	0xD00D      	BRA         L_lineFollowNormalWorked211
0x1B92	0xBC83      	BTFSC       PORTD, 6 
0x1B94	0xD00B      	BRA         L_lineFollowNormalWorked211
0x1B96	0xBE83      	BTFSC       PORTD, 7 
0x1B98	0xD009      	BRA         L_lineFollowNormalWorked211
0x1B9A	0xB481      	BTFSC       PORTB, 2 
0x1B9C	0xD007      	BRA         L_lineFollowNormalWorked211
L__lineFollowNormalWorked799:
;linefollow.h,195 :: 		turnLeft(FAST_PWM);
0x1B9E	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1BA2	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1BA6	0xF007EC90  	CALL        _turnLeft, 0
0x1BAA	0xD15D      	BRA         L_lineFollowNormalWorked212
L_lineFollowNormalWorked211:
;linefollow.h,196 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1BAC	0xA883      	BTFSS       PORTD, 4 
0x1BAE	0xD00F      	BRA         L_lineFollowNormalWorked215
0x1BB0	0xAA83      	BTFSS       PORTD, 5 
0x1BB2	0xD00D      	BRA         L_lineFollowNormalWorked215
0x1BB4	0xBC83      	BTFSC       PORTD, 6 
0x1BB6	0xD00B      	BRA         L_lineFollowNormalWorked215
0x1BB8	0xBE83      	BTFSC       PORTD, 7 
0x1BBA	0xD009      	BRA         L_lineFollowNormalWorked215
0x1BBC	0xB481      	BTFSC       PORTB, 2 
0x1BBE	0xD007      	BRA         L_lineFollowNormalWorked215
L__lineFollowNormalWorked798:
;linefollow.h,198 :: 		turnLeft(FAST_PWM);
0x1BC0	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1BC4	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1BC8	0xF007EC90  	CALL        _turnLeft, 0
0x1BCC	0xD14C      	BRA         L_lineFollowNormalWorked216
L_lineFollowNormalWorked215:
;linefollow.h,199 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1BCE	0xA883      	BTFSS       PORTD, 4 
0x1BD0	0xD00F      	BRA         L_lineFollowNormalWorked219
0x1BD2	0xAA83      	BTFSS       PORTD, 5 
0x1BD4	0xD00D      	BRA         L_lineFollowNormalWorked219
0x1BD6	0xAC83      	BTFSS       PORTD, 6 
0x1BD8	0xD00B      	BRA         L_lineFollowNormalWorked219
0x1BDA	0xBE83      	BTFSC       PORTD, 7 
0x1BDC	0xD009      	BRA         L_lineFollowNormalWorked219
0x1BDE	0xB481      	BTFSC       PORTB, 2 
0x1BE0	0xD007      	BRA         L_lineFollowNormalWorked219
L__lineFollowNormalWorked797:
;linefollow.h,201 :: 		turnLeft(FAST_PWM);
0x1BE2	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1BE6	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1BEA	0xF007EC90  	CALL        _turnLeft, 0
0x1BEE	0xD13B      	BRA         L_lineFollowNormalWorked220
L_lineFollowNormalWorked219:
;linefollow.h,202 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1BF0	0xB883      	BTFSC       PORTD, 4 
0x1BF2	0xD00F      	BRA         L_lineFollowNormalWorked223
0x1BF4	0xAA83      	BTFSS       PORTD, 5 
0x1BF6	0xD00D      	BRA         L_lineFollowNormalWorked223
0x1BF8	0xBC83      	BTFSC       PORTD, 6 
0x1BFA	0xD00B      	BRA         L_lineFollowNormalWorked223
0x1BFC	0xBE83      	BTFSC       PORTD, 7 
0x1BFE	0xD009      	BRA         L_lineFollowNormalWorked223
0x1C00	0xB481      	BTFSC       PORTB, 2 
0x1C02	0xD007      	BRA         L_lineFollowNormalWorked223
L__lineFollowNormalWorked796:
;linefollow.h,204 :: 		turnLeft(FAST_PWM);
0x1C04	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1C08	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1C0C	0xF007EC90  	CALL        _turnLeft, 0
0x1C10	0xD12A      	BRA         L_lineFollowNormalWorked224
L_lineFollowNormalWorked223:
;linefollow.h,207 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x1C12	0xB883      	BTFSC       PORTD, 4 
0x1C14	0xD00F      	BRA         L_lineFollowNormalWorked227
0x1C16	0xBA83      	BTFSC       PORTD, 5 
0x1C18	0xD00D      	BRA         L_lineFollowNormalWorked227
0x1C1A	0xBC83      	BTFSC       PORTD, 6 
0x1C1C	0xD00B      	BRA         L_lineFollowNormalWorked227
0x1C1E	0xAE83      	BTFSS       PORTD, 7 
0x1C20	0xD009      	BRA         L_lineFollowNormalWorked227
0x1C22	0xB481      	BTFSC       PORTB, 2 
0x1C24	0xD007      	BRA         L_lineFollowNormalWorked227
L__lineFollowNormalWorked795:
;linefollow.h,209 :: 		turnRight(FAST_PWM);
0x1C26	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1C2A	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1C2E	0xF007EC99  	CALL        _turnRight, 0
0x1C32	0xD119      	BRA         L_lineFollowNormalWorked228
L_lineFollowNormalWorked227:
;linefollow.h,210 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1C34	0xB883      	BTFSC       PORTD, 4 
0x1C36	0xD00F      	BRA         L_lineFollowNormalWorked231
0x1C38	0xBA83      	BTFSC       PORTD, 5 
0x1C3A	0xD00D      	BRA         L_lineFollowNormalWorked231
0x1C3C	0xAC83      	BTFSS       PORTD, 6 
0x1C3E	0xD00B      	BRA         L_lineFollowNormalWorked231
0x1C40	0xAE83      	BTFSS       PORTD, 7 
0x1C42	0xD009      	BRA         L_lineFollowNormalWorked231
0x1C44	0xA481      	BTFSS       PORTB, 2 
0x1C46	0xD007      	BRA         L_lineFollowNormalWorked231
L__lineFollowNormalWorked794:
;linefollow.h,212 :: 		turnRight(FAST_PWM);
0x1C48	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1C4C	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1C50	0xF007EC99  	CALL        _turnRight, 0
0x1C54	0xD108      	BRA         L_lineFollowNormalWorked232
L_lineFollowNormalWorked231:
;linefollow.h,213 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x1C56	0xB883      	BTFSC       PORTD, 4 
0x1C58	0xD00F      	BRA         L_lineFollowNormalWorked235
0x1C5A	0xBA83      	BTFSC       PORTD, 5 
0x1C5C	0xD00D      	BRA         L_lineFollowNormalWorked235
0x1C5E	0xBC83      	BTFSC       PORTD, 6 
0x1C60	0xD00B      	BRA         L_lineFollowNormalWorked235
0x1C62	0xAE83      	BTFSS       PORTD, 7 
0x1C64	0xD009      	BRA         L_lineFollowNormalWorked235
0x1C66	0xA481      	BTFSS       PORTB, 2 
0x1C68	0xD007      	BRA         L_lineFollowNormalWorked235
L__lineFollowNormalWorked793:
;linefollow.h,215 :: 		turnRight(FAST_PWM);
0x1C6A	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1C6E	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1C72	0xF007EC99  	CALL        _turnRight, 0
0x1C76	0xD0F7      	BRA         L_lineFollowNormalWorked236
L_lineFollowNormalWorked235:
;linefollow.h,216 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x1C78	0xB883      	BTFSC       PORTD, 4 
0x1C7A	0xD00F      	BRA         L_lineFollowNormalWorked239
0x1C7C	0xBA83      	BTFSC       PORTD, 5 
0x1C7E	0xD00D      	BRA         L_lineFollowNormalWorked239
0x1C80	0xBC83      	BTFSC       PORTD, 6 
0x1C82	0xD00B      	BRA         L_lineFollowNormalWorked239
0x1C84	0xBE83      	BTFSC       PORTD, 7 
0x1C86	0xD009      	BRA         L_lineFollowNormalWorked239
0x1C88	0xA481      	BTFSS       PORTB, 2 
0x1C8A	0xD007      	BRA         L_lineFollowNormalWorked239
L__lineFollowNormalWorked792:
;linefollow.h,218 :: 		turnRight(FAST_PWM);
0x1C8C	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1C90	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1C94	0xF007EC99  	CALL        _turnRight, 0
0x1C98	0xD0E6      	BRA         L_lineFollowNormalWorked240
L_lineFollowNormalWorked239:
;linefollow.h,221 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1C9A	0xA883      	BTFSS       PORTD, 4 
0x1C9C	0xD013      	BRA         L_lineFollowNormalWorked243
0x1C9E	0xAA83      	BTFSS       PORTD, 5 
0x1CA0	0xD011      	BRA         L_lineFollowNormalWorked243
0x1CA2	0xAC83      	BTFSS       PORTD, 6 
0x1CA4	0xD00F      	BRA         L_lineFollowNormalWorked243
0x1CA6	0xAE83      	BTFSS       PORTD, 7 
0x1CA8	0xD00D      	BRA         L_lineFollowNormalWorked243
0x1CAA	0xB481      	BTFSC       PORTB, 2 
0x1CAC	0xD00B      	BRA         L_lineFollowNormalWorked243
L__lineFollowNormalWorked791:
;linefollow.h,222 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1CAE	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x1CB2	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x1CB6	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1CBA	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1CBE	0xF007EC62  	CALL        _moveForward, 0
0x1CC2	0xD0D1      	BRA         L_lineFollowNormalWorked244
L_lineFollowNormalWorked243:
;linefollow.h,223 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1CC4	0xB883      	BTFSC       PORTD, 4 
0x1CC6	0xD013      	BRA         L_lineFollowNormalWorked247
0x1CC8	0xAA83      	BTFSS       PORTD, 5 
0x1CCA	0xD011      	BRA         L_lineFollowNormalWorked247
0x1CCC	0xAC83      	BTFSS       PORTD, 6 
0x1CCE	0xD00F      	BRA         L_lineFollowNormalWorked247
0x1CD0	0xAE83      	BTFSS       PORTD, 7 
0x1CD2	0xD00D      	BRA         L_lineFollowNormalWorked247
0x1CD4	0xA481      	BTFSS       PORTB, 2 
0x1CD6	0xD00B      	BRA         L_lineFollowNormalWorked247
L__lineFollowNormalWorked790:
;linefollow.h,224 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x1CD8	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1CDC	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1CE0	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x1CE4	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x1CE8	0xF007EC62  	CALL        _moveForward, 0
0x1CEC	0xD0BC      	BRA         L_lineFollowNormalWorked248
L_lineFollowNormalWorked247:
;linefollow.h,225 :: 		else if( Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==1 && Sensor7==1 && Sensor8==1)
0x1CEE	0xA681      	BTFSS       PORTB, 3 
0x1CF0	0xD017      	BRA         L_lineFollowNormalWorked251
0x1CF2	0xA883      	BTFSS       PORTD, 4 
0x1CF4	0xD015      	BRA         L_lineFollowNormalWorked251
0x1CF6	0xAA83      	BTFSS       PORTD, 5 
0x1CF8	0xD013      	BRA         L_lineFollowNormalWorked251
0x1CFA	0xBC83      	BTFSC       PORTD, 6 
0x1CFC	0xD011      	BRA         L_lineFollowNormalWorked251
0x1CFE	0xAE83      	BTFSS       PORTD, 7 
0x1D00	0xD00F      	BRA         L_lineFollowNormalWorked251
0x1D02	0xA481      	BTFSS       PORTB, 2 
0x1D04	0xD00D      	BRA         L_lineFollowNormalWorked251
0x1D06	0xAC81      	BTFSS       PORTB, 6 
0x1D08	0xD00B      	BRA         L_lineFollowNormalWorked251
L__lineFollowNormalWorked789:
;linefollow.h,226 :: 		while(Scout==0)
L_lineFollowNormalWorked252:
0x1D0A	0xBA81      	BTFSC       PORTB, 5 
0x1D0C	0xD008      	BRA         L_lineFollowNormalWorked253
;linefollow.h,227 :: 		rotateAntiClockwise(255);
0x1D0E	0x0EFF      	MOVLW       255
0x1D10	0x0101      	MOVLB       1
0x1D12	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1D14	0x0E00      	MOVLW       0
0x1D16	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1D18	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x1D1C	0xD7F6      	BRA         L_lineFollowNormalWorked252
L_lineFollowNormalWorked253:
0x1D1E	0xD0A3      	BRA         L_lineFollowNormalWorked254
L_lineFollowNormalWorked251:
;linefollow.h,228 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==1 && Sensor9==1)
0x1D20	0xB881      	BTFSC       PORTB, 4 
0x1D22	0xD01B      	BRA         L_lineFollowNormalWorked257
0x1D24	0xB681      	BTFSC       PORTB, 3 
0x1D26	0xD019      	BRA         L_lineFollowNormalWorked257
0x1D28	0xB883      	BTFSC       PORTD, 4 
0x1D2A	0xD017      	BRA         L_lineFollowNormalWorked257
0x1D2C	0xBA83      	BTFSC       PORTD, 5 
0x1D2E	0xD015      	BRA         L_lineFollowNormalWorked257
0x1D30	0xBC83      	BTFSC       PORTD, 6 
0x1D32	0xD013      	BRA         L_lineFollowNormalWorked257
0x1D34	0xBE83      	BTFSC       PORTD, 7 
0x1D36	0xD011      	BRA         L_lineFollowNormalWorked257
0x1D38	0xB481      	BTFSC       PORTB, 2 
0x1D3A	0xD00F      	BRA         L_lineFollowNormalWorked257
0x1D3C	0xAC81      	BTFSS       PORTB, 6 
0x1D3E	0xD00D      	BRA         L_lineFollowNormalWorked257
0x1D40	0xAE81      	BTFSS       PORTB, 7 
0x1D42	0xD00B      	BRA         L_lineFollowNormalWorked257
L__lineFollowNormalWorked788:
;linefollow.h,229 :: 		while(Scout==0)
L_lineFollowNormalWorked258:
0x1D44	0xBA81      	BTFSC       PORTB, 5 
0x1D46	0xD008      	BRA         L_lineFollowNormalWorked259
;linefollow.h,230 :: 		rotateClockwise(255);
0x1D48	0x0EFF      	MOVLW       255
0x1D4A	0x0101      	MOVLB       1
0x1D4C	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1D4E	0x0E00      	MOVLW       0
0x1D50	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x1D52	0xF007EC55  	CALL        _rotateClockwise, 0
0x1D56	0xD7F6      	BRA         L_lineFollowNormalWorked258
L_lineFollowNormalWorked259:
0x1D58	0xD086      	BRA         L_lineFollowNormalWorked260
L_lineFollowNormalWorked257:
;linefollow.h,231 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x1D5A	0xA881      	BTFSS       PORTB, 4 
0x1D5C	0xD01B      	BRA         L_lineFollowNormalWorked263
0x1D5E	0xA681      	BTFSS       PORTB, 3 
0x1D60	0xD019      	BRA         L_lineFollowNormalWorked263
0x1D62	0xB883      	BTFSC       PORTD, 4 
0x1D64	0xD017      	BRA         L_lineFollowNormalWorked263
0x1D66	0xBA83      	BTFSC       PORTD, 5 
0x1D68	0xD015      	BRA         L_lineFollowNormalWorked263
0x1D6A	0xBC83      	BTFSC       PORTD, 6 
0x1D6C	0xD013      	BRA         L_lineFollowNormalWorked263
0x1D6E	0xBE83      	BTFSC       PORTD, 7 
0x1D70	0xD011      	BRA         L_lineFollowNormalWorked263
0x1D72	0xB481      	BTFSC       PORTB, 2 
0x1D74	0xD00F      	BRA         L_lineFollowNormalWorked263
0x1D76	0xBC81      	BTFSC       PORTB, 6 
0x1D78	0xD00D      	BRA         L_lineFollowNormalWorked263
0x1D7A	0xBE81      	BTFSC       PORTB, 7 
0x1D7C	0xD00B      	BRA         L_lineFollowNormalWorked263
L__lineFollowNormalWorked787:
;linefollow.h,232 :: 		while(Scout==0)
L_lineFollowNormalWorked264:
0x1D7E	0xBA81      	BTFSC       PORTB, 5 
0x1D80	0xD008      	BRA         L_lineFollowNormalWorked265
;linefollow.h,233 :: 		rotateAntiClockwise(255);
0x1D82	0x0EFF      	MOVLW       255
0x1D84	0x0101      	MOVLB       1
0x1D86	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1D88	0x0E00      	MOVLW       0
0x1D8A	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1D8C	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x1D90	0xD7F6      	BRA         L_lineFollowNormalWorked264
L_lineFollowNormalWorked265:
0x1D92	0xD069      	BRA         L_lineFollowNormalWorked266
L_lineFollowNormalWorked263:
;linefollow.h,236 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1D94	0xB883      	BTFSC       PORTD, 4 
0x1D96	0xD013      	BRA         L_lineFollowNormalWorked269
0x1D98	0xAA83      	BTFSS       PORTD, 5 
0x1D9A	0xD011      	BRA         L_lineFollowNormalWorked269
0x1D9C	0xAC83      	BTFSS       PORTD, 6 
0x1D9E	0xD00F      	BRA         L_lineFollowNormalWorked269
0x1DA0	0xBE83      	BTFSC       PORTD, 7 
0x1DA2	0xD00D      	BRA         L_lineFollowNormalWorked269
0x1DA4	0xB481      	BTFSC       PORTB, 2 
0x1DA6	0xD00B      	BRA         L_lineFollowNormalWorked269
L__lineFollowNormalWorked786:
;linefollow.h,237 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1DA8	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x1DAC	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x1DB0	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1DB4	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1DB8	0xF007EC62  	CALL        _moveForward, 0
0x1DBC	0xD054      	BRA         L_lineFollowNormalWorked270
L_lineFollowNormalWorked269:
;linefollow.h,238 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1DBE	0xB883      	BTFSC       PORTD, 4 
0x1DC0	0xD013      	BRA         L_lineFollowNormalWorked273
0x1DC2	0xAA83      	BTFSS       PORTD, 5 
0x1DC4	0xD011      	BRA         L_lineFollowNormalWorked273
0x1DC6	0xAC83      	BTFSS       PORTD, 6 
0x1DC8	0xD00F      	BRA         L_lineFollowNormalWorked273
0x1DCA	0xAE83      	BTFSS       PORTD, 7 
0x1DCC	0xD00D      	BRA         L_lineFollowNormalWorked273
0x1DCE	0xB481      	BTFSC       PORTB, 2 
0x1DD0	0xD00B      	BRA         L_lineFollowNormalWorked273
L__lineFollowNormalWorked785:
;linefollow.h,239 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1DD2	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1DD6	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1DDA	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1DDE	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1DE2	0xF007EC62  	CALL        _moveForward, 0
0x1DE6	0xD03F      	BRA         L_lineFollowNormalWorked274
L_lineFollowNormalWorked273:
;linefollow.h,240 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1DE8	0xB883      	BTFSC       PORTD, 4 
0x1DEA	0xD013      	BRA         L_lineFollowNormalWorked277
0x1DEC	0xBA83      	BTFSC       PORTD, 5 
0x1DEE	0xD011      	BRA         L_lineFollowNormalWorked277
0x1DF0	0xAC83      	BTFSS       PORTD, 6 
0x1DF2	0xD00F      	BRA         L_lineFollowNormalWorked277
0x1DF4	0xBE83      	BTFSC       PORTD, 7 
0x1DF6	0xD00D      	BRA         L_lineFollowNormalWorked277
0x1DF8	0xB481      	BTFSC       PORTB, 2 
0x1DFA	0xD00B      	BRA         L_lineFollowNormalWorked277
L__lineFollowNormalWorked784:
;linefollow.h,241 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1DFC	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1E00	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1E04	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1E08	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1E0C	0xF007EC62  	CALL        _moveForward, 0
0x1E10	0xD02A      	BRA         L_lineFollowNormalWorked278
L_lineFollowNormalWorked277:
;linefollow.h,242 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1E12	0xB883      	BTFSC       PORTD, 4 
0x1E14	0xD013      	BRA         L_lineFollowNormalWorked281
0x1E16	0xBA83      	BTFSC       PORTD, 5 
0x1E18	0xD011      	BRA         L_lineFollowNormalWorked281
0x1E1A	0xAC83      	BTFSS       PORTD, 6 
0x1E1C	0xD00F      	BRA         L_lineFollowNormalWorked281
0x1E1E	0xAE83      	BTFSS       PORTD, 7 
0x1E20	0xD00D      	BRA         L_lineFollowNormalWorked281
0x1E22	0xB481      	BTFSC       PORTB, 2 
0x1E24	0xD00B      	BRA         L_lineFollowNormalWorked281
L__lineFollowNormalWorked783:
;linefollow.h,243 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x1E26	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1E2A	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1E2E	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x1E32	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x1E36	0xF007EC62  	CALL        _moveForward, 0
0x1E3A	0xD015      	BRA         L_lineFollowNormalWorked282
L_lineFollowNormalWorked281:
;linefollow.h,246 :: 		else if(isAllWhite()){
0x1E3C	0xF008EC86  	CALL        _isAllWhite, 0
0x1E40	0x5000      	MOVF        R0, 0 
0x1E42	0x1001      	IORWF       R1, 0 
0x1E44	0xE003      	BZ          L_lineFollowNormalWorked283
;linefollow.h,249 :: 		sendSensorStatus();
0x1E46	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,250 :: 		}
0x1E4A	0xD00D      	BRA         L_lineFollowNormalWorked284
L_lineFollowNormalWorked283:
0x1E4C	0x0101      	MOVLB       1
;linefollow.h,253 :: 		reverse(220,220);
0x1E4E	0x0EDC      	MOVLW       220
0x1E50	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x1E52	0x0E00      	MOVLW       0
0x1E54	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x1E56	0x0EDC      	MOVLW       220
0x1E58	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x1E5A	0x0E00      	MOVLW       0
0x1E5C	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x1E5E	0xF009ECDA  	CALL        _reverse, 0
;linefollow.h,254 :: 		sendSensorStatus();
0x1E62	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,256 :: 		}
L_lineFollowNormalWorked284:
L_lineFollowNormalWorked282:
L_lineFollowNormalWorked278:
L_lineFollowNormalWorked274:
L_lineFollowNormalWorked270:
L_lineFollowNormalWorked266:
L_lineFollowNormalWorked260:
L_lineFollowNormalWorked254:
L_lineFollowNormalWorked248:
L_lineFollowNormalWorked244:
L_lineFollowNormalWorked240:
L_lineFollowNormalWorked236:
L_lineFollowNormalWorked232:
L_lineFollowNormalWorked228:
L_lineFollowNormalWorked224:
L_lineFollowNormalWorked220:
L_lineFollowNormalWorked216:
L_lineFollowNormalWorked212:
L_lineFollowNormalWorked208:
L_lineFollowNormalWorked204:
L_lineFollowNormalWorked200:
L_lineFollowNormalWorked196:
L_lineFollowNormalWorked192:
L_lineFollowNormalWorked188:
;linefollow.h,257 :: 		}
L_lineFollowNormalWorked184:
;linefollow.h,258 :: 		}
0x1E66	0x0012      	RETURN      0
; end of _lineFollowNormalWorked
_goThroughObstaclesJay:
;Main 6.0V.c,265 :: 		void goThroughObstaclesJay(){
;Main 6.0V.c,266 :: 		int ROTATION_ANGLE = 0;
0x1E68	0x0101      	MOVLB       1
0x1E6A	0x6B8A      	CLRF        goThroughObstaclesJay_ROTATION_ANGLE_L0, 1
0x1E6C	0x6B8B      	CLRF        goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1
;Main 6.0V.c,267 :: 		if(isPathClear() == 0) {
0x1E6E	0xF008ECA2  	CALL        _isPathClear, 0
0x1E72	0x0E00      	MOVLW       0
0x1E74	0x1801      	XORWF       R1, 0 
0x1E76	0xE102      	BNZ         L__goThroughObstaclesJay978
0x1E78	0x0E00      	MOVLW       0
0x1E7A	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay978:
0x1E7C	0xA4D8      	BTFSS       STATUS, 2 
0x1E7E	0xD086      	BRA         L_goThroughObstaclesJay746
;Main 6.0V.c,268 :: 		rotateByDegree(30);
0x1E80	0x0E1E      	MOVLW       30
0x1E82	0x0101      	MOVLB       1
0x1E84	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1E86	0x0E00      	MOVLW       0
0x1E88	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1E8A	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,269 :: 		ROTATION_ANGLE += 30;
0x1E8E	0x0E1E      	MOVLW       30
0x1E90	0x0101      	MOVLB       1
0x1E92	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1E94	0x0E00      	MOVLW       0
0x1E96	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,270 :: 		if(isPathClear() == 0) {
0x1E98	0xF008ECA2  	CALL        _isPathClear, 0
0x1E9C	0x0E00      	MOVLW       0
0x1E9E	0x1801      	XORWF       R1, 0 
0x1EA0	0xE102      	BNZ         L__goThroughObstaclesJay979
0x1EA2	0x0E00      	MOVLW       0
0x1EA4	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay979:
0x1EA6	0xA4D8      	BTFSS       STATUS, 2 
0x1EA8	0xD071      	BRA         L_goThroughObstaclesJay747
;Main 6.0V.c,271 :: 		rotateByDegree(-60);
0x1EAA	0x0EC4      	MOVLW       196
0x1EAC	0x0101      	MOVLB       1
0x1EAE	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1EB0	0x0EFF      	MOVLW       255
0x1EB2	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1EB4	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,272 :: 		ROTATION_ANGLE += -60;
0x1EB8	0x0EC4      	MOVLW       196
0x1EBA	0x0101      	MOVLB       1
0x1EBC	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1EBE	0x0EFF      	MOVLW       255
0x1EC0	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,273 :: 		if(isPathClear() == 0) {
0x1EC2	0xF008ECA2  	CALL        _isPathClear, 0
0x1EC6	0x0E00      	MOVLW       0
0x1EC8	0x1801      	XORWF       R1, 0 
0x1ECA	0xE102      	BNZ         L__goThroughObstaclesJay980
0x1ECC	0x0E00      	MOVLW       0
0x1ECE	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay980:
0x1ED0	0xE15D      	BNZ         L_goThroughObstaclesJay748
;Main 6.0V.c,274 :: 		rotateByDegree(90);
0x1ED2	0x0E5A      	MOVLW       90
0x1ED4	0x0101      	MOVLB       1
0x1ED6	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1ED8	0x0E00      	MOVLW       0
0x1EDA	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1EDC	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,275 :: 		ROTATION_ANGLE += 90;
0x1EE0	0x0E5A      	MOVLW       90
0x1EE2	0x0101      	MOVLB       1
0x1EE4	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1EE6	0x0E00      	MOVLW       0
0x1EE8	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,276 :: 		if(isPathClear() == 0) {
0x1EEA	0xF008ECA2  	CALL        _isPathClear, 0
0x1EEE	0x0E00      	MOVLW       0
0x1EF0	0x1801      	XORWF       R1, 0 
0x1EF2	0xE102      	BNZ         L__goThroughObstaclesJay981
0x1EF4	0x0E00      	MOVLW       0
0x1EF6	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay981:
0x1EF8	0xE149      	BNZ         L_goThroughObstaclesJay749
;Main 6.0V.c,277 :: 		rotateByDegree(-90);
0x1EFA	0x0EA6      	MOVLW       166
0x1EFC	0x0101      	MOVLB       1
0x1EFE	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F00	0x0EFF      	MOVLW       255
0x1F02	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F04	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,278 :: 		rotateByDegree(-30);
0x1F08	0x0EE2      	MOVLW       226
0x1F0A	0x0101      	MOVLB       1
0x1F0C	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F0E	0x0EFF      	MOVLW       255
0x1F10	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F12	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,279 :: 		ROTATION_ANGLE += -120;
0x1F16	0x0E88      	MOVLW       136
0x1F18	0x0101      	MOVLB       1
0x1F1A	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F1C	0x0EFF      	MOVLW       255
0x1F1E	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,280 :: 		if(isPathClear() == 0) {
0x1F20	0xF008ECA2  	CALL        _isPathClear, 0
0x1F24	0x0E00      	MOVLW       0
0x1F26	0x1801      	XORWF       R1, 0 
0x1F28	0xE102      	BNZ         L__goThroughObstaclesJay982
0x1F2A	0x0E00      	MOVLW       0
0x1F2C	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay982:
0x1F2E	0xE12E      	BNZ         L_goThroughObstaclesJay750
;Main 6.0V.c,281 :: 		rotateByDegree(90);
0x1F30	0x0E5A      	MOVLW       90
0x1F32	0x0101      	MOVLB       1
0x1F34	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F36	0x0E00      	MOVLW       0
0x1F38	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F3A	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,282 :: 		rotateByDegree(60);
0x1F3E	0x0E3C      	MOVLW       60
0x1F40	0x0101      	MOVLB       1
0x1F42	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F44	0x0E00      	MOVLW       0
0x1F46	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F48	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,283 :: 		ROTATION_ANGLE += 150;
0x1F4C	0x0E96      	MOVLW       150
0x1F4E	0x0101      	MOVLB       1
0x1F50	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F52	0x0E00      	MOVLW       0
0x1F54	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,284 :: 		if(isPathClear() == 0) {
0x1F56	0xF008ECA2  	CALL        _isPathClear, 0
0x1F5A	0x0E00      	MOVLW       0
0x1F5C	0x1801      	XORWF       R1, 0 
0x1F5E	0xE102      	BNZ         L__goThroughObstaclesJay983
0x1F60	0x0E00      	MOVLW       0
0x1F62	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay983:
0x1F64	0xE113      	BNZ         L_goThroughObstaclesJay751
;Main 6.0V.c,285 :: 		rotateByDegree(-90);
0x1F66	0x0EA6      	MOVLW       166
0x1F68	0x0101      	MOVLB       1
0x1F6A	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F6C	0x0EFF      	MOVLW       255
0x1F6E	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F70	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,286 :: 		rotateByDegree(-90);
0x1F74	0x0EA6      	MOVLW       166
0x1F76	0x0101      	MOVLB       1
0x1F78	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F7A	0x0EFF      	MOVLW       255
0x1F7C	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F7E	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,287 :: 		ROTATION_ANGLE += -180;
0x1F82	0x0E4C      	MOVLW       76
0x1F84	0x0101      	MOVLB       1
0x1F86	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F88	0x0EFF      	MOVLW       255
0x1F8A	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 6.0V.c,288 :: 		}
L_goThroughObstaclesJay751:
;Main 6.0V.c,289 :: 		}
L_goThroughObstaclesJay750:
;Main 6.0V.c,290 :: 		}
L_goThroughObstaclesJay749:
;Main 6.0V.c,291 :: 		}
L_goThroughObstaclesJay748:
;Main 6.0V.c,292 :: 		}
L_goThroughObstaclesJay747:
;Main 6.0V.c,293 :: 		}
L_goThroughObstaclesJay746:
0x1F8C	0x0101      	MOVLB       1
;Main 6.0V.c,294 :: 		DIRECTION += ROTATION_ANGLE;
0x1F8E	0x518A      	MOVF        goThroughObstaclesJay_ROTATION_ANGLE_L0, 0, 1
0x1F90	0x0100      	MOVLB       0
0x1F92	0x27F9      	ADDWF       _DIRECTION, 1, 1
0x1F94	0x0101      	MOVLB       1
0x1F96	0x518B      	MOVF        goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 0, 1
0x1F98	0x0100      	MOVLB       0
0x1F9A	0x23FA      	ADDWFC      _DIRECTION+1, 1, 1
;Main 6.0V.c,295 :: 		moveStraightSlow();
0x1F9C	0xF008EC7B  	CALL        _moveStraightSlow, 0
;Main 6.0V.c,296 :: 		delay_ms(10);
0x1FA0	0x0E41      	MOVLW       65
0x1FA2	0x6E0C      	MOVWF       R12, 0
0x1FA4	0x0EEE      	MOVLW       238
0x1FA6	0x6E0D      	MOVWF       R13, 0
L_goThroughObstaclesJay752:
0x1FA8	0x2E0D      	DECFSZ      R13, 1, 0
0x1FAA	0xD7FE      	BRA         L_goThroughObstaclesJay752
0x1FAC	0x2E0C      	DECFSZ      R12, 1, 0
0x1FAE	0xD7FC      	BRA         L_goThroughObstaclesJay752
0x1FB0	0x0000      	NOP
;Main 6.0V.c,298 :: 		if(isAllWhite()) {
0x1FB2	0xF008EC86  	CALL        _isAllWhite, 0
0x1FB6	0x5000      	MOVF        R0, 0 
0x1FB8	0x1001      	IORWF       R1, 0 
0x1FBA	0xE033      	BZ          L_goThroughObstaclesJay753
;Main 6.0V.c,300 :: 		if(abs(DIRECTION) >= 90) {
0x1FBC	0xF196C0F9  	MOVFF       _DIRECTION, FARG_abs_a
0x1FC0	0xF197C0FA  	MOVFF       _DIRECTION+1, FARG_abs_a+1
0x1FC4	0xF007ECFC  	CALL        _abs, 0
0x1FC8	0x0E80      	MOVLW       128
0x1FCA	0x1801      	XORWF       R1, 0 
0x1FCC	0x6E02      	MOVWF       R2 
0x1FCE	0x0E80      	MOVLW       128
0x1FD0	0x5C02      	SUBWF       R2, 0 
0x1FD2	0xE102      	BNZ         L__goThroughObstaclesJay984
0x1FD4	0x0E5A      	MOVLW       90
0x1FD6	0x5C00      	SUBWF       R0, 0 
L__goThroughObstaclesJay984:
0x1FD8	0xE319      	BNC         L_goThroughObstaclesJay754
;Main 6.0V.c,301 :: 		sendText("Wrong Direction !!!");
0x1FDA	0x0EE5      	MOVLW       ?lstr41_Main_326.0V
0x1FDC	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x1FDE	0x0E00      	MOVLW       hi_addr(?lstr41_Main_326.0V)
0x1FE0	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x1FE2	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,302 :: 		rotateByDegree(90);
0x1FE6	0x0E5A      	MOVLW       90
0x1FE8	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1FEA	0x0E00      	MOVLW       0
0x1FEC	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1FEE	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,303 :: 		rotateByDegree(90);
0x1FF2	0x0E5A      	MOVLW       90
0x1FF4	0x0101      	MOVLB       1
0x1FF6	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1FF8	0x0E00      	MOVLW       0
0x1FFA	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1FFC	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,305 :: 		DIRECTION = 0;
0x2000	0x0100      	MOVLB       0
0x2002	0x6BF9      	CLRF        _DIRECTION, 1
0x2004	0x6BFA      	CLRF        _DIRECTION+1, 1
;Main 6.0V.c,306 :: 		level2Aligning();
0x2006	0xF008EC13  	CALL        _level2Aligning, 0
;Main 6.0V.c,307 :: 		}
0x200A	0xD00B      	BRA         L_goThroughObstaclesJay755
L_goThroughObstaclesJay754:
;Main 6.0V.c,309 :: 		sendText("Corrent Direction !!!");
0x200C	0x0ECF      	MOVLW       ?lstr42_Main_326.0V
0x200E	0x0101      	MOVLB       1
0x2010	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2012	0x0E00      	MOVLW       hi_addr(?lstr42_Main_326.0V)
0x2014	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2016	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,310 :: 		LEVEL2_STATE = COMPLETED;
0x201A	0x0E02      	MOVLW       2
0x201C	0x6F7E      	MOVWF       _LEVEL2_STATE, 1
0x201E	0x0E00      	MOVLW       0
0x2020	0x6F7F      	MOVWF       _LEVEL2_STATE+1, 1
;Main 6.0V.c,311 :: 		}
L_goThroughObstaclesJay755:
;Main 6.0V.c,312 :: 		}
L_goThroughObstaclesJay753:
;Main 6.0V.c,313 :: 		}
0x2022	0x0012      	RETURN      0
; end of _goThroughObstaclesJay
_setPID:
;linefollow.h,18 :: 		void setPID(){
;linefollow.h,19 :: 		MIN_RPM = 215;       //155
0x2024	0x0ED7      	MOVLW       215
0x2026	0x0101      	MOVLB       1
0x2028	0x6F56      	MOVWF       _MIN_RPM, 1
0x202A	0x0E00      	MOVLW       0
0x202C	0x6F57      	MOVWF       _MIN_RPM+1, 1
;linefollow.h,20 :: 		MID_RPM = 235;
0x202E	0x0EEB      	MOVLW       235
0x2030	0x6F58      	MOVWF       _MID_RPM, 1
0x2032	0x0E00      	MOVLW       0
0x2034	0x6F59      	MOVWF       _MID_RPM+1, 1
;linefollow.h,21 :: 		MAX_RPM = 255;
0x2036	0x0EFF      	MOVLW       255
0x2038	0x6F54      	MOVWF       _MAX_RPM, 1
0x203A	0x0E00      	MOVLW       0
0x203C	0x6F55      	MOVWF       _MAX_RPM+1, 1
;linefollow.h,22 :: 		TEST_RPM = 200;
0x203E	0x0EC8      	MOVLW       200
0x2040	0x6F50      	MOVWF       _TEST_RPM, 1
0x2042	0x0E00      	MOVLW       0
0x2044	0x6F51      	MOVWF       _TEST_RPM+1, 1
;linefollow.h,25 :: 		SLOW_PWM = 255;
0x2046	0x0EFF      	MOVLW       255
0x2048	0x6F82      	MOVWF       _SLOW_PWM, 1
0x204A	0x0E00      	MOVLW       0
0x204C	0x6F83      	MOVWF       _SLOW_PWM+1, 1
;linefollow.h,26 :: 		MID_PWM = 200;
0x204E	0x0EC8      	MOVLW       200
0x2050	0x6F52      	MOVWF       _MID_PWM, 1
0x2052	0x0E00      	MOVLW       0
0x2054	0x6F53      	MOVWF       _MID_PWM+1, 1
;linefollow.h,27 :: 		FAST_PWM = 255;
0x2056	0x0EFF      	MOVLW       255
0x2058	0x6F80      	MOVWF       _FAST_PWM, 1
0x205A	0x0E00      	MOVLW       0
0x205C	0x6F81      	MOVWF       _FAST_PWM+1, 1
;linefollow.h,29 :: 		Kp = 2;
0x205E	0x0E00      	MOVLW       0
0x2060	0x6F5A      	MOVWF       _Kp, 1
0x2062	0x0E00      	MOVLW       0
0x2064	0x6F5B      	MOVWF       _Kp+1, 1
0x2066	0x0E00      	MOVLW       0
0x2068	0x6F5C      	MOVWF       _Kp+2, 1
0x206A	0x0E80      	MOVLW       128
0x206C	0x6F5D      	MOVWF       _Kp+3, 1
;linefollow.h,30 :: 		Ki = 0;
0x206E	0x6B66      	CLRF        _Ki, 1
0x2070	0x6B67      	CLRF        _Ki+1, 1
0x2072	0x6B68      	CLRF        _Ki+2, 1
0x2074	0x6B69      	CLRF        _Ki+3, 1
;linefollow.h,31 :: 		Kd = 0;
0x2076	0x6B6A      	CLRF        _Kd, 1
0x2078	0x6B6B      	CLRF        _Kd+1, 1
0x207A	0x6B6C      	CLRF        _Kd+2, 1
0x207C	0x6B6D      	CLRF        _Kd+3, 1
;linefollow.h,33 :: 		totalError = 0;
0x207E	0x6B62      	CLRF        _totalError, 1
0x2080	0x6B63      	CLRF        _totalError+1, 1
0x2082	0x6B64      	CLRF        _totalError+2, 1
0x2084	0x6B65      	CLRF        _totalError+3, 1
;linefollow.h,34 :: 		previousDeviation = 0;
0x2086	0x6B5E      	CLRF        _previousDeviation, 1
0x2088	0x6B5F      	CLRF        _previousDeviation+1, 1
;linefollow.h,35 :: 		PID_LeftRPM = 0;
0x208A	0x6B60      	CLRF        _PID_LeftRPM, 1
0x208C	0x6B61      	CLRF        _PID_LeftRPM+1, 1
;linefollow.h,36 :: 		PID_RightRPM = 0;
0x208E	0x6B4C      	CLRF        _PID_RightRPM, 1
0x2090	0x6B4D      	CLRF        _PID_RightRPM+1, 1
;linefollow.h,38 :: 		Pwm1_Set_Duty(MID_RPM);
0x2092	0x0EEB      	MOVLW       235
0x2094	0x6FA3      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0x2096	0xF000ECE2  	CALL        _PWM1_Set_Duty, 0
;linefollow.h,39 :: 		Pwm2_Set_Duty(MID_RPM);
0x209A	0xF1A3C158  	MOVFF       _MID_RPM, FARG_PWM2_Set_Duty_new_duty
0x209E	0xF000EC67  	CALL        _PWM2_Set_Duty, 0
;linefollow.h,40 :: 		}
0x20A2	0x0012      	RETURN      0
; end of _setPID
_lineFollowPID:
;linefollow.h,42 :: 		void lineFollowPID(){
;linefollow.h,65 :: 		if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x20A4	0xA883      	BTFSS       PORTD, 4 
0x20A6	0xD00D      	BRA         L_lineFollowPID87
0x20A8	0xBA83      	BTFSC       PORTD, 5 
0x20AA	0xD00B      	BRA         L_lineFollowPID87
0x20AC	0xBC83      	BTFSC       PORTD, 6 
0x20AE	0xD009      	BRA         L_lineFollowPID87
0x20B0	0xBE83      	BTFSC       PORTD, 7 
0x20B2	0xD007      	BRA         L_lineFollowPID87
0x20B4	0xB481      	BTFSC       PORTB, 2 
0x20B6	0xD005      	BRA         L_lineFollowPID87
L__lineFollowPID782:
;linefollow.h,66 :: 		deviation = 15;
0x20B8	0x0E0F      	MOVLW       15
0x20BA	0x0101      	MOVLB       1
0x20BC	0x6F4E      	MOVWF       _deviation, 1
0x20BE	0x0E00      	MOVLW       0
0x20C0	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID87:
;linefollow.h,67 :: 		if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x20C2	0xA883      	BTFSS       PORTD, 4 
0x20C4	0xD00D      	BRA         L_lineFollowPID90
0x20C6	0xAA83      	BTFSS       PORTD, 5 
0x20C8	0xD00B      	BRA         L_lineFollowPID90
0x20CA	0xBC83      	BTFSC       PORTD, 6 
0x20CC	0xD009      	BRA         L_lineFollowPID90
0x20CE	0xBE83      	BTFSC       PORTD, 7 
0x20D0	0xD007      	BRA         L_lineFollowPID90
0x20D2	0xB481      	BTFSC       PORTB, 2 
0x20D4	0xD005      	BRA         L_lineFollowPID90
L__lineFollowPID781:
0x20D6	0x0101      	MOVLB       1
;linefollow.h,68 :: 		deviation = 10;
0x20D8	0x0E0A      	MOVLW       10
0x20DA	0x6F4E      	MOVWF       _deviation, 1
0x20DC	0x0E00      	MOVLW       0
0x20DE	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID90:
;linefollow.h,69 :: 		if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x20E0	0xA883      	BTFSS       PORTD, 4 
0x20E2	0xD00D      	BRA         L_lineFollowPID93
0x20E4	0xAA83      	BTFSS       PORTD, 5 
0x20E6	0xD00B      	BRA         L_lineFollowPID93
0x20E8	0xAC83      	BTFSS       PORTD, 6 
0x20EA	0xD009      	BRA         L_lineFollowPID93
0x20EC	0xBE83      	BTFSC       PORTD, 7 
0x20EE	0xD007      	BRA         L_lineFollowPID93
0x20F0	0xB481      	BTFSC       PORTB, 2 
0x20F2	0xD005      	BRA         L_lineFollowPID93
L__lineFollowPID780:
0x20F4	0x0101      	MOVLB       1
;linefollow.h,70 :: 		deviation = 4;
0x20F6	0x0E04      	MOVLW       4
0x20F8	0x6F4E      	MOVWF       _deviation, 1
0x20FA	0x0E00      	MOVLW       0
0x20FC	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID93:
;linefollow.h,71 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x20FE	0xB883      	BTFSC       PORTD, 4 
0x2100	0xD00D      	BRA         L_lineFollowPID96
0x2102	0xAA83      	BTFSS       PORTD, 5 
0x2104	0xD00B      	BRA         L_lineFollowPID96
0x2106	0xBC83      	BTFSC       PORTD, 6 
0x2108	0xD009      	BRA         L_lineFollowPID96
0x210A	0xBE83      	BTFSC       PORTD, 7 
0x210C	0xD007      	BRA         L_lineFollowPID96
0x210E	0xB481      	BTFSC       PORTB, 2 
0x2110	0xD005      	BRA         L_lineFollowPID96
L__lineFollowPID779:
0x2112	0x0101      	MOVLB       1
;linefollow.h,72 :: 		deviation = 1;
0x2114	0x0E01      	MOVLW       1
0x2116	0x6F4E      	MOVWF       _deviation, 1
0x2118	0x0E00      	MOVLW       0
0x211A	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID96:
;linefollow.h,74 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x211C	0xB883      	BTFSC       PORTD, 4 
0x211E	0xD00B      	BRA         L_lineFollowPID99
0x2120	0xAA83      	BTFSS       PORTD, 5 
0x2122	0xD009      	BRA         L_lineFollowPID99
0x2124	0xAC83      	BTFSS       PORTD, 6 
0x2126	0xD007      	BRA         L_lineFollowPID99
0x2128	0xBE83      	BTFSC       PORTD, 7 
0x212A	0xD005      	BRA         L_lineFollowPID99
0x212C	0xB481      	BTFSC       PORTB, 2 
0x212E	0xD003      	BRA         L_lineFollowPID99
L__lineFollowPID778:
0x2130	0x0101      	MOVLB       1
;linefollow.h,75 :: 		deviation = 0;
0x2132	0x6B4E      	CLRF        _deviation, 1
0x2134	0x6B4F      	CLRF        _deviation+1, 1
L_lineFollowPID99:
;linefollow.h,76 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2136	0xB883      	BTFSC       PORTD, 4 
0x2138	0xD00B      	BRA         L_lineFollowPID102
0x213A	0xAA83      	BTFSS       PORTD, 5 
0x213C	0xD009      	BRA         L_lineFollowPID102
0x213E	0xAC83      	BTFSS       PORTD, 6 
0x2140	0xD007      	BRA         L_lineFollowPID102
0x2142	0xAE83      	BTFSS       PORTD, 7 
0x2144	0xD005      	BRA         L_lineFollowPID102
0x2146	0xB481      	BTFSC       PORTB, 2 
0x2148	0xD003      	BRA         L_lineFollowPID102
L__lineFollowPID777:
0x214A	0x0101      	MOVLB       1
;linefollow.h,77 :: 		deviation = 0;
0x214C	0x6B4E      	CLRF        _deviation, 1
0x214E	0x6B4F      	CLRF        _deviation+1, 1
L_lineFollowPID102:
;linefollow.h,78 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2150	0xB883      	BTFSC       PORTD, 4 
0x2152	0xD00B      	BRA         L_lineFollowPID105
0x2154	0xBA83      	BTFSC       PORTD, 5 
0x2156	0xD009      	BRA         L_lineFollowPID105
0x2158	0xAC83      	BTFSS       PORTD, 6 
0x215A	0xD007      	BRA         L_lineFollowPID105
0x215C	0xBE83      	BTFSC       PORTD, 7 
0x215E	0xD005      	BRA         L_lineFollowPID105
0x2160	0xB481      	BTFSC       PORTB, 2 
0x2162	0xD003      	BRA         L_lineFollowPID105
L__lineFollowPID776:
0x2164	0x0101      	MOVLB       1
;linefollow.h,79 :: 		deviation = 0;
0x2166	0x6B4E      	CLRF        _deviation, 1
0x2168	0x6B4F      	CLRF        _deviation+1, 1
L_lineFollowPID105:
;linefollow.h,80 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x216A	0xB883      	BTFSC       PORTD, 4 
0x216C	0xD00B      	BRA         L_lineFollowPID108
0x216E	0xBA83      	BTFSC       PORTD, 5 
0x2170	0xD009      	BRA         L_lineFollowPID108
0x2172	0xAC83      	BTFSS       PORTD, 6 
0x2174	0xD007      	BRA         L_lineFollowPID108
0x2176	0xAE83      	BTFSS       PORTD, 7 
0x2178	0xD005      	BRA         L_lineFollowPID108
0x217A	0xB481      	BTFSC       PORTB, 2 
0x217C	0xD003      	BRA         L_lineFollowPID108
L__lineFollowPID775:
0x217E	0x0101      	MOVLB       1
;linefollow.h,81 :: 		deviation = 0;
0x2180	0x6B4E      	CLRF        _deviation, 1
0x2182	0x6B4F      	CLRF        _deviation+1, 1
L_lineFollowPID108:
;linefollow.h,83 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x2184	0xB883      	BTFSC       PORTD, 4 
0x2186	0xD00D      	BRA         L_lineFollowPID111
0x2188	0xBA83      	BTFSC       PORTD, 5 
0x218A	0xD00B      	BRA         L_lineFollowPID111
0x218C	0xBC83      	BTFSC       PORTD, 6 
0x218E	0xD009      	BRA         L_lineFollowPID111
0x2190	0xAE83      	BTFSS       PORTD, 7 
0x2192	0xD007      	BRA         L_lineFollowPID111
0x2194	0xB481      	BTFSC       PORTB, 2 
0x2196	0xD005      	BRA         L_lineFollowPID111
L__lineFollowPID774:
0x2198	0x0101      	MOVLB       1
;linefollow.h,84 :: 		deviation = -1;
0x219A	0x0EFF      	MOVLW       255
0x219C	0x6F4E      	MOVWF       _deviation, 1
0x219E	0x0EFF      	MOVLW       255
0x21A0	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID111:
;linefollow.h,85 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x21A2	0xB883      	BTFSC       PORTD, 4 
0x21A4	0xD00D      	BRA         L_lineFollowPID114
0x21A6	0xBA83      	BTFSC       PORTD, 5 
0x21A8	0xD00B      	BRA         L_lineFollowPID114
0x21AA	0xAC83      	BTFSS       PORTD, 6 
0x21AC	0xD009      	BRA         L_lineFollowPID114
0x21AE	0xAE83      	BTFSS       PORTD, 7 
0x21B0	0xD007      	BRA         L_lineFollowPID114
0x21B2	0xA481      	BTFSS       PORTB, 2 
0x21B4	0xD005      	BRA         L_lineFollowPID114
L__lineFollowPID773:
0x21B6	0x0101      	MOVLB       1
;linefollow.h,86 :: 		deviation = -4;
0x21B8	0x0EFC      	MOVLW       252
0x21BA	0x6F4E      	MOVWF       _deviation, 1
0x21BC	0x0EFF      	MOVLW       255
0x21BE	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID114:
;linefollow.h,87 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x21C0	0xB883      	BTFSC       PORTD, 4 
0x21C2	0xD00D      	BRA         L_lineFollowPID117
0x21C4	0xBA83      	BTFSC       PORTD, 5 
0x21C6	0xD00B      	BRA         L_lineFollowPID117
0x21C8	0xBC83      	BTFSC       PORTD, 6 
0x21CA	0xD009      	BRA         L_lineFollowPID117
0x21CC	0xAE83      	BTFSS       PORTD, 7 
0x21CE	0xD007      	BRA         L_lineFollowPID117
0x21D0	0xA481      	BTFSS       PORTB, 2 
0x21D2	0xD005      	BRA         L_lineFollowPID117
L__lineFollowPID772:
0x21D4	0x0101      	MOVLB       1
;linefollow.h,88 :: 		deviation = -10;
0x21D6	0x0EF6      	MOVLW       246
0x21D8	0x6F4E      	MOVWF       _deviation, 1
0x21DA	0x0EFF      	MOVLW       255
0x21DC	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID117:
;linefollow.h,89 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x21DE	0xB883      	BTFSC       PORTD, 4 
0x21E0	0xD00D      	BRA         L_lineFollowPID120
0x21E2	0xBA83      	BTFSC       PORTD, 5 
0x21E4	0xD00B      	BRA         L_lineFollowPID120
0x21E6	0xBC83      	BTFSC       PORTD, 6 
0x21E8	0xD009      	BRA         L_lineFollowPID120
0x21EA	0xBE83      	BTFSC       PORTD, 7 
0x21EC	0xD007      	BRA         L_lineFollowPID120
0x21EE	0xA481      	BTFSS       PORTB, 2 
0x21F0	0xD005      	BRA         L_lineFollowPID120
L__lineFollowPID771:
0x21F2	0x0101      	MOVLB       1
;linefollow.h,90 :: 		deviation = -15;
0x21F4	0x0EF1      	MOVLW       241
0x21F6	0x6F4E      	MOVWF       _deviation, 1
0x21F8	0x0EFF      	MOVLW       255
0x21FA	0x6F4F      	MOVWF       _deviation+1, 1
L_lineFollowPID120:
0x21FC	0x0101      	MOVLB       1
;linefollow.h,92 :: 		correction =  Kp*deviation + Ki*totalError + Kd*(deviation-previousDeviation);
0x21FE	0xF000C14E  	MOVFF       _deviation, R0
0x2202	0xF001C14F  	MOVFF       _deviation+1, R1
0x2206	0xF007ECAC  	CALL        _Int2Double, 0
0x220A	0xF004C15A  	MOVFF       _Kp, R4
0x220E	0xF005C15B  	MOVFF       _Kp+1, R5
0x2212	0xF006C15C  	MOVFF       _Kp+2, R6
0x2216	0xF007C15D  	MOVFF       _Kp+3, R7
0x221A	0xF003EC0F  	CALL        _Mul_32x32_FP, 0
0x221E	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x2222	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x2226	0xF18CC002  	MOVFF       R2, FLOC__lineFollowPID+2
0x222A	0xF18DC003  	MOVFF       R3, FLOC__lineFollowPID+3
0x222E	0xF000C166  	MOVFF       _Ki, R0
0x2232	0xF001C167  	MOVFF       _Ki+1, R1
0x2236	0xF002C168  	MOVFF       _Ki+2, R2
0x223A	0xF003C169  	MOVFF       _Ki+3, R3
0x223E	0xF004C162  	MOVFF       _totalError, R4
0x2242	0xF005C163  	MOVFF       _totalError+1, R5
0x2246	0xF006C164  	MOVFF       _totalError+2, R6
0x224A	0xF007C165  	MOVFF       _totalError+3, R7
0x224E	0xF003EC0F  	CALL        _Mul_32x32_FP, 0
0x2252	0xF004C18A  	MOVFF       FLOC__lineFollowPID, R4
0x2256	0xF005C18B  	MOVFF       FLOC__lineFollowPID+1, R5
0x225A	0xF006C18C  	MOVFF       FLOC__lineFollowPID+2, R6
0x225E	0xF007C18D  	MOVFF       FLOC__lineFollowPID+3, R7
0x2262	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x2266	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x226A	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x226E	0xF18CC002  	MOVFF       R2, FLOC__lineFollowPID+2
0x2272	0xF18DC003  	MOVFF       R3, FLOC__lineFollowPID+3
0x2276	0x515E      	MOVF        _previousDeviation, 0, 1
0x2278	0x5D4E      	SUBWF       _deviation, 0, 1
0x227A	0x6E00      	MOVWF       R0 
0x227C	0x515F      	MOVF        _previousDeviation+1, 0, 1
0x227E	0x594F      	SUBWFB      _deviation+1, 0, 1
0x2280	0x6E01      	MOVWF       R1 
0x2282	0xF007ECAC  	CALL        _Int2Double, 0
0x2286	0xF004C16A  	MOVFF       _Kd, R4
0x228A	0xF005C16B  	MOVFF       _Kd+1, R5
0x228E	0xF006C16C  	MOVFF       _Kd+2, R6
0x2292	0xF007C16D  	MOVFF       _Kd+3, R7
0x2296	0xF003EC0F  	CALL        _Mul_32x32_FP, 0
0x229A	0xF004C18A  	MOVFF       FLOC__lineFollowPID, R4
0x229E	0xF005C18B  	MOVFF       FLOC__lineFollowPID+1, R5
0x22A2	0xF006C18C  	MOVFF       FLOC__lineFollowPID+2, R6
0x22A6	0xF007C18D  	MOVFF       FLOC__lineFollowPID+3, R7
0x22AA	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x22AE	0xF192C000  	MOVFF       R0, FLOC__lineFollowPID+8
0x22B2	0xF193C001  	MOVFF       R1, FLOC__lineFollowPID+9
0x22B6	0xF194C002  	MOVFF       R2, FLOC__lineFollowPID+10
0x22BA	0xF195C003  	MOVFF       R3, FLOC__lineFollowPID+11
0x22BE	0xF148C192  	MOVFF       FLOC__lineFollowPID+8, _correction
0x22C2	0xF149C193  	MOVFF       FLOC__lineFollowPID+9, _correction+1
0x22C6	0xF14AC194  	MOVFF       FLOC__lineFollowPID+10, _correction+2
0x22CA	0xF14BC195  	MOVFF       FLOC__lineFollowPID+11, _correction+3
;linefollow.h,93 :: 		totalError += correction;
0x22CE	0xF000C162  	MOVFF       _totalError, R0
0x22D2	0xF001C163  	MOVFF       _totalError+1, R1
0x22D6	0xF002C164  	MOVFF       _totalError+2, R2
0x22DA	0xF003C165  	MOVFF       _totalError+3, R3
0x22DE	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x22E2	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x22E6	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x22EA	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x22EE	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x22F2	0xF162C000  	MOVFF       R0, _totalError
0x22F6	0xF163C001  	MOVFF       R1, _totalError+1
0x22FA	0xF164C002  	MOVFF       R2, _totalError+2
0x22FE	0xF165C003  	MOVFF       R3, _totalError+3
;linefollow.h,94 :: 		previousDeviation = deviation;
0x2302	0xF15EC14E  	MOVFF       _deviation, _previousDeviation
0x2306	0xF15FC14F  	MOVFF       _deviation+1, _previousDeviation+1
;linefollow.h,96 :: 		PID_LeftRPM = MID_RPM + correction;
0x230A	0xF000C158  	MOVFF       _MID_RPM, R0
0x230E	0xF001C159  	MOVFF       _MID_RPM+1, R1
0x2312	0xF007ECAC  	CALL        _Int2Double, 0
0x2316	0xF18EC000  	MOVFF       R0, FLOC__lineFollowPID+4
0x231A	0xF18FC001  	MOVFF       R1, FLOC__lineFollowPID+5
0x231E	0xF190C002  	MOVFF       R2, FLOC__lineFollowPID+6
0x2322	0xF191C003  	MOVFF       R3, FLOC__lineFollowPID+7
0x2326	0xF000C18E  	MOVFF       FLOC__lineFollowPID+4, R0
0x232A	0xF001C18F  	MOVFF       FLOC__lineFollowPID+5, R1
0x232E	0xF002C190  	MOVFF       FLOC__lineFollowPID+6, R2
0x2332	0xF003C191  	MOVFF       FLOC__lineFollowPID+7, R3
0x2336	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x233A	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x233E	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x2342	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x2346	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x234A	0xF003EC9F  	CALL        _Double2Int, 0
0x234E	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x2352	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x2356	0xF160C18A  	MOVFF       FLOC__lineFollowPID, _PID_LeftRPM
0x235A	0xF161C18B  	MOVFF       FLOC__lineFollowPID+1, _PID_LeftRPM+1
;linefollow.h,97 :: 		PID_RightRPM = MID_RPM - correction;
0x235E	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x2362	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x2366	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x236A	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x236E	0xF000C18E  	MOVFF       FLOC__lineFollowPID+4, R0
0x2372	0xF001C18F  	MOVFF       FLOC__lineFollowPID+5, R1
0x2376	0xF002C190  	MOVFF       FLOC__lineFollowPID+6, R2
0x237A	0xF003C191  	MOVFF       FLOC__lineFollowPID+7, R3
0x237E	0xF007ECCD  	CALL        _Sub_32x32_FP, 0
0x2382	0xF003EC9F  	CALL        _Double2Int, 0
0x2386	0xF14CC000  	MOVFF       R0, _PID_RightRPM
0x238A	0xF14DC001  	MOVFF       R1, _PID_RightRPM+1
;linefollow.h,99 :: 		moveForward(PID_LeftRPM, PID_RightRPM);
0x238E	0xF19AC18A  	MOVFF       FLOC__lineFollowPID, FARG_moveForward_pwmLeft
0x2392	0xF19BC18B  	MOVFF       FLOC__lineFollowPID+1, FARG_moveForward_pwmLeft+1
0x2396	0xF19CC000  	MOVFF       R0, FARG_moveForward_pwmRight
0x239A	0xF19DC001  	MOVFF       R1, FARG_moveForward_pwmRight+1
0x239E	0xF007EC62  	CALL        _moveForward, 0
;linefollow.h,105 :: 		}
0x23A2	0x0012      	RETURN      0
; end of _lineFollowPID
_lineFollowNormalWorkedForLast:
;linefollow.h,365 :: 		void lineFollowNormalWorkedForLast(){
;linefollow.h,366 :: 		if(Scout == 1){
0x23A4	0xAA81      	BTFSS       PORTB, 5 
0x23A6	0xD13A      	BRA         L_lineFollowNormalWorkedForLast379
;linefollow.h,368 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x23A8	0xB883      	BTFSC       PORTD, 4 
0x23AA	0xD013      	BRA         L_lineFollowNormalWorkedForLast382
0x23AC	0xAA83      	BTFSS       PORTD, 5 
0x23AE	0xD011      	BRA         L_lineFollowNormalWorkedForLast382
0x23B0	0xAC83      	BTFSS       PORTD, 6 
0x23B2	0xD00F      	BRA         L_lineFollowNormalWorkedForLast382
0x23B4	0xBE83      	BTFSC       PORTD, 7 
0x23B6	0xD00D      	BRA         L_lineFollowNormalWorkedForLast382
0x23B8	0xB481      	BTFSC       PORTB, 2 
0x23BA	0xD00B      	BRA         L_lineFollowNormalWorkedForLast382
L__lineFollowNormalWorkedForLast882:
;linefollow.h,369 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x23BC	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x23C0	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x23C4	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x23C8	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x23CC	0xF007EC62  	CALL        _moveForward, 0
0x23D0	0xD124      	BRA         L_lineFollowNormalWorkedForLast383
L_lineFollowNormalWorkedForLast382:
;linefollow.h,370 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x23D2	0xB883      	BTFSC       PORTD, 4 
0x23D4	0xD013      	BRA         L_lineFollowNormalWorkedForLast386
0x23D6	0xAA83      	BTFSS       PORTD, 5 
0x23D8	0xD011      	BRA         L_lineFollowNormalWorkedForLast386
0x23DA	0xAC83      	BTFSS       PORTD, 6 
0x23DC	0xD00F      	BRA         L_lineFollowNormalWorkedForLast386
0x23DE	0xAE83      	BTFSS       PORTD, 7 
0x23E0	0xD00D      	BRA         L_lineFollowNormalWorkedForLast386
0x23E2	0xB481      	BTFSC       PORTB, 2 
0x23E4	0xD00B      	BRA         L_lineFollowNormalWorkedForLast386
L__lineFollowNormalWorkedForLast881:
;linefollow.h,371 :: 		moveForward(FAST_PWM,FAST_PWM);
0x23E6	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x23EA	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x23EE	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x23F2	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x23F6	0xF007EC62  	CALL        _moveForward, 0
0x23FA	0xD10F      	BRA         L_lineFollowNormalWorkedForLast387
L_lineFollowNormalWorkedForLast386:
;linefollow.h,372 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x23FC	0xB883      	BTFSC       PORTD, 4 
0x23FE	0xD013      	BRA         L_lineFollowNormalWorkedForLast390
0x2400	0xBA83      	BTFSC       PORTD, 5 
0x2402	0xD011      	BRA         L_lineFollowNormalWorkedForLast390
0x2404	0xAC83      	BTFSS       PORTD, 6 
0x2406	0xD00F      	BRA         L_lineFollowNormalWorkedForLast390
0x2408	0xBE83      	BTFSC       PORTD, 7 
0x240A	0xD00D      	BRA         L_lineFollowNormalWorkedForLast390
0x240C	0xB481      	BTFSC       PORTB, 2 
0x240E	0xD00B      	BRA         L_lineFollowNormalWorkedForLast390
L__lineFollowNormalWorkedForLast880:
;linefollow.h,373 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2410	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2414	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2418	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x241C	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2420	0xF007EC62  	CALL        _moveForward, 0
0x2424	0xD0FA      	BRA         L_lineFollowNormalWorkedForLast391
L_lineFollowNormalWorkedForLast390:
;linefollow.h,374 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2426	0xB883      	BTFSC       PORTD, 4 
0x2428	0xD013      	BRA         L_lineFollowNormalWorkedForLast394
0x242A	0xBA83      	BTFSC       PORTD, 5 
0x242C	0xD011      	BRA         L_lineFollowNormalWorkedForLast394
0x242E	0xAC83      	BTFSS       PORTD, 6 
0x2430	0xD00F      	BRA         L_lineFollowNormalWorkedForLast394
0x2432	0xAE83      	BTFSS       PORTD, 7 
0x2434	0xD00D      	BRA         L_lineFollowNormalWorkedForLast394
0x2436	0xB481      	BTFSC       PORTB, 2 
0x2438	0xD00B      	BRA         L_lineFollowNormalWorkedForLast394
L__lineFollowNormalWorkedForLast879:
;linefollow.h,375 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x243A	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x243E	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2442	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x2446	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x244A	0xF007EC62  	CALL        _moveForward, 0
0x244E	0xD0E5      	BRA         L_lineFollowNormalWorkedForLast395
L_lineFollowNormalWorkedForLast394:
;linefollow.h,380 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x2450	0xA883      	BTFSS       PORTD, 4 
0x2452	0xD00F      	BRA         L_lineFollowNormalWorkedForLast398
0x2454	0xBA83      	BTFSC       PORTD, 5 
0x2456	0xD00D      	BRA         L_lineFollowNormalWorkedForLast398
0x2458	0xBC83      	BTFSC       PORTD, 6 
0x245A	0xD00B      	BRA         L_lineFollowNormalWorkedForLast398
0x245C	0xBE83      	BTFSC       PORTD, 7 
0x245E	0xD009      	BRA         L_lineFollowNormalWorkedForLast398
0x2460	0xB481      	BTFSC       PORTB, 2 
0x2462	0xD007      	BRA         L_lineFollowNormalWorkedForLast398
L__lineFollowNormalWorkedForLast878:
;linefollow.h,382 :: 		turnLeft(FAST_PWM);
0x2464	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x2468	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x246C	0xF007EC90  	CALL        _turnLeft, 0
0x2470	0xD0D4      	BRA         L_lineFollowNormalWorkedForLast399
L_lineFollowNormalWorkedForLast398:
;linefollow.h,383 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x2472	0xA883      	BTFSS       PORTD, 4 
0x2474	0xD00F      	BRA         L_lineFollowNormalWorkedForLast402
0x2476	0xAA83      	BTFSS       PORTD, 5 
0x2478	0xD00D      	BRA         L_lineFollowNormalWorkedForLast402
0x247A	0xBC83      	BTFSC       PORTD, 6 
0x247C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast402
0x247E	0xBE83      	BTFSC       PORTD, 7 
0x2480	0xD009      	BRA         L_lineFollowNormalWorkedForLast402
0x2482	0xB481      	BTFSC       PORTB, 2 
0x2484	0xD007      	BRA         L_lineFollowNormalWorkedForLast402
L__lineFollowNormalWorkedForLast877:
;linefollow.h,385 :: 		turnLeft(FAST_PWM);
0x2486	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x248A	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x248E	0xF007EC90  	CALL        _turnLeft, 0
0x2492	0xD0C3      	BRA         L_lineFollowNormalWorkedForLast403
L_lineFollowNormalWorkedForLast402:
;linefollow.h,386 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2494	0xA883      	BTFSS       PORTD, 4 
0x2496	0xD00F      	BRA         L_lineFollowNormalWorkedForLast406
0x2498	0xAA83      	BTFSS       PORTD, 5 
0x249A	0xD00D      	BRA         L_lineFollowNormalWorkedForLast406
0x249C	0xAC83      	BTFSS       PORTD, 6 
0x249E	0xD00B      	BRA         L_lineFollowNormalWorkedForLast406
0x24A0	0xBE83      	BTFSC       PORTD, 7 
0x24A2	0xD009      	BRA         L_lineFollowNormalWorkedForLast406
0x24A4	0xB481      	BTFSC       PORTB, 2 
0x24A6	0xD007      	BRA         L_lineFollowNormalWorkedForLast406
L__lineFollowNormalWorkedForLast876:
;linefollow.h,388 :: 		turnLeft(FAST_PWM);
0x24A8	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x24AC	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x24B0	0xF007EC90  	CALL        _turnLeft, 0
0x24B4	0xD0B2      	BRA         L_lineFollowNormalWorkedForLast407
L_lineFollowNormalWorkedForLast406:
;linefollow.h,389 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x24B6	0xB883      	BTFSC       PORTD, 4 
0x24B8	0xD00F      	BRA         L_lineFollowNormalWorkedForLast410
0x24BA	0xAA83      	BTFSS       PORTD, 5 
0x24BC	0xD00D      	BRA         L_lineFollowNormalWorkedForLast410
0x24BE	0xBC83      	BTFSC       PORTD, 6 
0x24C0	0xD00B      	BRA         L_lineFollowNormalWorkedForLast410
0x24C2	0xBE83      	BTFSC       PORTD, 7 
0x24C4	0xD009      	BRA         L_lineFollowNormalWorkedForLast410
0x24C6	0xB481      	BTFSC       PORTB, 2 
0x24C8	0xD007      	BRA         L_lineFollowNormalWorkedForLast410
L__lineFollowNormalWorkedForLast875:
;linefollow.h,391 :: 		turnLeft(FAST_PWM);
0x24CA	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x24CE	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x24D2	0xF007EC90  	CALL        _turnLeft, 0
0x24D6	0xD0A1      	BRA         L_lineFollowNormalWorkedForLast411
L_lineFollowNormalWorkedForLast410:
;linefollow.h,394 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x24D8	0xB883      	BTFSC       PORTD, 4 
0x24DA	0xD00F      	BRA         L_lineFollowNormalWorkedForLast414
0x24DC	0xBA83      	BTFSC       PORTD, 5 
0x24DE	0xD00D      	BRA         L_lineFollowNormalWorkedForLast414
0x24E0	0xBC83      	BTFSC       PORTD, 6 
0x24E2	0xD00B      	BRA         L_lineFollowNormalWorkedForLast414
0x24E4	0xAE83      	BTFSS       PORTD, 7 
0x24E6	0xD009      	BRA         L_lineFollowNormalWorkedForLast414
0x24E8	0xB481      	BTFSC       PORTB, 2 
0x24EA	0xD007      	BRA         L_lineFollowNormalWorkedForLast414
L__lineFollowNormalWorkedForLast874:
;linefollow.h,396 :: 		turnRight(FAST_PWM);
0x24EC	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x24F0	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x24F4	0xF007EC99  	CALL        _turnRight, 0
0x24F8	0xD090      	BRA         L_lineFollowNormalWorkedForLast415
L_lineFollowNormalWorkedForLast414:
;linefollow.h,397 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x24FA	0xB883      	BTFSC       PORTD, 4 
0x24FC	0xD00F      	BRA         L_lineFollowNormalWorkedForLast418
0x24FE	0xBA83      	BTFSC       PORTD, 5 
0x2500	0xD00D      	BRA         L_lineFollowNormalWorkedForLast418
0x2502	0xAC83      	BTFSS       PORTD, 6 
0x2504	0xD00B      	BRA         L_lineFollowNormalWorkedForLast418
0x2506	0xAE83      	BTFSS       PORTD, 7 
0x2508	0xD009      	BRA         L_lineFollowNormalWorkedForLast418
0x250A	0xA481      	BTFSS       PORTB, 2 
0x250C	0xD007      	BRA         L_lineFollowNormalWorkedForLast418
L__lineFollowNormalWorkedForLast873:
;linefollow.h,399 :: 		turnRight(FAST_PWM);
0x250E	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2512	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x2516	0xF007EC99  	CALL        _turnRight, 0
0x251A	0xD07F      	BRA         L_lineFollowNormalWorkedForLast419
L_lineFollowNormalWorkedForLast418:
;linefollow.h,400 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x251C	0xB883      	BTFSC       PORTD, 4 
0x251E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast422
0x2520	0xBA83      	BTFSC       PORTD, 5 
0x2522	0xD00D      	BRA         L_lineFollowNormalWorkedForLast422
0x2524	0xBC83      	BTFSC       PORTD, 6 
0x2526	0xD00B      	BRA         L_lineFollowNormalWorkedForLast422
0x2528	0xAE83      	BTFSS       PORTD, 7 
0x252A	0xD009      	BRA         L_lineFollowNormalWorkedForLast422
0x252C	0xA481      	BTFSS       PORTB, 2 
0x252E	0xD007      	BRA         L_lineFollowNormalWorkedForLast422
L__lineFollowNormalWorkedForLast872:
;linefollow.h,402 :: 		turnRight(FAST_PWM);
0x2530	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2534	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x2538	0xF007EC99  	CALL        _turnRight, 0
0x253C	0xD06E      	BRA         L_lineFollowNormalWorkedForLast423
L_lineFollowNormalWorkedForLast422:
;linefollow.h,403 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x253E	0xB883      	BTFSC       PORTD, 4 
0x2540	0xD00F      	BRA         L_lineFollowNormalWorkedForLast426
0x2542	0xBA83      	BTFSC       PORTD, 5 
0x2544	0xD00D      	BRA         L_lineFollowNormalWorkedForLast426
0x2546	0xBC83      	BTFSC       PORTD, 6 
0x2548	0xD00B      	BRA         L_lineFollowNormalWorkedForLast426
0x254A	0xBE83      	BTFSC       PORTD, 7 
0x254C	0xD009      	BRA         L_lineFollowNormalWorkedForLast426
0x254E	0xA481      	BTFSS       PORTB, 2 
0x2550	0xD007      	BRA         L_lineFollowNormalWorkedForLast426
L__lineFollowNormalWorkedForLast871:
;linefollow.h,405 :: 		turnRight(FAST_PWM);
0x2552	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2556	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x255A	0xF007EC99  	CALL        _turnRight, 0
0x255E	0xD05D      	BRA         L_lineFollowNormalWorkedForLast427
L_lineFollowNormalWorkedForLast426:
;linefollow.h,408 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2560	0xA883      	BTFSS       PORTD, 4 
0x2562	0xD013      	BRA         L_lineFollowNormalWorkedForLast430
0x2564	0xAA83      	BTFSS       PORTD, 5 
0x2566	0xD011      	BRA         L_lineFollowNormalWorkedForLast430
0x2568	0xAC83      	BTFSS       PORTD, 6 
0x256A	0xD00F      	BRA         L_lineFollowNormalWorkedForLast430
0x256C	0xAE83      	BTFSS       PORTD, 7 
0x256E	0xD00D      	BRA         L_lineFollowNormalWorkedForLast430
0x2570	0xB481      	BTFSC       PORTB, 2 
0x2572	0xD00B      	BRA         L_lineFollowNormalWorkedForLast430
L__lineFollowNormalWorkedForLast870:
;linefollow.h,409 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2574	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2578	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x257C	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2580	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2584	0xF007EC62  	CALL        _moveForward, 0
0x2588	0xD048      	BRA         L_lineFollowNormalWorkedForLast431
L_lineFollowNormalWorkedForLast430:
;linefollow.h,410 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x258A	0xB883      	BTFSC       PORTD, 4 
0x258C	0xD013      	BRA         L_lineFollowNormalWorkedForLast434
0x258E	0xAA83      	BTFSS       PORTD, 5 
0x2590	0xD011      	BRA         L_lineFollowNormalWorkedForLast434
0x2592	0xAC83      	BTFSS       PORTD, 6 
0x2594	0xD00F      	BRA         L_lineFollowNormalWorkedForLast434
0x2596	0xAE83      	BTFSS       PORTD, 7 
0x2598	0xD00D      	BRA         L_lineFollowNormalWorkedForLast434
0x259A	0xA481      	BTFSS       PORTB, 2 
0x259C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast434
L__lineFollowNormalWorkedForLast869:
;linefollow.h,411 :: 		moveForward(FAST_PWM,FAST_PWM);
0x259E	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x25A2	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x25A6	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x25AA	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x25AE	0xF007EC62  	CALL        _moveForward, 0
0x25B2	0xD033      	BRA         L_lineFollowNormalWorkedForLast435
L_lineFollowNormalWorkedForLast434:
;linefollow.h,412 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x25B4	0xB881      	BTFSC       PORTB, 4 
0x25B6	0xD01C      	BRA         L_lineFollowNormalWorkedForLast438
0x25B8	0xB681      	BTFSC       PORTB, 3 
0x25BA	0xD01A      	BRA         L_lineFollowNormalWorkedForLast438
0x25BC	0xB883      	BTFSC       PORTD, 4 
0x25BE	0xD018      	BRA         L_lineFollowNormalWorkedForLast438
0x25C0	0xBA83      	BTFSC       PORTD, 5 
0x25C2	0xD016      	BRA         L_lineFollowNormalWorkedForLast438
0x25C4	0xBC83      	BTFSC       PORTD, 6 
0x25C6	0xD014      	BRA         L_lineFollowNormalWorkedForLast438
0x25C8	0xBE83      	BTFSC       PORTD, 7 
0x25CA	0xD012      	BRA         L_lineFollowNormalWorkedForLast438
0x25CC	0xB481      	BTFSC       PORTB, 2 
0x25CE	0xD010      	BRA         L_lineFollowNormalWorkedForLast438
0x25D0	0xBC81      	BTFSC       PORTB, 6 
0x25D2	0xD00E      	BRA         L_lineFollowNormalWorkedForLast438
0x25D4	0xBE81      	BTFSC       PORTB, 7 
0x25D6	0xD00C      	BRA         L_lineFollowNormalWorkedForLast438
L__lineFollowNormalWorkedForLast868:
;linefollow.h,413 :: 		moveForward(255,255);
0x25D8	0x0EFF      	MOVLW       255
0x25DA	0x0101      	MOVLB       1
0x25DC	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x25DE	0x0E00      	MOVLW       0
0x25E0	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x25E2	0x0EFF      	MOVLW       255
0x25E4	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x25E6	0x0E00      	MOVLW       0
0x25E8	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x25EA	0xF007EC62  	CALL        _moveForward, 0
0x25EE	0xD015      	BRA         L_lineFollowNormalWorkedForLast439
L_lineFollowNormalWorkedForLast438:
;linefollow.h,415 :: 		else if(isAllBlack()){
0x25F0	0xF009ECBE  	CALL        _isAllBlack, 0
0x25F4	0x5000      	MOVF        R0, 0 
0x25F6	0x1001      	IORWF       R1, 0 
0x25F8	0xE003      	BZ          L_lineFollowNormalWorkedForLast440
;linefollow.h,418 :: 		sendSensorStatus();
0x25FA	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,419 :: 		}
0x25FE	0xD00D      	BRA         L_lineFollowNormalWorkedForLast441
L_lineFollowNormalWorkedForLast440:
0x2600	0x0101      	MOVLB       1
;linefollow.h,422 :: 		moveForward(205,200);
0x2602	0x0ECD      	MOVLW       205
0x2604	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2606	0x0E00      	MOVLW       0
0x2608	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x260A	0x0EC8      	MOVLW       200
0x260C	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x260E	0x0E00      	MOVLW       0
0x2610	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2612	0xF007EC62  	CALL        _moveForward, 0
;linefollow.h,423 :: 		sendSensorStatus();
0x2616	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,425 :: 		}
L_lineFollowNormalWorkedForLast441:
L_lineFollowNormalWorkedForLast439:
L_lineFollowNormalWorkedForLast435:
L_lineFollowNormalWorkedForLast431:
L_lineFollowNormalWorkedForLast427:
L_lineFollowNormalWorkedForLast423:
L_lineFollowNormalWorkedForLast419:
L_lineFollowNormalWorkedForLast415:
L_lineFollowNormalWorkedForLast411:
L_lineFollowNormalWorkedForLast407:
L_lineFollowNormalWorkedForLast403:
L_lineFollowNormalWorkedForLast399:
L_lineFollowNormalWorkedForLast395:
L_lineFollowNormalWorkedForLast391:
L_lineFollowNormalWorkedForLast387:
L_lineFollowNormalWorkedForLast383:
;linefollow.h,426 :: 		}
0x261A	0xD20A      	BRA         L_lineFollowNormalWorkedForLast442
L_lineFollowNormalWorkedForLast379:
;linefollow.h,433 :: 		if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x261C	0xA881      	BTFSS       PORTB, 4 
0x261E	0xD018      	BRA         L_lineFollowNormalWorkedForLast445
0x2620	0xA681      	BTFSS       PORTB, 3 
0x2622	0xD016      	BRA         L_lineFollowNormalWorkedForLast445
0x2624	0xA883      	BTFSS       PORTD, 4 
0x2626	0xD014      	BRA         L_lineFollowNormalWorkedForLast445
0x2628	0xAA83      	BTFSS       PORTD, 5 
0x262A	0xD012      	BRA         L_lineFollowNormalWorkedForLast445
0x262C	0xAC83      	BTFSS       PORTD, 6 
0x262E	0xD010      	BRA         L_lineFollowNormalWorkedForLast445
0x2630	0xBE83      	BTFSC       PORTD, 7 
0x2632	0xD00E      	BRA         L_lineFollowNormalWorkedForLast445
0x2634	0xB481      	BTFSC       PORTB, 2 
0x2636	0xD00C      	BRA         L_lineFollowNormalWorkedForLast445
0x2638	0xBC81      	BTFSC       PORTB, 6 
0x263A	0xD00A      	BRA         L_lineFollowNormalWorkedForLast445
0x263C	0xBE81      	BTFSC       PORTB, 7 
0x263E	0xD008      	BRA         L_lineFollowNormalWorkedForLast445
L__lineFollowNormalWorkedForLast867:
0x2640	0x0101      	MOVLB       1
;linefollow.h,434 :: 		rotateByDegree(-90);
0x2642	0x0EA6      	MOVLW       166
0x2644	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2646	0x0EFF      	MOVLW       255
0x2648	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x264A	0xF009ECE7  	CALL        _rotateByDegree, 0
0x264E	0xD1F0      	BRA         L_lineFollowNormalWorkedForLast446
L_lineFollowNormalWorkedForLast445:
;linefollow.h,435 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x2650	0xA881      	BTFSS       PORTB, 4 
0x2652	0xD018      	BRA         L_lineFollowNormalWorkedForLast449
0x2654	0xA681      	BTFSS       PORTB, 3 
0x2656	0xD016      	BRA         L_lineFollowNormalWorkedForLast449
0x2658	0xA883      	BTFSS       PORTD, 4 
0x265A	0xD014      	BRA         L_lineFollowNormalWorkedForLast449
0x265C	0xAA83      	BTFSS       PORTD, 5 
0x265E	0xD012      	BRA         L_lineFollowNormalWorkedForLast449
0x2660	0xAC83      	BTFSS       PORTD, 6 
0x2662	0xD010      	BRA         L_lineFollowNormalWorkedForLast449
0x2664	0xAE83      	BTFSS       PORTD, 7 
0x2666	0xD00E      	BRA         L_lineFollowNormalWorkedForLast449
0x2668	0xB481      	BTFSC       PORTB, 2 
0x266A	0xD00C      	BRA         L_lineFollowNormalWorkedForLast449
0x266C	0xBC81      	BTFSC       PORTB, 6 
0x266E	0xD00A      	BRA         L_lineFollowNormalWorkedForLast449
0x2670	0xBE81      	BTFSC       PORTB, 7 
0x2672	0xD008      	BRA         L_lineFollowNormalWorkedForLast449
L__lineFollowNormalWorkedForLast866:
;linefollow.h,436 :: 		rotateByDegree(-90);
0x2674	0x0EA6      	MOVLW       166
0x2676	0x0101      	MOVLB       1
0x2678	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x267A	0x0EFF      	MOVLW       255
0x267C	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x267E	0xF009ECE7  	CALL        _rotateByDegree, 0
0x2682	0xD1D6      	BRA         L_lineFollowNormalWorkedForLast450
L_lineFollowNormalWorkedForLast449:
;linefollow.h,437 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==0 && Sensor9==0)
0x2684	0xA881      	BTFSS       PORTB, 4 
0x2686	0xD018      	BRA         L_lineFollowNormalWorkedForLast453
0x2688	0xA681      	BTFSS       PORTB, 3 
0x268A	0xD016      	BRA         L_lineFollowNormalWorkedForLast453
0x268C	0xA883      	BTFSS       PORTD, 4 
0x268E	0xD014      	BRA         L_lineFollowNormalWorkedForLast453
0x2690	0xAA83      	BTFSS       PORTD, 5 
0x2692	0xD012      	BRA         L_lineFollowNormalWorkedForLast453
0x2694	0xAC83      	BTFSS       PORTD, 6 
0x2696	0xD010      	BRA         L_lineFollowNormalWorkedForLast453
0x2698	0xAE83      	BTFSS       PORTD, 7 
0x269A	0xD00E      	BRA         L_lineFollowNormalWorkedForLast453
0x269C	0xA481      	BTFSS       PORTB, 2 
0x269E	0xD00C      	BRA         L_lineFollowNormalWorkedForLast453
0x26A0	0xBC81      	BTFSC       PORTB, 6 
0x26A2	0xD00A      	BRA         L_lineFollowNormalWorkedForLast453
0x26A4	0xBE81      	BTFSC       PORTB, 7 
0x26A6	0xD008      	BRA         L_lineFollowNormalWorkedForLast453
L__lineFollowNormalWorkedForLast865:
;linefollow.h,438 :: 		rotateByDegree(-90);
0x26A8	0x0EA6      	MOVLW       166
0x26AA	0x0101      	MOVLB       1
0x26AC	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x26AE	0x0EFF      	MOVLW       255
0x26B0	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x26B2	0xF009ECE7  	CALL        _rotateByDegree, 0
0x26B6	0xD1BC      	BRA         L_lineFollowNormalWorkedForLast454
L_lineFollowNormalWorkedForLast453:
;linefollow.h,441 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x26B8	0xB881      	BTFSC       PORTB, 4 
0x26BA	0xD018      	BRA         L_lineFollowNormalWorkedForLast457
0x26BC	0xB681      	BTFSC       PORTB, 3 
0x26BE	0xD016      	BRA         L_lineFollowNormalWorkedForLast457
0x26C0	0xA883      	BTFSS       PORTD, 4 
0x26C2	0xD014      	BRA         L_lineFollowNormalWorkedForLast457
0x26C4	0xAA83      	BTFSS       PORTD, 5 
0x26C6	0xD012      	BRA         L_lineFollowNormalWorkedForLast457
0x26C8	0xAC83      	BTFSS       PORTD, 6 
0x26CA	0xD010      	BRA         L_lineFollowNormalWorkedForLast457
0x26CC	0xAE83      	BTFSS       PORTD, 7 
0x26CE	0xD00E      	BRA         L_lineFollowNormalWorkedForLast457
0x26D0	0xA481      	BTFSS       PORTB, 2 
0x26D2	0xD00C      	BRA         L_lineFollowNormalWorkedForLast457
0x26D4	0xAC81      	BTFSS       PORTB, 6 
0x26D6	0xD00A      	BRA         L_lineFollowNormalWorkedForLast457
0x26D8	0xAE81      	BTFSS       PORTB, 7 
0x26DA	0xD008      	BRA         L_lineFollowNormalWorkedForLast457
L__lineFollowNormalWorkedForLast864:
;linefollow.h,442 :: 		rotateByDegree(90);
0x26DC	0x0E5A      	MOVLW       90
0x26DE	0x0101      	MOVLB       1
0x26E0	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x26E2	0x0E00      	MOVLW       0
0x26E4	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x26E6	0xF009ECE7  	CALL        _rotateByDegree, 0
0x26EA	0xD1A2      	BRA         L_lineFollowNormalWorkedForLast458
L_lineFollowNormalWorkedForLast457:
;linefollow.h,443 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x26EC	0xB881      	BTFSC       PORTB, 4 
0x26EE	0xD018      	BRA         L_lineFollowNormalWorkedForLast461
0x26F0	0xB681      	BTFSC       PORTB, 3 
0x26F2	0xD016      	BRA         L_lineFollowNormalWorkedForLast461
0x26F4	0xB883      	BTFSC       PORTD, 4 
0x26F6	0xD014      	BRA         L_lineFollowNormalWorkedForLast461
0x26F8	0xAA83      	BTFSS       PORTD, 5 
0x26FA	0xD012      	BRA         L_lineFollowNormalWorkedForLast461
0x26FC	0xAC83      	BTFSS       PORTD, 6 
0x26FE	0xD010      	BRA         L_lineFollowNormalWorkedForLast461
0x2700	0xAE83      	BTFSS       PORTD, 7 
0x2702	0xD00E      	BRA         L_lineFollowNormalWorkedForLast461
0x2704	0xA481      	BTFSS       PORTB, 2 
0x2706	0xD00C      	BRA         L_lineFollowNormalWorkedForLast461
0x2708	0xAC81      	BTFSS       PORTB, 6 
0x270A	0xD00A      	BRA         L_lineFollowNormalWorkedForLast461
0x270C	0xAE81      	BTFSS       PORTB, 7 
0x270E	0xD008      	BRA         L_lineFollowNormalWorkedForLast461
L__lineFollowNormalWorkedForLast863:
;linefollow.h,444 :: 		rotateByDegree(90);
0x2710	0x0E5A      	MOVLW       90
0x2712	0x0101      	MOVLB       1
0x2714	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2716	0x0E00      	MOVLW       0
0x2718	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x271A	0xF009ECE7  	CALL        _rotateByDegree, 0
0x271E	0xD188      	BRA         L_lineFollowNormalWorkedForLast462
L_lineFollowNormalWorkedForLast461:
;linefollow.h,445 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x2720	0xB881      	BTFSC       PORTB, 4 
0x2722	0xD018      	BRA         L_lineFollowNormalWorkedForLast465
0x2724	0xB681      	BTFSC       PORTB, 3 
0x2726	0xD016      	BRA         L_lineFollowNormalWorkedForLast465
0x2728	0xB883      	BTFSC       PORTD, 4 
0x272A	0xD014      	BRA         L_lineFollowNormalWorkedForLast465
0x272C	0xBA83      	BTFSC       PORTD, 5 
0x272E	0xD012      	BRA         L_lineFollowNormalWorkedForLast465
0x2730	0xAC83      	BTFSS       PORTD, 6 
0x2732	0xD010      	BRA         L_lineFollowNormalWorkedForLast465
0x2734	0xAE83      	BTFSS       PORTD, 7 
0x2736	0xD00E      	BRA         L_lineFollowNormalWorkedForLast465
0x2738	0xA481      	BTFSS       PORTB, 2 
0x273A	0xD00C      	BRA         L_lineFollowNormalWorkedForLast465
0x273C	0xAC81      	BTFSS       PORTB, 6 
0x273E	0xD00A      	BRA         L_lineFollowNormalWorkedForLast465
0x2740	0xAE81      	BTFSS       PORTB, 7 
0x2742	0xD008      	BRA         L_lineFollowNormalWorkedForLast465
L__lineFollowNormalWorkedForLast862:
;linefollow.h,446 :: 		rotateByDegree(90);
0x2744	0x0E5A      	MOVLW       90
0x2746	0x0101      	MOVLB       1
0x2748	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x274A	0x0E00      	MOVLW       0
0x274C	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x274E	0xF009ECE7  	CALL        _rotateByDegree, 0
0x2752	0xD16E      	BRA         L_lineFollowNormalWorkedForLast466
L_lineFollowNormalWorkedForLast465:
;linefollow.h,451 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x2754	0xA883      	BTFSS       PORTD, 4 
0x2756	0xD00F      	BRA         L_lineFollowNormalWorkedForLast469
0x2758	0xBA83      	BTFSC       PORTD, 5 
0x275A	0xD00D      	BRA         L_lineFollowNormalWorkedForLast469
0x275C	0xBC83      	BTFSC       PORTD, 6 
0x275E	0xD00B      	BRA         L_lineFollowNormalWorkedForLast469
0x2760	0xBE83      	BTFSC       PORTD, 7 
0x2762	0xD009      	BRA         L_lineFollowNormalWorkedForLast469
0x2764	0xB481      	BTFSC       PORTB, 2 
0x2766	0xD007      	BRA         L_lineFollowNormalWorkedForLast469
L__lineFollowNormalWorkedForLast861:
;linefollow.h,453 :: 		turnLeft(FAST_PWM);
0x2768	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x276C	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2770	0xF007EC90  	CALL        _turnLeft, 0
0x2774	0xD15D      	BRA         L_lineFollowNormalWorkedForLast470
L_lineFollowNormalWorkedForLast469:
;linefollow.h,454 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x2776	0xA883      	BTFSS       PORTD, 4 
0x2778	0xD00F      	BRA         L_lineFollowNormalWorkedForLast473
0x277A	0xAA83      	BTFSS       PORTD, 5 
0x277C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast473
0x277E	0xBC83      	BTFSC       PORTD, 6 
0x2780	0xD00B      	BRA         L_lineFollowNormalWorkedForLast473
0x2782	0xBE83      	BTFSC       PORTD, 7 
0x2784	0xD009      	BRA         L_lineFollowNormalWorkedForLast473
0x2786	0xB481      	BTFSC       PORTB, 2 
0x2788	0xD007      	BRA         L_lineFollowNormalWorkedForLast473
L__lineFollowNormalWorkedForLast860:
;linefollow.h,456 :: 		turnLeft(FAST_PWM);
0x278A	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x278E	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2792	0xF007EC90  	CALL        _turnLeft, 0
0x2796	0xD14C      	BRA         L_lineFollowNormalWorkedForLast474
L_lineFollowNormalWorkedForLast473:
;linefollow.h,457 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2798	0xA883      	BTFSS       PORTD, 4 
0x279A	0xD00F      	BRA         L_lineFollowNormalWorkedForLast477
0x279C	0xAA83      	BTFSS       PORTD, 5 
0x279E	0xD00D      	BRA         L_lineFollowNormalWorkedForLast477
0x27A0	0xAC83      	BTFSS       PORTD, 6 
0x27A2	0xD00B      	BRA         L_lineFollowNormalWorkedForLast477
0x27A4	0xBE83      	BTFSC       PORTD, 7 
0x27A6	0xD009      	BRA         L_lineFollowNormalWorkedForLast477
0x27A8	0xB481      	BTFSC       PORTB, 2 
0x27AA	0xD007      	BRA         L_lineFollowNormalWorkedForLast477
L__lineFollowNormalWorkedForLast859:
;linefollow.h,459 :: 		turnLeft(FAST_PWM);
0x27AC	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x27B0	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x27B4	0xF007EC90  	CALL        _turnLeft, 0
0x27B8	0xD13B      	BRA         L_lineFollowNormalWorkedForLast478
L_lineFollowNormalWorkedForLast477:
;linefollow.h,460 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x27BA	0xB883      	BTFSC       PORTD, 4 
0x27BC	0xD00F      	BRA         L_lineFollowNormalWorkedForLast481
0x27BE	0xAA83      	BTFSS       PORTD, 5 
0x27C0	0xD00D      	BRA         L_lineFollowNormalWorkedForLast481
0x27C2	0xBC83      	BTFSC       PORTD, 6 
0x27C4	0xD00B      	BRA         L_lineFollowNormalWorkedForLast481
0x27C6	0xBE83      	BTFSC       PORTD, 7 
0x27C8	0xD009      	BRA         L_lineFollowNormalWorkedForLast481
0x27CA	0xB481      	BTFSC       PORTB, 2 
0x27CC	0xD007      	BRA         L_lineFollowNormalWorkedForLast481
L__lineFollowNormalWorkedForLast858:
;linefollow.h,462 :: 		turnLeft(FAST_PWM);
0x27CE	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x27D2	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x27D6	0xF007EC90  	CALL        _turnLeft, 0
0x27DA	0xD12A      	BRA         L_lineFollowNormalWorkedForLast482
L_lineFollowNormalWorkedForLast481:
;linefollow.h,465 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x27DC	0xB883      	BTFSC       PORTD, 4 
0x27DE	0xD00F      	BRA         L_lineFollowNormalWorkedForLast485
0x27E0	0xBA83      	BTFSC       PORTD, 5 
0x27E2	0xD00D      	BRA         L_lineFollowNormalWorkedForLast485
0x27E4	0xBC83      	BTFSC       PORTD, 6 
0x27E6	0xD00B      	BRA         L_lineFollowNormalWorkedForLast485
0x27E8	0xAE83      	BTFSS       PORTD, 7 
0x27EA	0xD009      	BRA         L_lineFollowNormalWorkedForLast485
0x27EC	0xB481      	BTFSC       PORTB, 2 
0x27EE	0xD007      	BRA         L_lineFollowNormalWorkedForLast485
L__lineFollowNormalWorkedForLast857:
;linefollow.h,467 :: 		turnRight(FAST_PWM);
0x27F0	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x27F4	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x27F8	0xF007EC99  	CALL        _turnRight, 0
0x27FC	0xD119      	BRA         L_lineFollowNormalWorkedForLast486
L_lineFollowNormalWorkedForLast485:
;linefollow.h,468 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x27FE	0xB883      	BTFSC       PORTD, 4 
0x2800	0xD00F      	BRA         L_lineFollowNormalWorkedForLast489
0x2802	0xBA83      	BTFSC       PORTD, 5 
0x2804	0xD00D      	BRA         L_lineFollowNormalWorkedForLast489
0x2806	0xAC83      	BTFSS       PORTD, 6 
0x2808	0xD00B      	BRA         L_lineFollowNormalWorkedForLast489
0x280A	0xAE83      	BTFSS       PORTD, 7 
0x280C	0xD009      	BRA         L_lineFollowNormalWorkedForLast489
0x280E	0xA481      	BTFSS       PORTB, 2 
0x2810	0xD007      	BRA         L_lineFollowNormalWorkedForLast489
L__lineFollowNormalWorkedForLast856:
;linefollow.h,470 :: 		turnRight(FAST_PWM);
0x2812	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2816	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x281A	0xF007EC99  	CALL        _turnRight, 0
0x281E	0xD108      	BRA         L_lineFollowNormalWorkedForLast490
L_lineFollowNormalWorkedForLast489:
;linefollow.h,471 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x2820	0xB883      	BTFSC       PORTD, 4 
0x2822	0xD00F      	BRA         L_lineFollowNormalWorkedForLast493
0x2824	0xBA83      	BTFSC       PORTD, 5 
0x2826	0xD00D      	BRA         L_lineFollowNormalWorkedForLast493
0x2828	0xBC83      	BTFSC       PORTD, 6 
0x282A	0xD00B      	BRA         L_lineFollowNormalWorkedForLast493
0x282C	0xAE83      	BTFSS       PORTD, 7 
0x282E	0xD009      	BRA         L_lineFollowNormalWorkedForLast493
0x2830	0xA481      	BTFSS       PORTB, 2 
0x2832	0xD007      	BRA         L_lineFollowNormalWorkedForLast493
L__lineFollowNormalWorkedForLast855:
;linefollow.h,473 :: 		turnRight(FAST_PWM);
0x2834	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2838	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x283C	0xF007EC99  	CALL        _turnRight, 0
0x2840	0xD0F7      	BRA         L_lineFollowNormalWorkedForLast494
L_lineFollowNormalWorkedForLast493:
;linefollow.h,474 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x2842	0xB883      	BTFSC       PORTD, 4 
0x2844	0xD00F      	BRA         L_lineFollowNormalWorkedForLast497
0x2846	0xBA83      	BTFSC       PORTD, 5 
0x2848	0xD00D      	BRA         L_lineFollowNormalWorkedForLast497
0x284A	0xBC83      	BTFSC       PORTD, 6 
0x284C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast497
0x284E	0xBE83      	BTFSC       PORTD, 7 
0x2850	0xD009      	BRA         L_lineFollowNormalWorkedForLast497
0x2852	0xA481      	BTFSS       PORTB, 2 
0x2854	0xD007      	BRA         L_lineFollowNormalWorkedForLast497
L__lineFollowNormalWorkedForLast854:
;linefollow.h,476 :: 		turnRight(FAST_PWM);
0x2856	0xF196C180  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x285A	0xF197C181  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x285E	0xF007EC99  	CALL        _turnRight, 0
0x2862	0xD0E6      	BRA         L_lineFollowNormalWorkedForLast498
L_lineFollowNormalWorkedForLast497:
;linefollow.h,479 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2864	0xA883      	BTFSS       PORTD, 4 
0x2866	0xD013      	BRA         L_lineFollowNormalWorkedForLast501
0x2868	0xAA83      	BTFSS       PORTD, 5 
0x286A	0xD011      	BRA         L_lineFollowNormalWorkedForLast501
0x286C	0xAC83      	BTFSS       PORTD, 6 
0x286E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast501
0x2870	0xAE83      	BTFSS       PORTD, 7 
0x2872	0xD00D      	BRA         L_lineFollowNormalWorkedForLast501
0x2874	0xB481      	BTFSC       PORTB, 2 
0x2876	0xD00B      	BRA         L_lineFollowNormalWorkedForLast501
L__lineFollowNormalWorkedForLast853:
;linefollow.h,480 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x2878	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x287C	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x2880	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2884	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2888	0xF007EC62  	CALL        _moveForward, 0
0x288C	0xD0D1      	BRA         L_lineFollowNormalWorkedForLast502
L_lineFollowNormalWorkedForLast501:
;linefollow.h,481 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x288E	0xB883      	BTFSC       PORTD, 4 
0x2890	0xD013      	BRA         L_lineFollowNormalWorkedForLast505
0x2892	0xAA83      	BTFSS       PORTD, 5 
0x2894	0xD011      	BRA         L_lineFollowNormalWorkedForLast505
0x2896	0xAC83      	BTFSS       PORTD, 6 
0x2898	0xD00F      	BRA         L_lineFollowNormalWorkedForLast505
0x289A	0xAE83      	BTFSS       PORTD, 7 
0x289C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast505
0x289E	0xA481      	BTFSS       PORTB, 2 
0x28A0	0xD00B      	BRA         L_lineFollowNormalWorkedForLast505
L__lineFollowNormalWorkedForLast852:
;linefollow.h,482 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x28A2	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x28A6	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x28AA	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x28AE	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x28B2	0xF007EC62  	CALL        _moveForward, 0
0x28B6	0xD0BC      	BRA         L_lineFollowNormalWorkedForLast506
L_lineFollowNormalWorkedForLast505:
;linefollow.h,483 :: 		else if( Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==1 && Sensor7==1 && Sensor8==1)
0x28B8	0xA681      	BTFSS       PORTB, 3 
0x28BA	0xD017      	BRA         L_lineFollowNormalWorkedForLast509
0x28BC	0xA883      	BTFSS       PORTD, 4 
0x28BE	0xD015      	BRA         L_lineFollowNormalWorkedForLast509
0x28C0	0xAA83      	BTFSS       PORTD, 5 
0x28C2	0xD013      	BRA         L_lineFollowNormalWorkedForLast509
0x28C4	0xBC83      	BTFSC       PORTD, 6 
0x28C6	0xD011      	BRA         L_lineFollowNormalWorkedForLast509
0x28C8	0xAE83      	BTFSS       PORTD, 7 
0x28CA	0xD00F      	BRA         L_lineFollowNormalWorkedForLast509
0x28CC	0xA481      	BTFSS       PORTB, 2 
0x28CE	0xD00D      	BRA         L_lineFollowNormalWorkedForLast509
0x28D0	0xAC81      	BTFSS       PORTB, 6 
0x28D2	0xD00B      	BRA         L_lineFollowNormalWorkedForLast509
L__lineFollowNormalWorkedForLast851:
;linefollow.h,484 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast510:
0x28D4	0xBA81      	BTFSC       PORTB, 5 
0x28D6	0xD008      	BRA         L_lineFollowNormalWorkedForLast511
;linefollow.h,485 :: 		rotateAntiClockwise(255);
0x28D8	0x0EFF      	MOVLW       255
0x28DA	0x0101      	MOVLB       1
0x28DC	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x28DE	0x0E00      	MOVLW       0
0x28E0	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x28E2	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x28E6	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast510
L_lineFollowNormalWorkedForLast511:
0x28E8	0xD0A3      	BRA         L_lineFollowNormalWorkedForLast512
L_lineFollowNormalWorkedForLast509:
;linefollow.h,486 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==1 && Sensor9==1)
0x28EA	0xB881      	BTFSC       PORTB, 4 
0x28EC	0xD01B      	BRA         L_lineFollowNormalWorkedForLast515
0x28EE	0xB681      	BTFSC       PORTB, 3 
0x28F0	0xD019      	BRA         L_lineFollowNormalWorkedForLast515
0x28F2	0xB883      	BTFSC       PORTD, 4 
0x28F4	0xD017      	BRA         L_lineFollowNormalWorkedForLast515
0x28F6	0xBA83      	BTFSC       PORTD, 5 
0x28F8	0xD015      	BRA         L_lineFollowNormalWorkedForLast515
0x28FA	0xBC83      	BTFSC       PORTD, 6 
0x28FC	0xD013      	BRA         L_lineFollowNormalWorkedForLast515
0x28FE	0xBE83      	BTFSC       PORTD, 7 
0x2900	0xD011      	BRA         L_lineFollowNormalWorkedForLast515
0x2902	0xB481      	BTFSC       PORTB, 2 
0x2904	0xD00F      	BRA         L_lineFollowNormalWorkedForLast515
0x2906	0xAC81      	BTFSS       PORTB, 6 
0x2908	0xD00D      	BRA         L_lineFollowNormalWorkedForLast515
0x290A	0xAE81      	BTFSS       PORTB, 7 
0x290C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast515
L__lineFollowNormalWorkedForLast850:
;linefollow.h,487 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast516:
0x290E	0xBA81      	BTFSC       PORTB, 5 
0x2910	0xD008      	BRA         L_lineFollowNormalWorkedForLast517
;linefollow.h,488 :: 		rotateClockwise(255);
0x2912	0x0EFF      	MOVLW       255
0x2914	0x0101      	MOVLB       1
0x2916	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x2918	0x0E00      	MOVLW       0
0x291A	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x291C	0xF007EC55  	CALL        _rotateClockwise, 0
0x2920	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast516
L_lineFollowNormalWorkedForLast517:
0x2922	0xD086      	BRA         L_lineFollowNormalWorkedForLast518
L_lineFollowNormalWorkedForLast515:
;linefollow.h,489 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x2924	0xA881      	BTFSS       PORTB, 4 
0x2926	0xD01B      	BRA         L_lineFollowNormalWorkedForLast521
0x2928	0xA681      	BTFSS       PORTB, 3 
0x292A	0xD019      	BRA         L_lineFollowNormalWorkedForLast521
0x292C	0xB883      	BTFSC       PORTD, 4 
0x292E	0xD017      	BRA         L_lineFollowNormalWorkedForLast521
0x2930	0xBA83      	BTFSC       PORTD, 5 
0x2932	0xD015      	BRA         L_lineFollowNormalWorkedForLast521
0x2934	0xBC83      	BTFSC       PORTD, 6 
0x2936	0xD013      	BRA         L_lineFollowNormalWorkedForLast521
0x2938	0xBE83      	BTFSC       PORTD, 7 
0x293A	0xD011      	BRA         L_lineFollowNormalWorkedForLast521
0x293C	0xB481      	BTFSC       PORTB, 2 
0x293E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast521
0x2940	0xBC81      	BTFSC       PORTB, 6 
0x2942	0xD00D      	BRA         L_lineFollowNormalWorkedForLast521
0x2944	0xBE81      	BTFSC       PORTB, 7 
0x2946	0xD00B      	BRA         L_lineFollowNormalWorkedForLast521
L__lineFollowNormalWorkedForLast849:
;linefollow.h,490 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast522:
0x2948	0xBA81      	BTFSC       PORTB, 5 
0x294A	0xD008      	BRA         L_lineFollowNormalWorkedForLast523
;linefollow.h,491 :: 		rotateAntiClockwise(255);
0x294C	0x0EFF      	MOVLW       255
0x294E	0x0101      	MOVLB       1
0x2950	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x2952	0x0E00      	MOVLW       0
0x2954	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x2956	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x295A	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast522
L_lineFollowNormalWorkedForLast523:
0x295C	0xD069      	BRA         L_lineFollowNormalWorkedForLast524
L_lineFollowNormalWorkedForLast521:
;linefollow.h,494 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x295E	0xB883      	BTFSC       PORTD, 4 
0x2960	0xD013      	BRA         L_lineFollowNormalWorkedForLast527
0x2962	0xAA83      	BTFSS       PORTD, 5 
0x2964	0xD011      	BRA         L_lineFollowNormalWorkedForLast527
0x2966	0xAC83      	BTFSS       PORTD, 6 
0x2968	0xD00F      	BRA         L_lineFollowNormalWorkedForLast527
0x296A	0xBE83      	BTFSC       PORTD, 7 
0x296C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast527
0x296E	0xB481      	BTFSC       PORTB, 2 
0x2970	0xD00B      	BRA         L_lineFollowNormalWorkedForLast527
L__lineFollowNormalWorkedForLast848:
;linefollow.h,495 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x2972	0xF19AC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x2976	0xF19BC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x297A	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x297E	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2982	0xF007EC62  	CALL        _moveForward, 0
0x2986	0xD054      	BRA         L_lineFollowNormalWorkedForLast528
L_lineFollowNormalWorkedForLast527:
;linefollow.h,496 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2988	0xB883      	BTFSC       PORTD, 4 
0x298A	0xD013      	BRA         L_lineFollowNormalWorkedForLast531
0x298C	0xAA83      	BTFSS       PORTD, 5 
0x298E	0xD011      	BRA         L_lineFollowNormalWorkedForLast531
0x2990	0xAC83      	BTFSS       PORTD, 6 
0x2992	0xD00F      	BRA         L_lineFollowNormalWorkedForLast531
0x2994	0xAE83      	BTFSS       PORTD, 7 
0x2996	0xD00D      	BRA         L_lineFollowNormalWorkedForLast531
0x2998	0xB481      	BTFSC       PORTB, 2 
0x299A	0xD00B      	BRA         L_lineFollowNormalWorkedForLast531
L__lineFollowNormalWorkedForLast847:
;linefollow.h,497 :: 		moveForward(FAST_PWM,FAST_PWM);
0x299C	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x29A0	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x29A4	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x29A8	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x29AC	0xF007EC62  	CALL        _moveForward, 0
0x29B0	0xD03F      	BRA         L_lineFollowNormalWorkedForLast532
L_lineFollowNormalWorkedForLast531:
;linefollow.h,498 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x29B2	0xB883      	BTFSC       PORTD, 4 
0x29B4	0xD013      	BRA         L_lineFollowNormalWorkedForLast535
0x29B6	0xBA83      	BTFSC       PORTD, 5 
0x29B8	0xD011      	BRA         L_lineFollowNormalWorkedForLast535
0x29BA	0xAC83      	BTFSS       PORTD, 6 
0x29BC	0xD00F      	BRA         L_lineFollowNormalWorkedForLast535
0x29BE	0xBE83      	BTFSC       PORTD, 7 
0x29C0	0xD00D      	BRA         L_lineFollowNormalWorkedForLast535
0x29C2	0xB481      	BTFSC       PORTB, 2 
0x29C4	0xD00B      	BRA         L_lineFollowNormalWorkedForLast535
L__lineFollowNormalWorkedForLast846:
;linefollow.h,499 :: 		moveForward(FAST_PWM,FAST_PWM);
0x29C6	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x29CA	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x29CE	0xF19CC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x29D2	0xF19DC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x29D6	0xF007EC62  	CALL        _moveForward, 0
0x29DA	0xD02A      	BRA         L_lineFollowNormalWorkedForLast536
L_lineFollowNormalWorkedForLast535:
;linefollow.h,500 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x29DC	0xB883      	BTFSC       PORTD, 4 
0x29DE	0xD013      	BRA         L_lineFollowNormalWorkedForLast539
0x29E0	0xBA83      	BTFSC       PORTD, 5 
0x29E2	0xD011      	BRA         L_lineFollowNormalWorkedForLast539
0x29E4	0xAC83      	BTFSS       PORTD, 6 
0x29E6	0xD00F      	BRA         L_lineFollowNormalWorkedForLast539
0x29E8	0xAE83      	BTFSS       PORTD, 7 
0x29EA	0xD00D      	BRA         L_lineFollowNormalWorkedForLast539
0x29EC	0xB481      	BTFSC       PORTB, 2 
0x29EE	0xD00B      	BRA         L_lineFollowNormalWorkedForLast539
L__lineFollowNormalWorkedForLast845:
;linefollow.h,501 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x29F0	0xF19AC180  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x29F4	0xF19BC181  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x29F8	0xF19CC182  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x29FC	0xF19DC183  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x2A00	0xF007EC62  	CALL        _moveForward, 0
0x2A04	0xD015      	BRA         L_lineFollowNormalWorkedForLast540
L_lineFollowNormalWorkedForLast539:
;linefollow.h,504 :: 		else if(isAllWhite()){
0x2A06	0xF008EC86  	CALL        _isAllWhite, 0
0x2A0A	0x5000      	MOVF        R0, 0 
0x2A0C	0x1001      	IORWF       R1, 0 
0x2A0E	0xE003      	BZ          L_lineFollowNormalWorkedForLast541
;linefollow.h,507 :: 		sendSensorStatus();
0x2A10	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,508 :: 		}
0x2A14	0xD00D      	BRA         L_lineFollowNormalWorkedForLast542
L_lineFollowNormalWorkedForLast541:
0x2A16	0x0101      	MOVLB       1
;linefollow.h,511 :: 		moveForward(205,200);
0x2A18	0x0ECD      	MOVLW       205
0x2A1A	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2A1C	0x0E00      	MOVLW       0
0x2A1E	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x2A20	0x0EC8      	MOVLW       200
0x2A22	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2A24	0x0E00      	MOVLW       0
0x2A26	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2A28	0xF007EC62  	CALL        _moveForward, 0
;linefollow.h,512 :: 		sendSensorStatus();
0x2A2C	0xF008ECC3  	CALL        _sendSensorStatus, 0
;linefollow.h,514 :: 		}
L_lineFollowNormalWorkedForLast542:
L_lineFollowNormalWorkedForLast540:
L_lineFollowNormalWorkedForLast536:
L_lineFollowNormalWorkedForLast532:
L_lineFollowNormalWorkedForLast528:
L_lineFollowNormalWorkedForLast524:
L_lineFollowNormalWorkedForLast518:
L_lineFollowNormalWorkedForLast512:
L_lineFollowNormalWorkedForLast506:
L_lineFollowNormalWorkedForLast502:
L_lineFollowNormalWorkedForLast498:
L_lineFollowNormalWorkedForLast494:
L_lineFollowNormalWorkedForLast490:
L_lineFollowNormalWorkedForLast486:
L_lineFollowNormalWorkedForLast482:
L_lineFollowNormalWorkedForLast478:
L_lineFollowNormalWorkedForLast474:
L_lineFollowNormalWorkedForLast470:
L_lineFollowNormalWorkedForLast466:
L_lineFollowNormalWorkedForLast462:
L_lineFollowNormalWorkedForLast458:
L_lineFollowNormalWorkedForLast454:
L_lineFollowNormalWorkedForLast450:
L_lineFollowNormalWorkedForLast446:
;linefollow.h,515 :: 		}
L_lineFollowNormalWorkedForLast442:
;linefollow.h,516 :: 		}
0x2A30	0x0012      	RETURN      0
; end of _lineFollowNormalWorkedForLast
_main:
0x2A32	0xF017EC02  	CALL        11780, 0
;Main 6.0V.c,61 :: 		void main() {
;Main 6.0V.c,62 :: 		configure();
0x2A36	0xF00BEC67  	CALL        _configure, 0
;Main 6.0V.c,63 :: 		setPID();
0x2A3A	0xF010EC12  	CALL        _setPID, 0
;Main 6.0V.c,64 :: 		sendText("Starting...");
0x2A3E	0x0E75      	MOVLW       ?lstr34_Main_326.0V
0x2A40	0x0101      	MOVLB       1
0x2A42	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2A44	0x0E00      	MOVLW       hi_addr(?lstr34_Main_326.0V)
0x2A46	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2A48	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,76 :: 		LEVEL1_STATE = NOT_REACHED;
0x2A4C	0x6B86      	CLRF        _LEVEL1_STATE, 1
0x2A4E	0x6B87      	CLRF        _LEVEL1_STATE+1, 1
;Main 6.0V.c,77 :: 		sendText("Starting Block  ");
0x2A50	0x0E5F      	MOVLW       ?lstr35_Main_326.0V
0x2A52	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2A54	0x0E00      	MOVLW       hi_addr(?lstr35_Main_326.0V)
0x2A56	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2A58	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,78 :: 		LEVEL = 0;
0x2A5C	0x6B84      	CLRF        _LEVEL, 1
0x2A5E	0x6B85      	CLRF        _LEVEL+1, 1
;Main 6.0V.c,80 :: 		while(isAllWhite())
L_main682:
0x2A60	0xF008EC86  	CALL        _isAllWhite, 0
0x2A64	0x5000      	MOVF        R0, 0 
0x2A66	0x1001      	IORWF       R1, 0 
0x2A68	0xE003      	BZ          L_main683
;Main 6.0V.c,81 :: 		moveStraightSlow();
0x2A6A	0xF008EC7B  	CALL        _moveStraightSlow, 0
0x2A6E	0xD7F8      	BRA         L_main682
L_main683:
;Main 6.0V.c,82 :: 		delay_ms(10);
0x2A70	0x0E41      	MOVLW       65
0x2A72	0x6E0C      	MOVWF       R12, 0
0x2A74	0x0EEE      	MOVLW       238
0x2A76	0x6E0D      	MOVWF       R13, 0
L_main684:
0x2A78	0x2E0D      	DECFSZ      R13, 1, 0
0x2A7A	0xD7FE      	BRA         L_main684
0x2A7C	0x2E0C      	DECFSZ      R12, 1, 0
0x2A7E	0xD7FC      	BRA         L_main684
0x2A80	0x0000      	NOP
;Main 6.0V.c,83 :: 		LEVEL = 1;
0x2A82	0x0E01      	MOVLW       1
0x2A84	0x0101      	MOVLB       1
0x2A86	0x6F84      	MOVWF       _LEVEL, 1
0x2A88	0x0E00      	MOVLW       0
0x2A8A	0x6F85      	MOVWF       _LEVEL+1, 1
;Main 6.0V.c,84 :: 		sendText("Level 1 Starting  ");
0x2A8C	0x0E27      	MOVLW       ?lstr36_Main_326.0V
0x2A8E	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2A90	0x0E00      	MOVLW       hi_addr(?lstr36_Main_326.0V)
0x2A92	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2A94	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,85 :: 		LEVEL1_STATE = REACHED;
0x2A98	0x0E01      	MOVLW       1
0x2A9A	0x6F86      	MOVWF       _LEVEL1_STATE, 1
0x2A9C	0x0E00      	MOVLW       0
0x2A9E	0x6F87      	MOVWF       _LEVEL1_STATE+1, 1
;Main 6.0V.c,86 :: 		stop();
0x2AA0	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,90 :: 		moveForward(205,200);
0x2AA4	0x0ECD      	MOVLW       205
0x2AA6	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2AA8	0x0E00      	MOVLW       0
0x2AAA	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x2AAC	0x0EC8      	MOVLW       200
0x2AAE	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2AB0	0x0E00      	MOVLW       0
0x2AB2	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2AB4	0xF007EC62  	CALL        _moveForward, 0
;Main 6.0V.c,91 :: 		delay_ms(100);
0x2AB8	0x0E03      	MOVLW       3
0x2ABA	0x6E0B      	MOVWF       R11, 0
0x2ABC	0x0E8A      	MOVLW       138
0x2ABE	0x6E0C      	MOVWF       R12, 0
0x2AC0	0x0E55      	MOVLW       85
0x2AC2	0x6E0D      	MOVWF       R13, 0
L_main685:
0x2AC4	0x2E0D      	DECFSZ      R13, 1, 0
0x2AC6	0xD7FE      	BRA         L_main685
0x2AC8	0x2E0C      	DECFSZ      R12, 1, 0
0x2ACA	0xD7FC      	BRA         L_main685
0x2ACC	0x2E0B      	DECFSZ      R11, 1, 0
0x2ACE	0xD7FA      	BRA         L_main685
0x2AD0	0x0000      	NOP
0x2AD2	0x0000      	NOP
;Main 6.0V.c,92 :: 		while(!isAllBlack()){
L_main686:
0x2AD4	0xF009ECBE  	CALL        _isAllBlack, 0
0x2AD8	0x5000      	MOVF        R0, 0 
0x2ADA	0x1001      	IORWF       R1, 0 
0x2ADC	0xE11B      	BNZ         L_main687
;Main 6.0V.c,94 :: 		if( Scout==1 &&(Sensor3==1 || Sensor4==1 || Sensor5==1 || Sensor6==1 || Sensor7==1) && Sensor1==0 && Sensor2==0 && Sensor8==0 && Sensor9==0)
0x2ADE	0xAA81      	BTFSS       PORTB, 5 
0x2AE0	0xD016      	BRA         L_main692
0x2AE2	0xB883      	BTFSC       PORTD, 4 
0x2AE4	0xD009      	BRA         L__main909
0x2AE6	0xBA83      	BTFSC       PORTD, 5 
0x2AE8	0xD007      	BRA         L__main909
0x2AEA	0xBC83      	BTFSC       PORTD, 6 
0x2AEC	0xD005      	BRA         L__main909
0x2AEE	0xBE83      	BTFSC       PORTD, 7 
0x2AF0	0xD003      	BRA         L__main909
0x2AF2	0xB481      	BTFSC       PORTB, 2 
0x2AF4	0xD001      	BRA         L__main909
0x2AF6	0xD00B      	BRA         L_main692
L__main909:
0x2AF8	0xB881      	BTFSC       PORTB, 4 
0x2AFA	0xD009      	BRA         L_main692
0x2AFC	0xB681      	BTFSC       PORTB, 3 
0x2AFE	0xD007      	BRA         L_main692
0x2B00	0xBC81      	BTFSC       PORTB, 6 
0x2B02	0xD005      	BRA         L_main692
0x2B04	0xBE81      	BTFSC       PORTB, 7 
0x2B06	0xD003      	BRA         L_main692
L__main908:
;Main 6.0V.c,95 :: 		lineFollowPID();
0x2B08	0xF010EC52  	CALL        _lineFollowPID, 0
0x2B0C	0xD002      	BRA         L_main693
L_main692:
;Main 6.0V.c,97 :: 		lineFollowNormalWorked();
0x2B0E	0xF00BECF5  	CALL        _lineFollowNormalWorked, 0
L_main693:
;Main 6.0V.c,98 :: 		}
0x2B12	0xD7E0      	BRA         L_main686
L_main687:
;Main 6.0V.c,99 :: 		stop();
0x2B14	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,100 :: 		sendText("  End of Level 1. Level 2 Starting  ");
0x2B18	0x0E3A      	MOVLW       ?lstr37_Main_326.0V
0x2B1A	0x0101      	MOVLB       1
0x2B1C	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2B1E	0x0E00      	MOVLW       hi_addr(?lstr37_Main_326.0V)
0x2B20	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2B22	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,101 :: 		LEVEL1_STATE = COMPLETED;
0x2B26	0x0E02      	MOVLW       2
0x2B28	0x6F86      	MOVWF       _LEVEL1_STATE, 1
0x2B2A	0x0E00      	MOVLW       0
0x2B2C	0x6F87      	MOVWF       _LEVEL1_STATE+1, 1
;Main 6.0V.c,102 :: 		LEVEL2_STATE = REACHED;
0x2B2E	0x0E01      	MOVLW       1
0x2B30	0x6F7E      	MOVWF       _LEVEL2_STATE, 1
0x2B32	0x0E00      	MOVLW       0
0x2B34	0x6F7F      	MOVWF       _LEVEL2_STATE+1, 1
;Main 6.0V.c,103 :: 		LEVEL = 2;
0x2B36	0x0E02      	MOVLW       2
0x2B38	0x6F84      	MOVWF       _LEVEL, 1
0x2B3A	0x0E00      	MOVLW       0
0x2B3C	0x6F85      	MOVWF       _LEVEL+1, 1
;Main 6.0V.c,107 :: 		while(!isAllWhite() && LEVEL2_STATE != COMPLETED){
L_main694:
0x2B3E	0xF008EC86  	CALL        _isAllWhite, 0
0x2B42	0x5000      	MOVF        R0, 0 
0x2B44	0x1001      	IORWF       R1, 0 
0x2B46	0xE10A      	BNZ         L_main695
0x2B48	0x0E00      	MOVLW       0
0x2B4A	0x0101      	MOVLB       1
0x2B4C	0x197F      	XORWF       _LEVEL2_STATE+1, 0, 1
0x2B4E	0xE102      	BNZ         L__main965
0x2B50	0x0E02      	MOVLW       2
0x2B52	0x197E      	XORWF       _LEVEL2_STATE, 0, 1
L__main965:
0x2B54	0xE003      	BZ          L_main695
L__main907:
;Main 6.0V.c,108 :: 		goThroughObstaclesJay();
0x2B56	0xF00FEC34  	CALL        _goThroughObstaclesJay, 0
;Main 6.0V.c,109 :: 		}
0x2B5A	0xD7F1      	BRA         L_main694
L_main695:
;Main 6.0V.c,111 :: 		stop();
0x2B5C	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,112 :: 		sendText("  End of Level 2. Level 3 Starting  ");
0x2B60	0x0E81      	MOVLW       ?lstr38_Main_326.0V
0x2B62	0x0101      	MOVLB       1
0x2B64	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2B66	0x0E00      	MOVLW       hi_addr(?lstr38_Main_326.0V)
0x2B68	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2B6A	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,113 :: 		LEVEL2_STATE = COMPLETED;
0x2B6E	0x0E02      	MOVLW       2
0x2B70	0x6F7E      	MOVWF       _LEVEL2_STATE, 1
0x2B72	0x0E00      	MOVLW       0
0x2B74	0x6F7F      	MOVWF       _LEVEL2_STATE+1, 1
;Main 6.0V.c,114 :: 		LEVEL3_STATE = REACHED;
0x2B76	0x0E01      	MOVLW       1
0x2B78	0x6F88      	MOVWF       _LEVEL3_STATE, 1
0x2B7A	0x0E00      	MOVLW       0
0x2B7C	0x6F89      	MOVWF       _LEVEL3_STATE+1, 1
;Main 6.0V.c,115 :: 		LEVEL = 3;
0x2B7E	0x0E03      	MOVLW       3
0x2B80	0x6F84      	MOVWF       _LEVEL, 1
0x2B82	0x0E00      	MOVLW       0
0x2B84	0x6F85      	MOVWF       _LEVEL+1, 1
;Main 6.0V.c,119 :: 		level3Aligning();
0x2B86	0xF00BEC9B  	CALL        _level3Aligning, 0
;Main 6.0V.c,123 :: 		moveStraightSlow();
0x2B8A	0xF008EC7B  	CALL        _moveStraightSlow, 0
;Main 6.0V.c,124 :: 		delay_ms(2000);
0x2B8E	0x0E33      	MOVLW       51
0x2B90	0x6E0B      	MOVWF       R11, 0
0x2B92	0x0EBB      	MOVLW       187
0x2B94	0x6E0C      	MOVWF       R12, 0
0x2B96	0x0EDF      	MOVLW       223
0x2B98	0x6E0D      	MOVWF       R13, 0
L_main698:
0x2B9A	0x2E0D      	DECFSZ      R13, 1, 0
0x2B9C	0xD7FE      	BRA         L_main698
0x2B9E	0x2E0C      	DECFSZ      R12, 1, 0
0x2BA0	0xD7FC      	BRA         L_main698
0x2BA2	0x2E0B      	DECFSZ      R11, 1, 0
0x2BA4	0xD7FA      	BRA         L_main698
0x2BA6	0x0000      	NOP
0x2BA8	0x0000      	NOP
;Main 6.0V.c,126 :: 		rotateByDegree(-90);
0x2BAA	0x0EA6      	MOVLW       166
0x2BAC	0x0101      	MOVLB       1
0x2BAE	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2BB0	0x0EFF      	MOVLW       255
0x2BB2	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2BB4	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,127 :: 		delay_ms(100);
0x2BB8	0x0E03      	MOVLW       3
0x2BBA	0x6E0B      	MOVWF       R11, 0
0x2BBC	0x0E8A      	MOVLW       138
0x2BBE	0x6E0C      	MOVWF       R12, 0
0x2BC0	0x0E55      	MOVLW       85
0x2BC2	0x6E0D      	MOVWF       R13, 0
L_main699:
0x2BC4	0x2E0D      	DECFSZ      R13, 1, 0
0x2BC6	0xD7FE      	BRA         L_main699
0x2BC8	0x2E0C      	DECFSZ      R12, 1, 0
0x2BCA	0xD7FC      	BRA         L_main699
0x2BCC	0x2E0B      	DECFSZ      R11, 1, 0
0x2BCE	0xD7FA      	BRA         L_main699
0x2BD0	0x0000      	NOP
0x2BD2	0x0000      	NOP
;Main 6.0V.c,128 :: 		while(!isAllBlack()){
L_main700:
0x2BD4	0xF009ECBE  	CALL        _isAllBlack, 0
0x2BD8	0x5000      	MOVF        R0, 0 
0x2BDA	0x1001      	IORWF       R1, 0 
0x2BDC	0xA4D8      	BTFSS       STATUS, 2 
0x2BDE	0xD075      	BRA         L_main701
;Main 6.0V.c,130 :: 		if(!isAllWhite()){
0x2BE0	0xF008EC86  	CALL        _isAllWhite, 0
0x2BE4	0x5000      	MOVF        R0, 0 
0x2BE6	0x1001      	IORWF       R1, 0 
0x2BE8	0xE12B      	BNZ         L_main702
;Main 6.0V.c,131 :: 		sendText("got a arrow..  ");
0x2BEA	0x0EA6      	MOVLW       ?lstr39_Main_326.0V
0x2BEC	0x0101      	MOVLB       1
0x2BEE	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2BF0	0x0E00      	MOVLW       hi_addr(?lstr39_Main_326.0V)
0x2BF2	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2BF4	0xF007EC6F  	CALL        _sendText, 0
;Main 6.0V.c,132 :: 		lineFollowNormalWorkedForLast();
0x2BF8	0xF011ECD2  	CALL        _lineFollowNormalWorkedForLast, 0
;Main 6.0V.c,133 :: 		sendSensorStatus();
0x2BFC	0xF008ECC3  	CALL        _sendSensorStatus, 0
;Main 6.0V.c,134 :: 		if(( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)){
0x2C00	0xB881      	BTFSC       PORTB, 4 
0x2C02	0xD01D      	BRA         L_main705
0x2C04	0xB681      	BTFSC       PORTB, 3 
0x2C06	0xD01B      	BRA         L_main705
0x2C08	0xB883      	BTFSC       PORTD, 4 
0x2C0A	0xD019      	BRA         L_main705
0x2C0C	0xBA83      	BTFSC       PORTD, 5 
0x2C0E	0xD017      	BRA         L_main705
0x2C10	0xAC83      	BTFSS       PORTD, 6 
0x2C12	0xD015      	BRA         L_main705
0x2C14	0xBE83      	BTFSC       PORTD, 7 
0x2C16	0xD013      	BRA         L_main705
0x2C18	0xB481      	BTFSC       PORTB, 2 
0x2C1A	0xD011      	BRA         L_main705
0x2C1C	0xBC81      	BTFSC       PORTB, 6 
0x2C1E	0xD00F      	BRA         L_main705
0x2C20	0xBE81      	BTFSC       PORTB, 7 
0x2C22	0xD00D      	BRA         L_main705
L__main906:
;Main 6.0V.c,135 :: 		while(Sensor5==1)
L_main706:
0x2C24	0xAC83      	BTFSS       PORTD, 6 
0x2C26	0xD003      	BRA         L_main707
;Main 6.0V.c,136 :: 		moveStraightSlow();
0x2C28	0xF008EC7B  	CALL        _moveStraightSlow, 0
0x2C2C	0xD7FB      	BRA         L_main706
L_main707:
;Main 6.0V.c,137 :: 		while(isAllWhite())
L_main708:
0x2C2E	0xF008EC86  	CALL        _isAllWhite, 0
0x2C32	0x5000      	MOVF        R0, 0 
0x2C34	0x1001      	IORWF       R1, 0 
0x2C36	0xE003      	BZ          L_main709
;Main 6.0V.c,138 :: 		moveStraightSlow();
0x2C38	0xF008EC7B  	CALL        _moveStraightSlow, 0
0x2C3C	0xD7F8      	BRA         L_main708
L_main709:
;Main 6.0V.c,139 :: 		}
L_main705:
;Main 6.0V.c,140 :: 		}
0x2C3E	0xD002      	BRA         L_main710
L_main702:
;Main 6.0V.c,142 :: 		moveStraightSlow();
0x2C40	0xF008EC7B  	CALL        _moveStraightSlow, 0
L_main710:
;Main 6.0V.c,144 :: 		if(getDistanceSonar2('M') < 5){
0x2C44	0x0E4D      	MOVLW       77
0x2C46	0x0101      	MOVLB       1
0x2C48	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x2C4A	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x2C4E	0x0E05      	MOVLW       5
0x2C50	0x5C00      	SUBWF       R0, 0 
0x2C52	0xE232      	BC          L_main711
;Main 6.0V.c,145 :: 		rotateByDegree(90);
0x2C54	0x0E5A      	MOVLW       90
0x2C56	0x0101      	MOVLB       1
0x2C58	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2C5A	0x0E00      	MOVLW       0
0x2C5C	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2C5E	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,146 :: 		delay_ms(100);
0x2C62	0x0E03      	MOVLW       3
0x2C64	0x6E0B      	MOVWF       R11, 0
0x2C66	0x0E8A      	MOVLW       138
0x2C68	0x6E0C      	MOVWF       R12, 0
0x2C6A	0x0E55      	MOVLW       85
0x2C6C	0x6E0D      	MOVWF       R13, 0
L_main712:
0x2C6E	0x2E0D      	DECFSZ      R13, 1, 0
0x2C70	0xD7FE      	BRA         L_main712
0x2C72	0x2E0C      	DECFSZ      R12, 1, 0
0x2C74	0xD7FC      	BRA         L_main712
0x2C76	0x2E0B      	DECFSZ      R11, 1, 0
0x2C78	0xD7FA      	BRA         L_main712
0x2C7A	0x0000      	NOP
0x2C7C	0x0000      	NOP
;Main 6.0V.c,147 :: 		rotateByDegree(90);
0x2C7E	0x0E5A      	MOVLW       90
0x2C80	0x0101      	MOVLB       1
0x2C82	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2C84	0x0E00      	MOVLW       0
0x2C86	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2C88	0xF009ECE7  	CALL        _rotateByDegree, 0
;Main 6.0V.c,148 :: 		delay_ms(100);
0x2C8C	0x0E03      	MOVLW       3
0x2C8E	0x6E0B      	MOVWF       R11, 0
0x2C90	0x0E8A      	MOVLW       138
0x2C92	0x6E0C      	MOVWF       R12, 0
0x2C94	0x0E55      	MOVLW       85
0x2C96	0x6E0D      	MOVWF       R13, 0
L_main713:
0x2C98	0x2E0D      	DECFSZ      R13, 1, 0
0x2C9A	0xD7FE      	BRA         L_main713
0x2C9C	0x2E0C      	DECFSZ      R12, 1, 0
0x2C9E	0xD7FC      	BRA         L_main713
0x2CA0	0x2E0B      	DECFSZ      R11, 1, 0
0x2CA2	0xD7FA      	BRA         L_main713
0x2CA4	0x0000      	NOP
0x2CA6	0x0000      	NOP
;Main 6.0V.c,149 :: 		delay_ms(1);
0x2CA8	0x0E07      	MOVLW       7
0x2CAA	0x6E0C      	MOVWF       R12, 0
0x2CAC	0x0E7D      	MOVLW       125
0x2CAE	0x6E0D      	MOVWF       R13, 0
L_main714:
0x2CB0	0x2E0D      	DECFSZ      R13, 1, 0
0x2CB2	0xD7FE      	BRA         L_main714
0x2CB4	0x2E0C      	DECFSZ      R12, 1, 0
0x2CB6	0xD7FC      	BRA         L_main714
;Main 6.0V.c,150 :: 		}
L_main711:
;Main 6.0V.c,151 :: 		delay_ms(1);
0x2CB8	0x0E07      	MOVLW       7
0x2CBA	0x6E0C      	MOVWF       R12, 0
0x2CBC	0x0E7D      	MOVLW       125
0x2CBE	0x6E0D      	MOVWF       R13, 0
L_main715:
0x2CC0	0x2E0D      	DECFSZ      R13, 1, 0
0x2CC2	0xD7FE      	BRA         L_main715
0x2CC4	0x2E0C      	DECFSZ      R12, 1, 0
0x2CC6	0xD7FC      	BRA         L_main715
;Main 6.0V.c,152 :: 		}
0x2CC8	0xD785      	BRA         L_main700
L_main701:
;Main 6.0V.c,154 :: 		stop();
0x2CCA	0xF007EC76  	CALL        _stop, 0
;Main 6.0V.c,157 :: 		}
0x2CCE	0xD7FF      	BRA         $+0
; end of _main
0x2E04	0xF015EE10  	LFSR        1, 21
0x2E08	0x0E33      	MOVLW       51
0x2E0A	0x6E00      	MOVWF       R0 
0x2E0C	0x0E02      	MOVLW       2
0x2E0E	0x6E01      	MOVWF       R1 
0x2E10	0x0ED0      	MOVLW       208
0x2E12	0x6EF6      	MOVWF       4086 
0x2E14	0x0E2C      	MOVLW       44
0x2E16	0x6EF7      	MOVWF       TBLPTRH 
0x2E18	0x0E00      	MOVLW       0
0x2E1A	0x6EF8      	MOVWF       TBLPTRU 
0x2E1C	0xF00BEC5F  	CALL        5822, 0
0x2E20	0x0012      	RETURN      0
;Main 6.0V.c,0 :: ?ICS_debugText
0x2CD0	0x00FB ;?ICS_debugText+0
; end of ?ICS_debugText
;Main 6.0V.c,0 :: ?ICS?lstr3_Main_326.0V
0x2CD2	0x0031 ;?ICS?lstr3_Main_326.0V+0
; end of ?ICS?lstr3_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr4_Main_326.0V
0x2CD4	0x0030 ;?ICS?lstr4_Main_326.0V+0
; end of ?ICS?lstr4_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr8_Main_326.0V
0x2CD6	0x0030 ;?ICS?lstr8_Main_326.0V+0
; end of ?ICS?lstr8_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr9_Main_326.0V
0x2CD8	0x0031 ;?ICS?lstr9_Main_326.0V+0
; end of ?ICS?lstr9_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr7_Main_326.0V
0x2CDA	0x0031 ;?ICS?lstr7_Main_326.0V+0
; end of ?ICS?lstr7_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr5_Main_326.0V
0x2CDC	0x0031 ;?ICS?lstr5_Main_326.0V+0
; end of ?ICS?lstr5_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr6_Main_326.0V
0x2CDE	0x0030 ;?ICS?lstr6_Main_326.0V+0
; end of ?ICS?lstr6_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr10_Main_326.0V
0x2CE0	0x0030 ;?ICS?lstr10_Main_326.0V+0
; end of ?ICS?lstr10_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr36_Main_326.0V
0x2CE2	0x654C ;?ICS?lstr36_Main_326.0V+0
0x2CE4	0x6576 ;?ICS?lstr36_Main_326.0V+2
0x2CE6	0x206C ;?ICS?lstr36_Main_326.0V+4
0x2CE8	0x2031 ;?ICS?lstr36_Main_326.0V+6
0x2CEA	0x7453 ;?ICS?lstr36_Main_326.0V+8
0x2CEC	0x7261 ;?ICS?lstr36_Main_326.0V+10
0x2CEE	0x6974 ;?ICS?lstr36_Main_326.0V+12
0x2CF0	0x676E ;?ICS?lstr36_Main_326.0V+14
0x2CF2	0x2020 ;?ICS?lstr36_Main_326.0V+16
0x2CF4	0x00 ;?ICS?lstr36_Main_326.0V+18
; end of ?ICS?lstr36_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr37_Main_326.0V
0x2CF5	0x2020 ;?ICS?lstr37_Main_326.0V+0
0x2CF7	0x6E45 ;?ICS?lstr37_Main_326.0V+2
0x2CF9	0x2064 ;?ICS?lstr37_Main_326.0V+4
0x2CFB	0x666F ;?ICS?lstr37_Main_326.0V+6
0x2CFD	0x4C20 ;?ICS?lstr37_Main_326.0V+8
0x2CFF	0x7665 ;?ICS?lstr37_Main_326.0V+10
0x2D01	0x6C65 ;?ICS?lstr37_Main_326.0V+12
0x2D03	0x3120 ;?ICS?lstr37_Main_326.0V+14
0x2D05	0x202E ;?ICS?lstr37_Main_326.0V+16
0x2D07	0x654C ;?ICS?lstr37_Main_326.0V+18
0x2D09	0x6576 ;?ICS?lstr37_Main_326.0V+20
0x2D0B	0x206C ;?ICS?lstr37_Main_326.0V+22
0x2D0D	0x2032 ;?ICS?lstr37_Main_326.0V+24
0x2D0F	0x7453 ;?ICS?lstr37_Main_326.0V+26
0x2D11	0x7261 ;?ICS?lstr37_Main_326.0V+28
0x2D13	0x6974 ;?ICS?lstr37_Main_326.0V+30
0x2D15	0x676E ;?ICS?lstr37_Main_326.0V+32
0x2D17	0x2020 ;?ICS?lstr37_Main_326.0V+34
0x2D19	0x00 ;?ICS?lstr37_Main_326.0V+36
; end of ?ICS?lstr37_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr35_Main_326.0V
0x2D1A	0x7453 ;?ICS?lstr35_Main_326.0V+0
0x2D1C	0x7261 ;?ICS?lstr35_Main_326.0V+2
0x2D1E	0x6974 ;?ICS?lstr35_Main_326.0V+4
0x2D20	0x676E ;?ICS?lstr35_Main_326.0V+6
0x2D22	0x4220 ;?ICS?lstr35_Main_326.0V+8
0x2D24	0x6F6C ;?ICS?lstr35_Main_326.0V+10
0x2D26	0x6B63 ;?ICS?lstr35_Main_326.0V+12
0x2D28	0x2020 ;?ICS?lstr35_Main_326.0V+14
0x2D2A	0x00 ;?ICS?lstr35_Main_326.0V+16
; end of ?ICS?lstr35_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr22_Main_326.0V
0x2D2B	0x3020 ;?ICS?lstr22_Main_326.0V+0
0x2D2D	0x203B ;?ICS?lstr22_Main_326.0V+2
0x2D2F	0x00 ;?ICS?lstr22_Main_326.0V+4
; end of ?ICS?lstr22_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr34_Main_326.0V
0x2D30	0x7453 ;?ICS?lstr34_Main_326.0V+0
0x2D32	0x7261 ;?ICS?lstr34_Main_326.0V+2
0x2D34	0x6974 ;?ICS?lstr34_Main_326.0V+4
0x2D36	0x676E ;?ICS?lstr34_Main_326.0V+6
0x2D38	0x2E2E ;?ICS?lstr34_Main_326.0V+8
0x2D3A	0x002E ;?ICS?lstr34_Main_326.0V+10
; end of ?ICS?lstr34_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr38_Main_326.0V
0x2D3C	0x2020 ;?ICS?lstr38_Main_326.0V+0
0x2D3E	0x6E45 ;?ICS?lstr38_Main_326.0V+2
0x2D40	0x2064 ;?ICS?lstr38_Main_326.0V+4
0x2D42	0x666F ;?ICS?lstr38_Main_326.0V+6
0x2D44	0x4C20 ;?ICS?lstr38_Main_326.0V+8
0x2D46	0x7665 ;?ICS?lstr38_Main_326.0V+10
0x2D48	0x6C65 ;?ICS?lstr38_Main_326.0V+12
0x2D4A	0x3220 ;?ICS?lstr38_Main_326.0V+14
0x2D4C	0x202E ;?ICS?lstr38_Main_326.0V+16
0x2D4E	0x654C ;?ICS?lstr38_Main_326.0V+18
0x2D50	0x6576 ;?ICS?lstr38_Main_326.0V+20
0x2D52	0x206C ;?ICS?lstr38_Main_326.0V+22
0x2D54	0x2033 ;?ICS?lstr38_Main_326.0V+24
0x2D56	0x7453 ;?ICS?lstr38_Main_326.0V+26
0x2D58	0x7261 ;?ICS?lstr38_Main_326.0V+28
0x2D5A	0x6974 ;?ICS?lstr38_Main_326.0V+30
0x2D5C	0x676E ;?ICS?lstr38_Main_326.0V+32
0x2D5E	0x2020 ;?ICS?lstr38_Main_326.0V+34
0x2D60	0x00 ;?ICS?lstr38_Main_326.0V+36
; end of ?ICS?lstr38_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr39_Main_326.0V
0x2D61	0x6F67 ;?ICS?lstr39_Main_326.0V+0
0x2D63	0x2074 ;?ICS?lstr39_Main_326.0V+2
0x2D65	0x2061 ;?ICS?lstr39_Main_326.0V+4
0x2D67	0x7261 ;?ICS?lstr39_Main_326.0V+6
0x2D69	0x6F72 ;?ICS?lstr39_Main_326.0V+8
0x2D6B	0x2E77 ;?ICS?lstr39_Main_326.0V+10
0x2D6D	0x202E ;?ICS?lstr39_Main_326.0V+12
0x2D6F	0x0020 ;?ICS?lstr39_Main_326.0V+14
; end of ?ICS?lstr39_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr14_Main_326.0V
0x2D71	0x0030 ;?ICS?lstr14_Main_326.0V+0
; end of ?ICS?lstr14_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr15_Main_326.0V
0x2D73	0x0031 ;?ICS?lstr15_Main_326.0V+0
; end of ?ICS?lstr15_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr13_Main_326.0V
0x2D75	0x0031 ;?ICS?lstr13_Main_326.0V+0
; end of ?ICS?lstr13_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr11_Main_326.0V
0x2D77	0x0031 ;?ICS?lstr11_Main_326.0V+0
; end of ?ICS?lstr11_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr12_Main_326.0V
0x2D79	0x0030 ;?ICS?lstr12_Main_326.0V+0
; end of ?ICS?lstr12_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr16_Main_326.0V
0x2D7B	0x0030 ;?ICS?lstr16_Main_326.0V+0
; end of ?ICS?lstr16_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr20_Main_326.0V
0x2D7D	0x0030 ;?ICS?lstr20_Main_326.0V+0
; end of ?ICS?lstr20_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr21_Main_326.0V
0x2D7F	0x3120 ;?ICS?lstr21_Main_326.0V+0
0x2D81	0x203B ;?ICS?lstr21_Main_326.0V+2
0x2D83	0x00 ;?ICS?lstr21_Main_326.0V+4
; end of ?ICS?lstr21_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr19_Main_326.0V
0x2D84	0x0031 ;?ICS?lstr19_Main_326.0V+0
; end of ?ICS?lstr19_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr17_Main_326.0V
0x2D86	0x0031 ;?ICS?lstr17_Main_326.0V+0
; end of ?ICS?lstr17_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr18_Main_326.0V
0x2D88	0x0030 ;?ICS?lstr18_Main_326.0V+0
; end of ?ICS?lstr18_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr42_Main_326.0V
0x2D8A	0x6F43 ;?ICS?lstr42_Main_326.0V+0
0x2D8C	0x7272 ;?ICS?lstr42_Main_326.0V+2
0x2D8E	0x6E65 ;?ICS?lstr42_Main_326.0V+4
0x2D90	0x2074 ;?ICS?lstr42_Main_326.0V+6
0x2D92	0x6944 ;?ICS?lstr42_Main_326.0V+8
0x2D94	0x6572 ;?ICS?lstr42_Main_326.0V+10
0x2D96	0x7463 ;?ICS?lstr42_Main_326.0V+12
0x2D98	0x6F69 ;?ICS?lstr42_Main_326.0V+14
0x2D9A	0x206E ;?ICS?lstr42_Main_326.0V+16
0x2D9C	0x2121 ;?ICS?lstr42_Main_326.0V+18
0x2D9E	0x0021 ;?ICS?lstr42_Main_326.0V+20
; end of ?ICS?lstr42_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr41_Main_326.0V
0x2DA0	0x7257 ;?ICS?lstr41_Main_326.0V+0
0x2DA2	0x6E6F ;?ICS?lstr41_Main_326.0V+2
0x2DA4	0x2067 ;?ICS?lstr41_Main_326.0V+4
0x2DA6	0x6944 ;?ICS?lstr41_Main_326.0V+6
0x2DA8	0x6572 ;?ICS?lstr41_Main_326.0V+8
0x2DAA	0x7463 ;?ICS?lstr41_Main_326.0V+10
0x2DAC	0x6F69 ;?ICS?lstr41_Main_326.0V+12
0x2DAE	0x206E ;?ICS?lstr41_Main_326.0V+14
0x2DB0	0x2121 ;?ICS?lstr41_Main_326.0V+16
0x2DB2	0x0021 ;?ICS?lstr41_Main_326.0V+18
; end of ?ICS?lstr41_Main_326.0V
;Main 6.0V.c,0 :: ?ICS_DIRECTION
0x2DB4	0x0000 ;?ICS_DIRECTION+0
; end of ?ICS_DIRECTION
;Main 6.0V.c,0 :: ?ICS?lstr2_Main_326.0V
0x2DB6	0x6F6D ;?ICS?lstr2_Main_326.0V+0
0x2DB8	0x6576 ;?ICS?lstr2_Main_326.0V+2
0x2DBA	0x6620 ;?ICS?lstr2_Main_326.0V+4
0x2DBC	0x726F ;?ICS?lstr2_Main_326.0V+6
0x2DBE	0x6177 ;?ICS?lstr2_Main_326.0V+8
0x2DC0	0x6472 ;?ICS?lstr2_Main_326.0V+10
0x2DC2	0x00 ;?ICS?lstr2_Main_326.0V+12
; end of ?ICS?lstr2_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr1_Main_326.0V
0x2DC3	0x6F43 ;?ICS?lstr1_Main_326.0V+0
0x2DC5	0x6E6E ;?ICS?lstr1_Main_326.0V+2
0x2DC7	0x6365 ;?ICS?lstr1_Main_326.0V+4
0x2DC9	0x6974 ;?ICS?lstr1_Main_326.0V+6
0x2DCB	0x6E6F ;?ICS?lstr1_Main_326.0V+8
0x2DCD	0x4520 ;?ICS?lstr1_Main_326.0V+10
0x2DCF	0x7473 ;?ICS?lstr1_Main_326.0V+12
0x2DD1	0x6261 ;?ICS?lstr1_Main_326.0V+14
0x2DD3	0x696C ;?ICS?lstr1_Main_326.0V+16
0x2DD5	0x6873 ;?ICS?lstr1_Main_326.0V+18
0x2DD7	0x6465 ;?ICS?lstr1_Main_326.0V+20
0x2DD9	0x0021 ;?ICS?lstr1_Main_326.0V+22
; end of ?ICS?lstr1_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr32_Main_326.0V
0x2DDB	0x6553 ;?ICS?lstr32_Main_326.0V+0
0x2DDD	0x736E ;?ICS?lstr32_Main_326.0V+2
0x2DDF	0x726F ;?ICS?lstr32_Main_326.0V+4
0x2DE1	0x2035 ;?ICS?lstr32_Main_326.0V+6
0x2DE3	0x7461 ;?ICS?lstr32_Main_326.0V+8
0x2DE5	0x4C20 ;?ICS?lstr32_Main_326.0V+10
0x2DE7	0x5645 ;?ICS?lstr32_Main_326.0V+12
0x2DE9	0x4C45 ;?ICS?lstr32_Main_326.0V+14
0x2DEB	0x3220 ;?ICS?lstr32_Main_326.0V+16
0x2DED	0x0020 ;?ICS?lstr32_Main_326.0V+18
; end of ?ICS?lstr32_Main_326.0V
;Main 6.0V.c,0 :: ?ICS?lstr33_Main_326.0V
0x2DEF	0x6553 ;?ICS?lstr33_Main_326.0V+0
0x2DF1	0x736E ;?ICS?lstr33_Main_326.0V+2
0x2DF3	0x726F ;?ICS?lstr33_Main_326.0V+4
0x2DF5	0x2035 ;?ICS?lstr33_Main_326.0V+6
0x2DF7	0x7461 ;?ICS?lstr33_Main_326.0V+8
0x2DF9	0x4C20 ;?ICS?lstr33_Main_326.0V+10
0x2DFB	0x5645 ;?ICS?lstr33_Main_326.0V+12
0x2DFD	0x4C45 ;?ICS?lstr33_Main_326.0V+14
0x2DFF	0x3220 ;?ICS?lstr33_Main_326.0V+16
0x2E01	0x0020 ;?ICS?lstr33_Main_326.0V+18
; end of ?ICS?lstr33_Main_326.0V
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C       [8]    _FIXSIGN32
0x0024      [80]    _Mul_16x16_U
0x0074      [14]    _RES032
0x0082      [26]    _SETFUN32
0x009C       [8]    _SETFDZ32
0x00A4      [28]    _SETIOV3224
0x00C0      [14]    _UART1_Write
0x00CE     [108]    _PWM2_Set_Duty
0x013A      [24]    _SETFOV32
0x0152     [114]    _NRM3232
0x01C4     [108]    _PWM1_Set_Duty
0x0230       [6]    _motorRight_stop
0x0236      [12]    _motorLeft_foward
0x0242      [12]    _motorRight_reverse
0x024E       [6]    _motorLeft_stop
0x0254      [40]    _Word2Double
0x027C      [12]    _motorRight_foward
0x0288      [12]    _motorLeft_reverse
0x0294     [482]    _NRM4032
0x0476      [52]    _UART1_Write_Text
0x04AA     [372]    _Div_32x32_FP
0x061E     [288]    _Mul_32x32_FP
0x073E     [210]    _Double2Int
0x0810     [628]    _getDistanceSonar2
0x0A84    [1062]    _Add_32x32_FP
0x0EAA      [26]    _rotateClockwise
0x0EC4      [26]    _moveForward
0x0EDE      [14]    _sendText
0x0EEC      [10]    _stop
0x0EF6      [26]    _rotateAntiClockwise
0x0F10       [8]    _PWM1_Init
0x0F18       [8]    _PWM2_Init
0x0F20      [18]    _turnLeft
0x0F32      [18]    _turnRight
0x0F44      [10]    _PWM2_Start
0x0F4E      [10]    _PWM1_Start
0x0F58      [66]    _Int2Double
0x0F9A       [6]    _Sub_32x32_FP
0x0FA0      [88]    _UART1_Init
0x0FF8      [46]    _abs
0x1026     [208]    _level2Aligning
0x10F6      [22]    _moveStraightSlow
0x110C      [56]    _isAllWhite
0x1144      [66]    _isPathClear
0x1186     [502]    _sendSensorStatus
0x137C      [56]    _isAllBlack
0x13B4      [26]    _reverse
0x13CE     [752]    _rotateByDegree
0x16BE      [16]    ___CC2DW
0x16CE     [104]    _configure
0x1736     [180]    _level3Aligning
0x17EA    [1662]    _lineFollowNormalWorked
0x1E68     [444]    _goThroughObstaclesJay
0x2024     [128]    _setPID
0x20A4     [768]    _lineFollowPID
0x23A4    [1678]    _lineFollowNormalWorkedForLast
0x2A32     [670]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_xCnt_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_yCnt_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0007       [2]    __Lib_TFT__TFT_Write_Char_Return_Pos_y_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_mask_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _debugText
0x0017       [2]    ?lstr3_Main_326.0V
0x0019       [2]    ?lstr4_Main_326.0V
0x001B       [2]    ?lstr8_Main_326.0V
0x001D       [2]    ?lstr9_Main_326.0V
0x001F       [2]    ?lstr7_Main_326.0V
0x0021       [2]    ?lstr5_Main_326.0V
0x0023       [2]    ?lstr6_Main_326.0V
0x0025       [2]    ?lstr10_Main_326.0V
0x0027      [19]    ?lstr36_Main_326.0V
0x003A      [37]    ?lstr37_Main_326.0V
0x005F      [17]    ?lstr35_Main_326.0V
0x0070       [5]    ?lstr22_Main_326.0V
0x0075      [12]    ?lstr34_Main_326.0V
0x0081      [37]    ?lstr38_Main_326.0V
0x00A6      [16]    ?lstr39_Main_326.0V
0x00B6       [2]    ?lstr14_Main_326.0V
0x00B8       [2]    ?lstr15_Main_326.0V
0x00BA       [2]    ?lstr13_Main_326.0V
0x00BC       [2]    ?lstr11_Main_326.0V
0x00BE       [2]    ?lstr12_Main_326.0V
0x00C0       [2]    ?lstr16_Main_326.0V
0x00C2       [2]    ?lstr20_Main_326.0V
0x00C4       [5]    ?lstr21_Main_326.0V
0x00C9       [2]    ?lstr19_Main_326.0V
0x00CB       [2]    ?lstr17_Main_326.0V
0x00CD       [2]    ?lstr18_Main_326.0V
0x00CF      [22]    ?lstr42_Main_326.0V
0x00E5      [20]    ?lstr41_Main_326.0V
0x00F9       [2]    _DIRECTION
0x00FB      [13]    ?lstr2_Main_326.0V
0x0108      [24]    ?lstr1_Main_326.0V
0x0120      [20]    ?lstr32_Main_326.0V
0x0134      [20]    ?lstr33_Main_326.0V
0x0148       [4]    _correction
0x014C       [2]    _PID_RightRPM
0x014E       [2]    _deviation
0x0150       [2]    _TEST_RPM
0x0152       [2]    _MID_PWM
0x0154       [2]    _MAX_RPM
0x0156       [2]    _MIN_RPM
0x0158       [2]    _MID_RPM
0x015A       [4]    _Kp
0x015E       [2]    _previousDeviation
0x0160       [2]    _PID_LeftRPM
0x0162       [4]    _totalError
0x0166       [4]    _Ki
0x016A       [4]    _Kd
0x016E       [4]    _UART_Rdy_Ptr
0x0172       [4]    _UART_Tx_Idle_Ptr
0x0176       [4]    _UART_Rd_Ptr
0x017A       [4]    _UART_Wr_Ptr
0x017E       [2]    _LEVEL2_STATE
0x0180       [2]    _FAST_PWM
0x0182       [2]    _SLOW_PWM
0x0184       [2]    _LEVEL
0x0186       [2]    _LEVEL1_STATE
0x0188       [2]    _LEVEL3_STATE
0x018A       [2]    goThroughObstaclesJay_ROTATION_ANGLE_L0
0x018A      [12]    FLOC__lineFollowPID
0x0196       [2]    FARG_reverse_pwmLeft
0x0196       [2]    FARG_turnRight_pwmLeft
0x0196       [2]    FARG_turnLeft_pwmRight
0x0196       [4]    FARG_PWM1_Init_PWM_Freq
0x0196       [4]    FARG_PWM2_Init_PWM_Freq
0x0196       [2]    FARG_abs_a
0x0196       [2]    FARG_rotateByDegree_degree
0x0198       [2]    FARG_reverse_pwmRight
0x019A       [1]    FARG_getDistanceSonar2_Sensor
0x019A       [2]    FARG_moveForward_pwmLeft
0x019A       [2]    FARG_rotateClockwise_pwm
0x019A       [2]    FARG_rotateAntiClockwise_pwm
0x019A       [2]    FARG_sendText_aText
0x019B       [2]    getDistanceSonar2_L_L0
0x019C       [2]    FARG_moveForward_pwmRight
0x019D       [2]    getDistanceSonar2_H_L0
0x019F       [2]    FARG_UART1_Write_Text_uart_text
0x019F       [2]    FARG_motorLeft_foward_pwm
0x019F       [2]    FARG_motorLeft_reverse_pwm
0x019F       [2]    FARG_motorRight_foward_pwm
0x019F       [2]    FARG_motorRight_reverse_pwm
0x01A1       [1]    UART1_Write_Text_data__L0
0x01A2       [1]    UART1_Write_Text_counter_L0
0x01A3       [1]    FARG_PWM2_Set_Duty_new_duty
0x01A3       [1]    FARG_UART1_Write_data_
0x01A3       [1]    FARG_PWM1_Set_Duty_new_duty
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA1_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA2_bit
0x0F81       [0]    RB7_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB4_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC2_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC7_bit
0x0F83       [1]    PORTD
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD5_bit
0x0F84       [0]    RE2_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE0_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA4_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA5_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB5_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [1]    LATD
0x0F8D       [0]    LATE0_bit
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [1]    LATE
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC4_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    OBF_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [1]    TRISE
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    IBF_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    PSPIP_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    TMR3IP_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    RD_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    WREN_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RCD8_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RC8_9_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [1]    T3CON
0x0FB1       [0]    RD16_T3CON_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    DC2B0_bit
0x0FBB       [2]    CCPR2
0x0FBB       [1]    CCPR2L
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    ADCS2_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG2_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    ADCS1_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [0]    ACKDT_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM3_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    BF_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    D_A_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [1]    T2CON
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    RD16_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    POR_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL3_bit
0x0FD3       [0]    SCS_bit
0x0FD3       [1]    OSCCON
0x0FD5       [1]    T0CON
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS1_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    OV_bit
0x0FD8       [0]    N_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD8       [0]    Z_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2PTR
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0
0x0FE9       [2]    FSR0PTR
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [1]    INTCON3
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    T0IP_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [1]    INTCON1
0x0FF2       [1]    INTCON
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIEL_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU0_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [1]    STKPTR
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2CD0       [2]    ?ICS_debugText
0x2CD2       [2]    ?ICS?lstr3_Main_326.0V
0x2CD4       [2]    ?ICS?lstr4_Main_326.0V
0x2CD6       [2]    ?ICS?lstr8_Main_326.0V
0x2CD8       [2]    ?ICS?lstr9_Main_326.0V
0x2CDA       [2]    ?ICS?lstr7_Main_326.0V
0x2CDC       [2]    ?ICS?lstr5_Main_326.0V
0x2CDE       [2]    ?ICS?lstr6_Main_326.0V
0x2CE0       [2]    ?ICS?lstr10_Main_326.0V
0x2CE2      [19]    ?ICS?lstr36_Main_326.0V
0x2CF5      [37]    ?ICS?lstr37_Main_326.0V
0x2D1A      [17]    ?ICS?lstr35_Main_326.0V
0x2D2B       [5]    ?ICS?lstr22_Main_326.0V
0x2D30      [12]    ?ICS?lstr34_Main_326.0V
0x2D3C      [37]    ?ICS?lstr38_Main_326.0V
0x2D61      [16]    ?ICS?lstr39_Main_326.0V
0x2D71       [2]    ?ICS?lstr14_Main_326.0V
0x2D73       [2]    ?ICS?lstr15_Main_326.0V
0x2D75       [2]    ?ICS?lstr13_Main_326.0V
0x2D77       [2]    ?ICS?lstr11_Main_326.0V
0x2D79       [2]    ?ICS?lstr12_Main_326.0V
0x2D7B       [2]    ?ICS?lstr16_Main_326.0V
0x2D7D       [2]    ?ICS?lstr20_Main_326.0V
0x2D7F       [5]    ?ICS?lstr21_Main_326.0V
0x2D84       [2]    ?ICS?lstr19_Main_326.0V
0x2D86       [2]    ?ICS?lstr17_Main_326.0V
0x2D88       [2]    ?ICS?lstr18_Main_326.0V
0x2D8A      [22]    ?ICS?lstr42_Main_326.0V
0x2DA0      [20]    ?ICS?lstr41_Main_326.0V
0x2DB4       [2]    ?ICS_DIRECTION
0x2DB6      [13]    ?ICS?lstr2_Main_326.0V
0x2DC3      [24]    ?ICS?lstr1_Main_326.0V
0x2DDB      [20]    ?ICS?lstr32_Main_326.0V
0x2DEF      [20]    ?ICS?lstr33_Main_326.0V
//** Label List: ** 
//----------------------------------------------
  L_isAllBlack0
  L_isAllBlack1
  L_isAllBlack2
  L_isAllBlack3
  L_isAllWhite4
  L_isAllWhite5
  L_isAllWhite6
  L_isAllWhite7
  L_rotateByDegree8
  L_rotateByDegree9
  L_rotateByDegree10
  L_rotateByDegree11
  L_rotateByDegree12
  L_rotateByDegree13
  L_rotateByDegree14
  L_rotateByDegree15
  L_rotateByDegree16
  L_rotateByDegree17
  L_rotateByDegree18
  L_rotateByDegree19
  L_rotateByDegree20
  L_rotateByDegree21
  L_rotateByDegree22
  L_rotateByDegree23
  L_rotateByDegree24
  L_rotateByDegree25
  L_rotateByDegree26
  L_rotateByDegree27
  L_rotateByDegree28
  L_rotateByDegree29
  L_rotateByDegree30
  L_rotateByDegree31
  L_rotateByDegree32
  L_rotateByDegree33
  L_rotateByDegree34
  L_rotateByDegree35
  L_rotateByDegree36
  L_rotateByDegree37
  L_rotateByDegree38
  L_rotateByDegree39
  L_rotateByDegree40
  L_rotateByDegree41
  L_rotateByDegree42
  L_rotateByDegree43
  L_rotateByDegree44
  L_testMotion45
  L_testMotion46
  L_testMotion47
  L_sendSensorStatus48
  L_sendSensorStatus49
  L_sendSensorStatus50
  L_sendSensorStatus51
  L_sendSensorStatus52
  L_sendSensorStatus53
  L_sendSensorStatus54
  L_sendSensorStatus55
  L_sendSensorStatus56
  L_sendSensorStatus57
  L_sendSensorStatus58
  L_sendSensorStatus59
  L_sendSensorStatus60
  L_sendSensorStatus61
  L_sendSensorStatus62
  L_sendSensorStatus63
  L_sendSensorStatus64
  L_sendSensorStatus65
  L_sendSensorStatus66
  L_sendSensorStatus67
  L_sendSensorStatus68
  L_sendSensorStatus69
  L_sendSensorStatus70
  L_sendSensorStatus71
  L_sendSensorStatus72
  L_sendSensorStatus73
  L_sendSensorStatus74
  L_sendSensorStatus75
  L_sendSensorStatus76
  L_sendSensorStatus77
  L_testPIC78
  L_testPIC79
  L_testPIC80
  L_testPIC81
  L_testPIC82
  L_testPIC83
  L_testPIC84
  L_lineFollowPID85
  L_lineFollowPID86
  L_lineFollowPID87
  L_lineFollowPID88
  L_lineFollowPID89
  L_lineFollowPID90
  L_lineFollowPID91
  L_lineFollowPID92
  L_lineFollowPID93
  L_lineFollowPID94
  L_lineFollowPID95
  L_lineFollowPID96
  L_lineFollowPID97
  L_lineFollowPID98
  L_lineFollowPID99
  L_lineFollowPID100
  L_lineFollowPID101
  L_lineFollowPID102
  L_lineFollowPID103
  L_lineFollowPID104
  L_lineFollowPID105
  L_lineFollowPID106
  L_lineFollowPID107
  L_lineFollowPID108
  L_lineFollowPID109
  L_lineFollowPID110
  L_lineFollowPID111
  L_lineFollowPID112
  L_lineFollowPID113
  L_lineFollowPID114
  L_lineFollowPID115
  L_lineFollowPID116
  L_lineFollowPID117
  L_lineFollowPID118
  L_lineFollowPID119
  L_lineFollowPID120
  L_lineFollowNormalWorked121
  L_lineFollowNormalWorked122
  L_lineFollowNormalWorked123
  L_lineFollowNormalWorked124
  L_lineFollowNormalWorked125
  L_lineFollowNormalWorked126
  L_lineFollowNormalWorked127
  L_lineFollowNormalWorked128
  L_lineFollowNormalWorked129
  L_lineFollowNormalWorked130
  L_lineFollowNormalWorked131
  L_lineFollowNormalWorked132
  L_lineFollowNormalWorked133
  L_lineFollowNormalWorked134
  L_lineFollowNormalWorked135
  L_lineFollowNormalWorked136
  L_lineFollowNormalWorked137
  L_lineFollowNormalWorked138
  L_lineFollowNormalWorked139
  L_lineFollowNormalWorked140
  L_lineFollowNormalWorked141
  L_lineFollowNormalWorked142
  L_lineFollowNormalWorked143
  L_lineFollowNormalWorked144
  L_lineFollowNormalWorked145
  L_lineFollowNormalWorked146
  L_lineFollowNormalWorked147
  L_lineFollowNormalWorked148
  L_lineFollowNormalWorked149
  L_lineFollowNormalWorked150
  L_lineFollowNormalWorked151
  L_lineFollowNormalWorked152
  L_lineFollowNormalWorked153
  L_lineFollowNormalWorked154
  L_lineFollowNormalWorked155
  L_lineFollowNormalWorked156
  L_lineFollowNormalWorked157
  L_lineFollowNormalWorked158
  L_lineFollowNormalWorked159
  L_lineFollowNormalWorked160
  L_lineFollowNormalWorked161
  L_lineFollowNormalWorked162
  L_lineFollowNormalWorked163
  L_lineFollowNormalWorked164
  L_lineFollowNormalWorked165
  L_lineFollowNormalWorked166
  L_lineFollowNormalWorked167
  L_lineFollowNormalWorked168
  L_lineFollowNormalWorked169
  L_lineFollowNormalWorked170
  L_lineFollowNormalWorked171
  L_lineFollowNormalWorked172
  L_lineFollowNormalWorked173
  L_lineFollowNormalWorked174
  L_lineFollowNormalWorked175
  L_lineFollowNormalWorked176
  L_lineFollowNormalWorked177
  L_lineFollowNormalWorked178
  L_lineFollowNormalWorked179
  L_lineFollowNormalWorked180
  L_lineFollowNormalWorked181
  L_lineFollowNormalWorked182
  L_lineFollowNormalWorked183
  L_lineFollowNormalWorked184
  L_lineFollowNormalWorked185
  L_lineFollowNormalWorked186
  L_lineFollowNormalWorked187
  L_lineFollowNormalWorked188
  L_lineFollowNormalWorked189
  L_lineFollowNormalWorked190
  L_lineFollowNormalWorked191
  L_lineFollowNormalWorked192
  L_lineFollowNormalWorked193
  L_lineFollowNormalWorked194
  L_lineFollowNormalWorked195
  L_lineFollowNormalWorked196
  L_lineFollowNormalWorked197
  L_lineFollowNormalWorked198
  L_lineFollowNormalWorked199
  L_lineFollowNormalWorked200
  L_lineFollowNormalWorked201
  L_lineFollowNormalWorked202
  L_lineFollowNormalWorked203
  L_lineFollowNormalWorked204
  L_lineFollowNormalWorked205
  L_lineFollowNormalWorked206
  L_lineFollowNormalWorked207
  L_lineFollowNormalWorked208
  L_lineFollowNormalWorked209
  L_lineFollowNormalWorked210
  L_lineFollowNormalWorked211
  L_lineFollowNormalWorked212
  L_lineFollowNormalWorked213
  L_lineFollowNormalWorked214
  L_lineFollowNormalWorked215
  L_lineFollowNormalWorked216
  L_lineFollowNormalWorked217
  L_lineFollowNormalWorked218
  L_lineFollowNormalWorked219
  L_lineFollowNormalWorked220
  L_lineFollowNormalWorked221
  L_lineFollowNormalWorked222
  L_lineFollowNormalWorked223
  L_lineFollowNormalWorked224
  L_lineFollowNormalWorked225
  L_lineFollowNormalWorked226
  L_lineFollowNormalWorked227
  L_lineFollowNormalWorked228
  L_lineFollowNormalWorked229
  L_lineFollowNormalWorked230
  L_lineFollowNormalWorked231
  L_lineFollowNormalWorked232
  L_lineFollowNormalWorked233
  L_lineFollowNormalWorked234
  L_lineFollowNormalWorked235
  L_lineFollowNormalWorked236
  L_lineFollowNormalWorked237
  L_lineFollowNormalWorked238
  L_lineFollowNormalWorked239
  L_lineFollowNormalWorked240
  L_lineFollowNormalWorked241
  L_lineFollowNormalWorked242
  L_lineFollowNormalWorked243
  L_lineFollowNormalWorked244
  L_lineFollowNormalWorked245
  L_lineFollowNormalWorked246
  L_lineFollowNormalWorked247
  L_lineFollowNormalWorked248
  L_lineFollowNormalWorked249
  L_lineFollowNormalWorked250
  L_lineFollowNormalWorked251
  L_lineFollowNormalWorked252
  L_lineFollowNormalWorked253
  L_lineFollowNormalWorked254
  L_lineFollowNormalWorked255
  L_lineFollowNormalWorked256
  L_lineFollowNormalWorked257
  L_lineFollowNormalWorked258
  L_lineFollowNormalWorked259
  L_lineFollowNormalWorked260
  L_lineFollowNormalWorked261
  L_lineFollowNormalWorked262
  L_lineFollowNormalWorked263
  L_lineFollowNormalWorked264
  L_lineFollowNormalWorked265
  L_lineFollowNormalWorked266
  L_lineFollowNormalWorked267
  L_lineFollowNormalWorked268
  L_lineFollowNormalWorked269
  L_lineFollowNormalWorked270
  L_lineFollowNormalWorked271
  L_lineFollowNormalWorked272
  L_lineFollowNormalWorked273
  L_lineFollowNormalWorked274
  L_lineFollowNormalWorked275
  L_lineFollowNormalWorked276
  L_lineFollowNormalWorked277
  L_lineFollowNormalWorked278
  L_lineFollowNormalWorked279
  L_lineFollowNormalWorked280
  L_lineFollowNormalWorked281
  L_lineFollowNormalWorked282
  L_lineFollowNormalWorked283
  L_lineFollowNormalWorked284
  L_isOnThePath285
  L_isOnThePath286
  L_isOnThePath287
  L_isOnThePath288
  L_isOnThePath289
  L_isOnThePath290
  L_isOnThePath291
  L_isOnThePath292
  L_isOnThePath293
  L_isOnThePath294
  L_isOnThePath295
  L_isOnThePath296
  L_isOnThePath297
  L_isOnThePath298
  L_lineFollow299
  L_lineFollow300
  L_lineFollow301
  L_lineFollow302
  L_lineFollow303
  L_lineFollow304
  L_lineFollow305
  L_lineFollow306
  L_lineFollow307
  L_lineFollow308
  L_lineFollow309
  L_lineFollow310
  L_lineFollow311
  L_lineFollow312
  L_lineFollow313
  L_lineFollow314
  L_lineFollow315
  L_lineFollow316
  L_lineFollow317
  L_lineFollow318
  L_lineFollow319
  L_lineFollow320
  L_lineFollow321
  L_lineFollowNormal322
  L_lineFollowNormal323
  L_lineFollowNormal324
  L_lineFollowNormal325
  L_lineFollowNormal326
  L_lineFollowNormal327
  L_lineFollowNormal328
  L_lineFollowNormal329
  L_lineFollowNormal330
  L_lineFollowNormal331
  L_lineFollowNormal332
  L_lineFollowNormal333
  L_lineFollowNormal334
  L_lineFollowNormal335
  L_lineFollowNormal336
  L_lineFollowNormal337
  L_lineFollowNormal338
  L_lineFollowNormal339
  L_lineFollowNormal340
  L_lineFollowNormal341
  L_lineFollowNormal342
  L_lineFollowNormal343
  L_lineFollowNormal344
  L_lineFollowNormal345
  L_lineFollowNormal346
  L_lineFollowNormal347
  L_lineFollowNormal348
  L_lineFollowNormal349
  L_lineFollowNormal350
  L_lineFollowNormal351
  L_lineFollowNormal352
  L_lineFollowNormal353
  L_lineFollowNormal354
  L_lineFollowNormal355
  L_lineFollowNormal356
  L_lineFollowNormal357
  L_lineFollowNormal358
  L_lineFollowNormal359
  L_lineFollowNormal360
  L_lineFollowNormal361
  L_lineFollowNormal362
  L_lineFollowNormal363
  L_lineFollowNormal364
  L_lineFollowNormal365
  L_lineFollowNormal366
  L_lineFollowNormal367
  L_lineFollowNormal368
  L_lineFollowNormal369
  L_lineFollowNormal370
  L_lineFollowNormal371
  L_lineFollowNormal372
  L_lineFollowNormal373
  L_lineFollowNormal374
  L_lineFollowNormal375
  L_lineFollowNormal376
  L_lineFollowNormal377
  L_lineFollowNormal378
  L_lineFollowNormalWorkedForLast379
  L_lineFollowNormalWorkedForLast380
  L_lineFollowNormalWorkedForLast381
  L_lineFollowNormalWorkedForLast382
  L_lineFollowNormalWorkedForLast383
  L_lineFollowNormalWorkedForLast384
  L_lineFollowNormalWorkedForLast385
  L_lineFollowNormalWorkedForLast386
  L_lineFollowNormalWorkedForLast387
  L_lineFollowNormalWorkedForLast388
  L_lineFollowNormalWorkedForLast389
  L_lineFollowNormalWorkedForLast390
  L_lineFollowNormalWorkedForLast391
  L_lineFollowNormalWorkedForLast392
  L_lineFollowNormalWorkedForLast393
  L_lineFollowNormalWorkedForLast394
  L_lineFollowNormalWorkedForLast395
  L_lineFollowNormalWorkedForLast396
  L_lineFollowNormalWorkedForLast397
  L_lineFollowNormalWorkedForLast398
  L_lineFollowNormalWorkedForLast399
  L_lineFollowNormalWorkedForLast400
  L_lineFollowNormalWorkedForLast401
  L_lineFollowNormalWorkedForLast402
  L_lineFollowNormalWorkedForLast403
  L_lineFollowNormalWorkedForLast404
  L_lineFollowNormalWorkedForLast405
  L_lineFollowNormalWorkedForLast406
  L_lineFollowNormalWorkedForLast407
  L_lineFollowNormalWorkedForLast408
  L_lineFollowNormalWorkedForLast409
  L_lineFollowNormalWorkedForLast410
  L_lineFollowNormalWorkedForLast411
  L_lineFollowNormalWorkedForLast412
  L_lineFollowNormalWorkedForLast413
  L_lineFollowNormalWorkedForLast414
  L_lineFollowNormalWorkedForLast415
  L_lineFollowNormalWorkedForLast416
  L_lineFollowNormalWorkedForLast417
  L_lineFollowNormalWorkedForLast418
  L_lineFollowNormalWorkedForLast419
  L_lineFollowNormalWorkedForLast420
  L_lineFollowNormalWorkedForLast421
  L_lineFollowNormalWorkedForLast422
  L_lineFollowNormalWorkedForLast423
  L_lineFollowNormalWorkedForLast424
  L_lineFollowNormalWorkedForLast425
  L_lineFollowNormalWorkedForLast426
  L_lineFollowNormalWorkedForLast427
  L_lineFollowNormalWorkedForLast428
  L_lineFollowNormalWorkedForLast429
  L_lineFollowNormalWorkedForLast430
  L_lineFollowNormalWorkedForLast431
  L_lineFollowNormalWorkedForLast432
  L_lineFollowNormalWorkedForLast433
  L_lineFollowNormalWorkedForLast434
  L_lineFollowNormalWorkedForLast435
  L_lineFollowNormalWorkedForLast436
  L_lineFollowNormalWorkedForLast437
  L_lineFollowNormalWorkedForLast438
  L_lineFollowNormalWorkedForLast439
  L_lineFollowNormalWorkedForLast440
  L_lineFollowNormalWorkedForLast441
  L_lineFollowNormalWorkedForLast442
  L_lineFollowNormalWorkedForLast443
  L_lineFollowNormalWorkedForLast444
  L_lineFollowNormalWorkedForLast445
  L_lineFollowNormalWorkedForLast446
  L_lineFollowNormalWorkedForLast447
  L_lineFollowNormalWorkedForLast448
  L_lineFollowNormalWorkedForLast449
  L_lineFollowNormalWorkedForLast450
  L_lineFollowNormalWorkedForLast451
  L_lineFollowNormalWorkedForLast452
  L_lineFollowNormalWorkedForLast453
  L_lineFollowNormalWorkedForLast454
  L_lineFollowNormalWorkedForLast455
  L_lineFollowNormalWorkedForLast456
  L_lineFollowNormalWorkedForLast457
  L_lineFollowNormalWorkedForLast458
  L_lineFollowNormalWorkedForLast459
  L_lineFollowNormalWorkedForLast460
  L_lineFollowNormalWorkedForLast461
  L_lineFollowNormalWorkedForLast462
  L_lineFollowNormalWorkedForLast463
  L_lineFollowNormalWorkedForLast464
  L_lineFollowNormalWorkedForLast465
  L_lineFollowNormalWorkedForLast466
  L_lineFollowNormalWorkedForLast467
  L_lineFollowNormalWorkedForLast468
  L_lineFollowNormalWorkedForLast469
  L_lineFollowNormalWorkedForLast470
  L_lineFollowNormalWorkedForLast471
  L_lineFollowNormalWorkedForLast472
  L_lineFollowNormalWorkedForLast473
  L_lineFollowNormalWorkedForLast474
  L_lineFollowNormalWorkedForLast475
  L_lineFollowNormalWorkedForLast476
  L_lineFollowNormalWorkedForLast477
  L_lineFollowNormalWorkedForLast478
  L_lineFollowNormalWorkedForLast479
  L_lineFollowNormalWorkedForLast480
  L_lineFollowNormalWorkedForLast481
  L_lineFollowNormalWorkedForLast482
  L_lineFollowNormalWorkedForLast483
  L_lineFollowNormalWorkedForLast484
  L_lineFollowNormalWorkedForLast485
  L_lineFollowNormalWorkedForLast486
  L_lineFollowNormalWorkedForLast487
  L_lineFollowNormalWorkedForLast488
  L_lineFollowNormalWorkedForLast489
  L_lineFollowNormalWorkedForLast490
  L_lineFollowNormalWorkedForLast491
  L_lineFollowNormalWorkedForLast492
  L_lineFollowNormalWorkedForLast493
  L_lineFollowNormalWorkedForLast494
  L_lineFollowNormalWorkedForLast495
  L_lineFollowNormalWorkedForLast496
  L_lineFollowNormalWorkedForLast497
  L_lineFollowNormalWorkedForLast498
  L_lineFollowNormalWorkedForLast499
  L_lineFollowNormalWorkedForLast500
  L_lineFollowNormalWorkedForLast501
  L_lineFollowNormalWorkedForLast502
  L_lineFollowNormalWorkedForLast503
  L_lineFollowNormalWorkedForLast504
  L_lineFollowNormalWorkedForLast505
  L_lineFollowNormalWorkedForLast506
  L_lineFollowNormalWorkedForLast507
  L_lineFollowNormalWorkedForLast508
  L_lineFollowNormalWorkedForLast509
  L_lineFollowNormalWorkedForLast510
  L_lineFollowNormalWorkedForLast511
  L_lineFollowNormalWorkedForLast512
  L_lineFollowNormalWorkedForLast513
  L_lineFollowNormalWorkedForLast514
  L_lineFollowNormalWorkedForLast515
  L_lineFollowNormalWorkedForLast516
  L_lineFollowNormalWorkedForLast517
  L_lineFollowNormalWorkedForLast518
  L_lineFollowNormalWorkedForLast519
  L_lineFollowNormalWorkedForLast520
  L_lineFollowNormalWorkedForLast521
  L_lineFollowNormalWorkedForLast522
  L_lineFollowNormalWorkedForLast523
  L_lineFollowNormalWorkedForLast524
  L_lineFollowNormalWorkedForLast525
  L_lineFollowNormalWorkedForLast526
  L_lineFollowNormalWorkedForLast527
  L_lineFollowNormalWorkedForLast528
  L_lineFollowNormalWorkedForLast529
  L_lineFollowNormalWorkedForLast530
  L_lineFollowNormalWorkedForLast531
  L_lineFollowNormalWorkedForLast532
  L_lineFollowNormalWorkedForLast533
  L_lineFollowNormalWorkedForLast534
  L_lineFollowNormalWorkedForLast535
  L_lineFollowNormalWorkedForLast536
  L_lineFollowNormalWorkedForLast537
  L_lineFollowNormalWorkedForLast538
  L_lineFollowNormalWorkedForLast539
  L_lineFollowNormalWorkedForLast540
  L_lineFollowNormalWorkedForLast541
  L_lineFollowNormalWorkedForLast542
  L_getDistanceIR_GP2D120543
  L_getDistanceIR_GP2D120544
  L_getDistanceIR_GP2D120545
  L_getDistanceIR_GP2D120546
  L_getDistanceIR_GP2D120547
  L_getDistanceIR_GP2D120548
  L_getDistanceIR_GP2D120549
  L_getDistanceIR_GP2D120550
  L_getDistanceIR_GP2D120551
  L_getDistanceIR_GP2D120552
  L_getDistanceIR_GP2D120553
  L_getDistanceIR_GP2D120554
  L_getDistanceIR_GP2D120555
  L_getDistanceIR_GP2D120556
  L_getDistanceIR_GP2D120557
  L_getDistanceIR_GP2D120558
  L_getDistanceIR_GP2D120559
  L_getDistanceIR_GP2D120560
  L_getDistanceIR_GP2D120561
  L_getDistanceIR_GP2D120562
  L_getDistanceIR_GP2D120563
  L_getDistanceIR_GP2D120564
  L_getDistanceIR_GP2D120565
  L_getDistanceIR_GP2D120566
  L_getDistanceIR_GP2D120567
  L_getDistanceIR_GP2D120568
  L_getDistanceIR_GP2D120569
  L_getDistanceIR_GP2D120570
  L_getDistanceIR_GP2D120571
  L_getDistanceIR_GP2D120572
  L_getDistanceIR_GP2D120573
  L_getDistanceIR_GP2D120574
  L_getDistanceIR_GP2D120575
  L_getDistanceIR_GP2D120576
  L_getDistanceIR_GP2D120577
  L_getDistanceIR_GP2D120578
  L_getDistanceIR_GP2D120579
  L_getDistanceIR_GP2D120580
  L_getDistanceIR_GP2D120581
  L_getDistanceIR_GP2D120582
  L_getDistanceIR_GP2D120583
  L_getDistanceIR_GP2D120584
  L_getDistanceIR_GP2D120585
  L_getDistanceIR_GP2D120586
  L_getDistanceIR_GP2D120587
  L_getDistanceIR_GP2D120588
  L_getDistanceIR_GP2D120589
  L_getDistanceIR_GP2D120590
  L_getDistanceIR_GP2D120591
  L_getDistanceIR_GP2D120592
  L_getDistanceIR_GP2D120593
  L_getDistanceIR_GP2D120594
  L_getDistanceIR_GP2D120595
  L_getDistanceIR_GP2D120596
  L_getDistanceIR_GP2D120597
  L_getDistanceIR_GP2D120598
  L_getDistanceIR_GP2D120599
  L_getDistanceIR_GP2D120600
  L_getDistanceIR_GP2D120601
  L_getDistanceIR_GP2D120602
  L_getDistanceIR_GP2D120603
  L_getDistanceIR_GP2D120604
  L_getDistanceIR_GP2D120605
  L_getDistanceIR_GP2D120606
  L_getDistanceIR_GP2D120607
  L_getDistanceIR_GP2D120608
  L_getDistanceIR_GP2D120609
  L_getDistanceIR_GP2D120610
  L_getDistanceIR_GP2D120611
  L_getDistanceIR_GP2D120612
  L_getDistanceIR_GP2D120613
  L_getDistanceIR_GP2D120614
  L_getDistanceIR_GP2D120615
  L_getDistanceIR_GP2D120616
  L_getSonarDistance617
  L_getSonarDistance618
  L_getSonarDistance619
  L_getSonarDistance620
  L_getSonarDistance621
  L_getSonarDistance622
  L_getDistanceSonar2623
  L_getDistanceSonar2624
  L_getDistanceSonar2625
  L_getDistanceSonar2626
  L_getDistanceSonar2627
  L_getDistanceSonar2628
  L_getDistanceSonar2629
  L_getDistanceSonar2630
  L_getDistanceSonar2631
  L_getDistanceSonar2632
  L_getDistanceSonar2633
  L_getDistanceSonar2634
  L_getDistanceSonar2635
  L_getDistanceSonar2636
  L_getDistanceSonar2637
  L_getDistanceSonar2638
  L_getDistanceSonar2639
  L_getDistanceSonar2640
  L_getDistanceSonar2641
  L_getDistanceSonar2642
  L_getDistanceSonar2643
  L_getDistanceSonar2644
  L_getDistanceSonar2645
  L_getDistanceSonar2646
  L_getDistanceSonar2647
  L_getDistanceSonar2648
  L_getDistanceSonar2649
  L_getDistanceSonar2650
  L_getDistanceSonar2651
  L_level3Aligning652
  L_level3Aligning653
  L_level3Aligning654
  L_level3Aligning655
  L_level3Aligning656
  L_level3Aligning657
  L_level3Aligning658
  L_level3Aligning659
  L_level3Aligning660
  L_level3Aligning661
  L_level3Aligning662
  L_level3Aligning663
  L_level3Aligning664
  L_level2Aligning665
  L_level2Aligning666
  L_level2Aligning667
  L_level2Aligning668
  L_level2Aligning669
  L_level2Aligning670
  L_level2Aligning671
  L_level2Aligning672
  L_level2Aligning673
  L_level2Aligning674
  L_level2Aligning675
  L_level2Aligning676
  L_level2Aligning677
  L_level2Aligning678
  L_level2Aligning679
  L_level2Aligning680
  L_level2Aligning681
  L_main682
  L_main683
  L_main684
  L_main685
  L_main686
  L_main687
  L_main688
  L_main689
  L_main690
  L_main691
  L_main692
  L_main693
  L_main694
  L_main695
  L_main696
  L_main697
  L_main698
  L_main699
  L_main700
  L_main701
  L_main702
  L_main703
  L_main704
  L_main705
  L_main706
  L_main707
  L_main708
  L_main709
  L_main710
  L_main711
  L_main712
  L_main713
  L_main714
  L_main715
  L_isRightSafe716
  L_isRightSafe717
  L_isRightSafe718
  L_isMiddleSafe719
  L_isMiddleSafe720
  L_isMiddleSafe721
  L_isLeftSafe722
  L_isLeftSafe723
  L_isLeftSafe724
  L_goThroughObstaclesWorking725
  L_goThroughObstaclesWorking726
  L_goThroughObstaclesWorking727
  L_goThroughObstaclesWorking728
  L_goThroughObstaclesWorking729
  L_goThroughObstaclesWorking730
  L_goThroughObstaclesWorking731
  L_goThroughObstaclesWorking732
  L_goThroughObstaclesWorking733
  L_goThroughObstaclesWorking734
  L_goThroughObstaclesWorking735
  L_goThroughObstaclesWorking736
  L_goThroughObstaclesWorking737
  L_goThroughObstaclesWorking738
  L_goThroughObstacles739
  L_goThroughObstacles740
  L_goThroughObstacles741
  L_goThroughObstacles742
  L_goThroughObstacles743
  L_goThroughObstacles744
  L_goThroughObstacles745
  L_goThroughObstaclesJay746
  L_goThroughObstaclesJay747
  L_goThroughObstaclesJay748
  L_goThroughObstaclesJay749
  L_goThroughObstaclesJay750
  L_goThroughObstaclesJay751
  L_goThroughObstaclesJay752
  L_goThroughObstaclesJay753
  L_goThroughObstaclesJay754
  L_goThroughObstaclesJay755
  L_isPathClear756
  L_isPathClear757
  L_isPathClear758
  L_isPathClear759
  L_checkSonar760
  L_checkSonar761
  L_checkSonar762
  L_checkSonar763
  L_checkSonar764
  L_checkSonar765
  L_checkSonar766
  L_checkSonar767
  L_checkSonar768
  L__isAllBlack769
  L__isAllWhite770
  L__lineFollowPID771
  L__lineFollowPID772
  L__lineFollowPID773
  L__lineFollowPID774
  L__lineFollowPID775
  L__lineFollowPID776
  L__lineFollowPID777
  L__lineFollowPID778
  L__lineFollowPID779
  L__lineFollowPID780
  L__lineFollowPID781
  L__lineFollowPID782
  L__lineFollowNormalWorked783
  L__lineFollowNormalWorked784
  L__lineFollowNormalWorked785
  L__lineFollowNormalWorked786
  L__lineFollowNormalWorked787
  L__lineFollowNormalWorked788
  L__lineFollowNormalWorked789
  L__lineFollowNormalWorked790
  L__lineFollowNormalWorked791
  L__lineFollowNormalWorked792
  L__lineFollowNormalWorked793
  L__lineFollowNormalWorked794
  L__lineFollowNormalWorked795
  L__lineFollowNormalWorked796
  L__lineFollowNormalWorked797
  L__lineFollowNormalWorked798
  L__lineFollowNormalWorked799
  L__lineFollowNormalWorked800
  L__lineFollowNormalWorked801
  L__lineFollowNormalWorked802
  L__lineFollowNormalWorked803
  L__lineFollowNormalWorked804
  L__lineFollowNormalWorked805
  L__lineFollowNormalWorked806
  L__lineFollowNormalWorked807
  L__lineFollowNormalWorked808
  L__lineFollowNormalWorked809
  L__lineFollowNormalWorked810
  L__lineFollowNormalWorked811
  L__lineFollowNormalWorked812
  L__lineFollowNormalWorked813
  L__lineFollowNormalWorked814
  L__lineFollowNormalWorked815
  L__lineFollowNormalWorked816
  L__lineFollowNormalWorked817
  L__lineFollowNormalWorked818
  L__lineFollowNormalWorked819
  L__lineFollowNormalWorked820
  L__isOnThePath821
  L__isOnThePath822
  L__isOnThePath823
  L__isOnThePath824
  L__isOnThePath825
  L__isOnThePath826
  L__lineFollow827
  L__lineFollow828
  L__lineFollow829
  L__lineFollow830
  L__lineFollow831
  L__lineFollowNormal832
  L__lineFollowNormal833
  L__lineFollowNormal834
  L__lineFollowNormal835
  L__lineFollowNormal836
  L__lineFollowNormal837
  L__lineFollowNormal838
  L__lineFollowNormal839
  L__lineFollowNormal840
  L__lineFollowNormal841
  L__lineFollowNormal842
  L__lineFollowNormal843
  L__lineFollowNormal844
  L__lineFollowNormalWorkedForLast845
  L__lineFollowNormalWorkedForLast846
  L__lineFollowNormalWorkedForLast847
  L__lineFollowNormalWorkedForLast848
  L__lineFollowNormalWorkedForLast849
  L__lineFollowNormalWorkedForLast850
  L__lineFollowNormalWorkedForLast851
  L__lineFollowNormalWorkedForLast852
  L__lineFollowNormalWorkedForLast853
  L__lineFollowNormalWorkedForLast854
  L__lineFollowNormalWorkedForLast855
  L__lineFollowNormalWorkedForLast856
  L__lineFollowNormalWorkedForLast857
  L__lineFollowNormalWorkedForLast858
  L__lineFollowNormalWorkedForLast859
  L__lineFollowNormalWorkedForLast860
  L__lineFollowNormalWorkedForLast861
  L__lineFollowNormalWorkedForLast862
  L__lineFollowNormalWorkedForLast863
  L__lineFollowNormalWorkedForLast864
  L__lineFollowNormalWorkedForLast865
  L__lineFollowNormalWorkedForLast866
  L__lineFollowNormalWorkedForLast867
  L__lineFollowNormalWorkedForLast868
  L__lineFollowNormalWorkedForLast869
  L__lineFollowNormalWorkedForLast870
  L__lineFollowNormalWorkedForLast871
  L__lineFollowNormalWorkedForLast872
  L__lineFollowNormalWorkedForLast873
  L__lineFollowNormalWorkedForLast874
  L__lineFollowNormalWorkedForLast875
  L__lineFollowNormalWorkedForLast876
  L__lineFollowNormalWorkedForLast877
  L__lineFollowNormalWorkedForLast878
  L__lineFollowNormalWorkedForLast879
  L__lineFollowNormalWorkedForLast880
  L__lineFollowNormalWorkedForLast881
  L__lineFollowNormalWorkedForLast882
  L__getDistanceIR_GP2D120883
  L__getDistanceIR_GP2D120884
  L__getDistanceIR_GP2D120885
  L__getDistanceIR_GP2D120886
  L__getDistanceIR_GP2D120887
  L__getDistanceIR_GP2D120888
  L__getDistanceIR_GP2D120889
  L__getDistanceIR_GP2D120890
  L__getDistanceIR_GP2D120891
  L__getDistanceIR_GP2D120892
  L__getDistanceIR_GP2D120893
  L__getDistanceIR_GP2D120894
  L__getDistanceIR_GP2D120895
  L__getDistanceIR_GP2D120896
  L__getDistanceIR_GP2D120897
  L__getDistanceIR_GP2D120898
  L__getDistanceIR_GP2D120899
  L__level3Aligning900
  L__level3Aligning901
  L__level2Aligning902
  L__level2Aligning903
  L__level2Aligning904
  L__level2Aligning905
  L__main906
  L__main907
  L__main908
  L__main909
  L__isRightSafe910
  L__isMiddleSafe911
  L__isLeftSafe912
  L__isPathClear913
  _isAllBlack
  _isAllWhite
  _motorLeft_foward
  _motorRight_foward
  _motorLeft_reverse
  _motorRight_reverse
  _motorLeft_stop
  _motorRight_stop
  _moveForward
  _reverse
  _turnRight
  _turnLeft
  _rotateClockwise
  _rotateAntiClockwise
  _stop
  _rotateByDegree
  L__rotateByDegree914
  L__rotateByDegree915
  L__rotateByDegree916
  L__rotateByDegree917
  L__rotateByDegree918
  L__rotateByDegree919
  L__rotateByDegree920
  L__rotateByDegree921
  L__rotateByDegree922
  L__rotateByDegree923
  _testMotion
  _sendSensorStatus
  _sendText
  _testPIC
  L__testPIC924
  _setPID
  _lineFollowPID
  _lineFollowNormalWorked
  _isOnThePath
  _lineFollow
  _lineFollowNormal
  _lineFollowNormalWorkedForLast
  _configure
  _getDistanceIR_GP2D120
  L__getDistanceIR_GP2D120925
  L__getDistanceIR_GP2D120926
  L__getDistanceIR_GP2D120927
  L__getDistanceIR_GP2D120928
  L__getDistanceIR_GP2D120929
  L__getDistanceIR_GP2D120930
  L__getDistanceIR_GP2D120931
  L__getDistanceIR_GP2D120932
  L__getDistanceIR_GP2D120933
  L__getDistanceIR_GP2D120934
  L__getDistanceIR_GP2D120935
  L__getDistanceIR_GP2D120936
  L__getDistanceIR_GP2D120937
  L__getDistanceIR_GP2D120938
  L__getDistanceIR_GP2D120939
  L__getDistanceIR_GP2D120940
  L__getDistanceIR_GP2D120941
  L__getDistanceIR_GP2D120942
  L__getDistanceIR_GP2D120943
  L__getDistanceIR_GP2D120944
  L__getDistanceIR_GP2D120945
  L__getDistanceIR_GP2D120946
  L__getDistanceIR_GP2D120947
  L__getDistanceIR_GP2D120948
  L__getDistanceIR_GP2D120949
  L__getDistanceIR_GP2D120950
  L__getDistanceIR_GP2D120951
  L__getDistanceIR_GP2D120952
  L__getDistanceIR_GP2D120953
  L__getDistanceIR_GP2D120954
  L__getDistanceIR_GP2D120955
  L__getDistanceIR_GP2D120956
  L__getDistanceIR_GP2D120957
  L__getDistanceIR_GP2D120958
  _getSonarDistance
  _getDistanceSonar2
  L__getDistanceSonar2959
  L__getDistanceSonar2960
  L__getDistanceSonar2961
  L__getDistanceSonar2962
  L__getDistanceSonar2963
  L__getDistanceSonar2964
  _level3Aligning
  _level2Aligning
  _main
  L__main965
  _isRightSafe
  L__isRightSafe966
  L__isRightSafe967
  _isMiddleSafe
  L__isMiddleSafe968
  L__isMiddleSafe969
  _isLeftSafe
  L__isLeftSafe970
  L__isLeftSafe971
  _moveStraightSlow
  _moveStraightFast
  _goThroughObstaclesWorking
  L__goThroughObstaclesWorking972
  L__goThroughObstaclesWorking973
  L__goThroughObstaclesWorking974
  L__goThroughObstaclesWorking975
  L__goThroughObstaclesWorking976
  _goThroughObstacles
  L__goThroughObstacles977
  _goThroughObstaclesJay
  L__goThroughObstaclesJay978
  L__goThroughObstaclesJay979
  L__goThroughObstaclesJay980
  L__goThroughObstaclesJay981
  L__goThroughObstaclesJay982
  L__goThroughObstaclesJay983
  L__goThroughObstaclesJay984
  _isPathClear
  _checkSonar
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  _abs
  L__abs92
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod93
  L___Lib_CStdlib_strtod94
  L___Lib_CStdlib_strtod95
  _atof
  _atoi
  L__atoi96
  L__atoi97
  L__atoi98
  L__atoi99
  _atol
  L__atol100
  L__atol101
  _div
  _ldiv
  _uldiv
  _labs
  L__labs102
  _max
  L__max103
  _min
  L__min104
  _srand
  _rand
  _xtoi
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  SETFOV32EEE
  SETFUN32EEE
  NRMRND4032
  NRM40JPSETFOV32
  NRM4032
  NRM4032A
  TNIB4032
  NORM4032
  TNORMUN4032
  NRM40JPSETFUN32
  NRM40JPFIXSIGN32
  NRM4032B
  TNIB4032A
  NORM4032A
  NRM4032C
  TNIB4032B
  NORM4032B
  NRM40JPRES032
  TNIB4032C
  NORM4032C
  NRM40EEE
  NORM3232
  JPNRES032
  JPNSETFUN32
  NORM3232A
  JMPNFIXSIGN32
  NORM32EEE
  SETIOV3224EEE
  FPA32
  USEA32
  USEB32
  BRETURN32
  BLIGNED32
  BNIB32
  BNIB32A
  BNIB32B
  BNIB32C
  ADDEOK
  BLOOP32C
  BLOOP32B
  BLOOP32A
  BLOOP32
  AOK32
  BNE032
  ALIGNED32
  ANIB32
  ANIB32A
  ANIB32B
  ANIB32C
  ALOOP32C
  ALOOP32B
  ALOOP32A
  ALOOP32
  ACOMP32
  ADDJPNRMRND4032
  ADDJPSETFOV32
  ADDJPNRM4032
  ADDEEE
  FPS32
  FPM32
  MULJPRES032
  M32BNE0
  MTUN32
  MULJPSETFOV32
  MOK32
  MULJPSETFUN32
  MROUND32
  MUL32OK
  MULEEE
  L_Div_32x32_FP11
  L_Div_32x32_FP12
  L_Div_32x32_FP13
  L_Div_32x32_FP14
  FPD32
  JPDSETFDZ32
  JPDRES032
  D32BNE0
  TALIGN32
  TS1ALIGN32
  TS2ALIGN32
  DALIGN32OK
  ALTB32
  AGEB32
  JPDSETFOV32
  DARGOK32
  JPDSETFUN32
  DLOOP32
  DS132
  DS232
  DREST32
  DOK32
  DAREST32
  DROUND32
  DIV32OK
  DIV32EEE
  INT3232U
  INT3232UEOK
  SETEXP32U
  SETIOV32U
  TSHIFT3232U
  SHIFT3232UOK
  SHIFT3232U
  INT3232UOK
  JPLSETIOV3224
  IRES032U
  INT3232UEER
  INT3232UEEE
  INT3232
  INT3232EOK
  SETIOV32
  TSHIFT3232
  SHIFT3232OK
  SHIFT3232
  INT3232OK
  JPISETIOV3224
  IRES032
  INT3232EER
  INT3232EEE
  INT3216
  IRES016
  SETIOV16
  TSHIFT3216
  SHIFT3216OK
  SHIFT3216
  INT3216OK
  JPJSETIOV3224
  INT3216EOK
  INT3216EER
  INT3216EEE
  INT3216U
  IRES016U
  SETEXP16U
  SETIOV16U
  TSHIFT3216U
  SHIFT3216UOK
  SHIFT3216U
  INT3216UOK
  JPKSETIOV3224
  INT3216UEOK
  INT3216UEER
  INT3216UEEE
  INT32U08
  IRES008
  SETEXP08
  SETIOV08
  TSHIFT3208
  SHIFT3208OK
  SHIFT3208
  INT3208OK
  D2B_JPKSETIOV3224
  INT3208EOK
  INT3208EER
  INT3208EEE
  FLO08U32
  FLO1632
  FLO1632EEE
  FLO16U32
  FLO3232
  FLO3232EEE
  FLO32U32
  EQU_FALSE
  COMPARE_EQU
  COMPARE_NOTZERO
  COMPARE_XNOTZERO
  COMPARE_YNOTZERO
  COMPARE_LT
  COMPARE_GT
  COMPARE_TESTALL
  COMPARE_C1
  GT_FALSE
  GT_TRUE
  COMPARE_C2
  COMPARE_C3
  _SETFOV32
  _SETFDZ32
  _FIXSIGN32
  _RES032
  _SETFUN32
  _NRM4032
  _NRM3232
  _SETIOV3224
  _Add_32x32_FP
  _Sub_32x32_FP
  _Mul_32x32_FP
  _Div_32x32_FP
  _Double2Longword
  _Double2Longint
  _Double2Int
  _Double2Word
  _Double2Byte
  _Byte2Double
  _Int2Double
  _Word2Double
  _Longint2Double
  _Longword2Double
  _Equals_Double
  _Compare_Double
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
