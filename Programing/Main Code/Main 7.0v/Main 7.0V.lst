;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/13/2012 6:08:56 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF015EF26  	GOTO        10828
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x001C	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x001E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0020	0xF000EF19  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x0024	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0026	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0028	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x002A	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x002C	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x002E	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0030	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0032	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
0x0034	0x0012      	RETURN      0
; end of _SETFUN32
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x0036	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x0038	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x003A	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x003C	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x003E	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x0040	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
0x0042	0x0012      	RETURN      0
; end of _RES032
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x0044	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x0046	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x0048	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x004A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x004E	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x0052	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x0056	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x0058	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x005A	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x005E	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x0062	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x0064	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x0066	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x0068	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x006A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x006C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x006E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x0070	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x0072	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x0074	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x0076	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x0078	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x007A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x007C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x007E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x0080	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x0082	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x0086	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x008A	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x008E	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x0092	0x0012      	RETURN      0
; end of _Mul_16x16_U
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0094	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0096	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0098	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
0x009A	0x0012      	RETURN      0
; end of _FIXSIGN32
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x009C	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x009E	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x00A0	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
0x00A2	0x0012      	RETURN      0
; end of _SETFDZ32
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x00A4	0x50CB      	MOVF        PR2, 0 
0x00A6	0x0F01      	ADDLW       1
0x00A8	0x6E00      	MOVWF       R0 
0x00AA	0x6A01      	CLRF        R1 
0x00AC	0x0E00      	MOVLW       0
0x00AE	0x2201      	ADDWFC      R1, 1 
0x00B0	0xF004C1A3  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x00B4	0x0E00      	MOVLW       0
0x00B6	0x6E05      	MOVWF       R5 
0x00B8	0xDFC5      	RCALL       _Mul_16x16_U
0x00BA	0x0E06      	MOVLW       6
0x00BC	0x6E02      	MOVWF       R2 
0x00BE	0xF004C000  	MOVFF       R0, R4
0x00C2	0xF005C001  	MOVFF       R1, R5
0x00C6	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty0:
0x00C8	0xE005      	BZ          L__PWM2_Set_Duty1
0x00CA	0x3205      	RRCF        R5, 1 
0x00CC	0x3204      	RRCF        R4, 1 
0x00CE	0x9E05      	BCF         R5, 7 
0x00D0	0x0FFF      	ADDLW       255
0x00D2	0xD7FA      	BRA         L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x00D4	0x0E04      	MOVLW       4
0x00D6	0x6E01      	MOVWF       R1 
0x00D8	0xF000C004  	MOVFF       R4, R0
0x00DC	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty2:
0x00DE	0xE004      	BZ          L__PWM2_Set_Duty3
0x00E0	0x3600      	RLCF        R0, 1 
0x00E2	0x9000      	BCF         R0, 0 
0x00E4	0x0FFF      	ADDLW       255
0x00E6	0xD7FB      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x00E8	0x0E30      	MOVLW       48
0x00EA	0x1400      	ANDWF       R0, 0 
0x00EC	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x00EE	0xF000C004  	MOVFF       R4, R0
0x00F2	0xF001C005  	MOVFF       R5, R1
0x00F6	0x3201      	RRCF        R1, 1 
0x00F8	0x3200      	RRCF        R0, 1 
0x00FA	0x9E01      	BCF         R1, 7 
0x00FC	0x3201      	RRCF        R1, 1 
0x00FE	0x3200      	RRCF        R0, 1 
0x0100	0x9E01      	BCF         R1, 7 
0x0102	0xFFBBC000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x0106	0x0E0F      	MOVLW       15
0x0108	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x010A	0x5003      	MOVF        R3, 0 
0x010C	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
0x010E	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x0110	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x0112	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x0114	0xF000EF92  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x0118	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x011A	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x011C	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x011E	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x0120	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x0122	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x0124	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
0x0126	0x0012      	RETURN      0
; end of _SETFOV32
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0128	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x012A	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x012C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x012E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x0130	0xF000EFAD  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0134	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0138	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x013C	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x013E	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x0140	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x0142	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0144	0xF000EFAD  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0148	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x014C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x014E	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x0150	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x0152	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x0154	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x0156	0xF000EFBF  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x015A	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x015C	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x015E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x0160	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x0162	0xF000EFC4  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x0166	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x0168	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x016A	0xF000EFC9  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x016E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x0170	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x0172	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x0174	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x0176	0xF000EFB4  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x017A	0xF000EFC4  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x017E	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x0180	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x0182	0xDF59      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x0184	0xF000EFCC  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x0188	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x018A	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x018C	0xDF47      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x018E	0xF000EFCC  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x0192	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x0194	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x0196	0xDF7E      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
0x0198	0x0012      	RETURN      0
; end of _NRM3232
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x019A	0x50CB      	MOVF        PR2, 0 
0x019C	0x0F01      	ADDLW       1
0x019E	0x6E00      	MOVWF       R0 
0x01A0	0x6A01      	CLRF        R1 
0x01A2	0x0E00      	MOVLW       0
0x01A4	0x2201      	ADDWFC      R1, 1 
0x01A6	0xF004C1A3  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x01AA	0x0E00      	MOVLW       0
0x01AC	0x6E05      	MOVWF       R5 
0x01AE	0xDF4A      	RCALL       _Mul_16x16_U
0x01B0	0x0E06      	MOVLW       6
0x01B2	0x6E02      	MOVWF       R2 
0x01B4	0xF004C000  	MOVFF       R0, R4
0x01B8	0xF005C001  	MOVFF       R1, R5
0x01BC	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty4:
0x01BE	0xE005      	BZ          L__PWM1_Set_Duty5
0x01C0	0x3205      	RRCF        R5, 1 
0x01C2	0x3204      	RRCF        R4, 1 
0x01C4	0x9E05      	BCF         R5, 7 
0x01C6	0x0FFF      	ADDLW       255
0x01C8	0xD7FA      	BRA         L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,48 :: 		
0x01CA	0x0E04      	MOVLW       4
0x01CC	0x6E01      	MOVWF       R1 
0x01CE	0xF000C004  	MOVFF       R4, R0
0x01D2	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty6:
0x01D4	0xE004      	BZ          L__PWM1_Set_Duty7
0x01D6	0x3600      	RLCF        R0, 1 
0x01D8	0x9000      	BCF         R0, 0 
0x01DA	0x0FFF      	ADDLW       255
0x01DC	0xD7FB      	BRA         L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x01DE	0x0E30      	MOVLW       48
0x01E0	0x1400      	ANDWF       R0, 0 
0x01E2	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x01E4	0xF000C004  	MOVFF       R4, R0
0x01E8	0xF001C005  	MOVFF       R5, R1
0x01EC	0x3201      	RRCF        R1, 1 
0x01EE	0x3200      	RRCF        R0, 1 
0x01F0	0x9E01      	BCF         R1, 7 
0x01F2	0x3201      	RRCF        R1, 1 
0x01F4	0x3200      	RRCF        R0, 1 
0x01F6	0x9E01      	BCF         R1, 7 
0x01F8	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x01FC	0x0E0F      	MOVLW       15
0x01FE	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x0200	0x5003      	MOVF        R3, 0 
0x0202	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
0x0204	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x0206	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x0208	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x020A	0xF001EF0F  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x020E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x0210	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x0212	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x0214	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x0216	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x0218	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x021A	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x021C	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x021E	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
0x0220	0x0012      	RETURN      0
; end of _SETIOV3224
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0222	0xB2AC      	BTFSC       TXSTA, 1 
0x0224	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0226	0x0000      	NOP
0x0228	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x022A	0xFFADC1A3  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
0x022E	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0230	0x0101      	MOVLB       1
0x0232	0x6BA2      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0234	0xFFE9C19F  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0238	0xFFEAC1A0  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x023C	0xF1A1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0240	0x51A1      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0242	0x0A00      	XORLW       0
0x0244	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x0246	0xF1A3C1A1  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x024A	0xDFEB      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x024C	0x0101      	MOVLB       1
0x024E	0x2BA2      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0250	0x51A2      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0252	0x259F      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0254	0x6EE9      	MOVWF       FSR0L 
0x0256	0x0E00      	MOVLW       0
0x0258	0x21A0      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x025A	0x6EEA      	MOVWF       FSR0H 
0x025C	0xF1A1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0260	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
0x0262	0x0012      	RETURN      0
; end of _UART1_Write_Text
_motorRight_foward:
;motion.h,38 :: 		void motorRight_foward(int pwm){
;motion.h,39 :: 		Motor_Right_Forward = 1;
0x0264	0x8882      	BSF         PORTC, 4 
;motion.h,40 :: 		Motor_Right_Reverse = 0;
0x0266	0x9A82      	BCF         PORTC, 5 
;motion.h,41 :: 		PWM1_Set_Duty(pwm);
0x0268	0xF1A3C19F  	MOVFF       FARG_motorRight_foward_pwm, FARG_PWM1_Set_Duty_new_duty
0x026C	0xDF96      	RCALL       _PWM1_Set_Duty
;motion.h,42 :: 		}
0x026E	0x0012      	RETURN      0
; end of _motorRight_foward
_Word2Double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x0270	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x0272	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x0274	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x0276	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x0278	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x027A	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x027C	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x027E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x0280	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x0282	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x0284	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x0286	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x0288	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x028C	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x0290	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x0292	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x0294	0xDF49      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
0x0296	0x0012      	RETURN      0
; end of _Word2Double
_motorLeft_foward:
;motion.h,32 :: 		void motorLeft_foward(int pwm){
;motion.h,33 :: 		Motor_Left_Forward = 1;
0x0298	0x8483      	BSF         PORTD, 2 
;motion.h,34 :: 		Motor_Left_Reverse = 0;
0x029A	0x9683      	BCF         PORTD, 3 
;motion.h,35 :: 		PWM2_Set_Duty(pwm);
0x029C	0xF1A3C19F  	MOVFF       FARG_motorLeft_foward_pwm, FARG_PWM2_Set_Duty_new_duty
0x02A0	0xDF01      	RCALL       _PWM2_Set_Duty
;motion.h,36 :: 		}
0x02A2	0x0012      	RETURN      0
; end of _motorLeft_foward
_motorRight_stop:
;motion.h,61 :: 		void motorRight_stop(){
;motion.h,62 :: 		Motor_Right_Forward = 1;
0x02A4	0x8882      	BSF         PORTC, 4 
;motion.h,63 :: 		Motor_Right_Reverse = 1;
0x02A6	0x8A82      	BSF         PORTC, 5 
;motion.h,64 :: 		}
0x02A8	0x0012      	RETURN      0
; end of _motorRight_stop
_motorLeft_stop:
;motion.h,56 :: 		void motorLeft_stop(){
;motion.h,57 :: 		Motor_Left_Forward = 1;
0x02AA	0x8483      	BSF         PORTD, 2 
;motion.h,58 :: 		Motor_Left_Reverse = 1;
0x02AC	0x8683      	BSF         PORTD, 3 
;motion.h,59 :: 		}
0x02AE	0x0012      	RETURN      0
; end of _motorLeft_stop
_motorRight_reverse:
;motion.h,50 :: 		void motorRight_reverse(int pwm){
;motion.h,51 :: 		Motor_Right_Forward = 0;
0x02B0	0x9882      	BCF         PORTC, 4 
;motion.h,52 :: 		Motor_Right_Reverse = 1;
0x02B2	0x8A82      	BSF         PORTC, 5 
;motion.h,53 :: 		PWM1_Set_Duty(pwm);
0x02B4	0xF1A3C19F  	MOVFF       FARG_motorRight_reverse_pwm, FARG_PWM1_Set_Duty_new_duty
0x02B8	0xDF70      	RCALL       _PWM1_Set_Duty
;motion.h,54 :: 		}
0x02BA	0x0012      	RETURN      0
; end of _motorRight_reverse
_Mul_32x32_FP:
;__Lib_MathDouble.c,1130 :: 		
;__Lib_MathDouble.c,1148 :: 		
0x02BC	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1149 :: 		
0x02BE	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1151 :: 		
0x02C0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1152 :: 		
0x02C2	0x6207      	CPFSEQ      R7, 0
;__Lib_MathDouble.c,1153 :: 		
0x02C4	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,1154 :: 		
0x02C6	0xF001EFE3  	GOTO        MULJPRES032
;__Lib_MathDouble.c,1157 :: 		
0x02CA	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1158 :: 		
0x02CC	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1159 :: 		
0x02CE	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1161 :: 		
0x02D0	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1162 :: 		
0x02D2	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1163 :: 		
0x02D4	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1164 :: 		
0x02D6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1165 :: 		
0x02D8	0xF001EF74  	GOTO        MTUN32
;__Lib_MathDouble.c,1167 :: 		
0x02DC	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1168 :: 		
0x02DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1169 :: 		
0x02E0	0xF001EFE7  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1170 :: 		
0x02E4	0xF001EF78  	GOTO        MOK32
;__Lib_MathDouble.c,1172 :: 		
MTUN32:
;__Lib_MathDouble.c,1173 :: 		
0x02E8	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1174 :: 		
0x02EA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1175 :: 		
0x02EC	0xF001EFEB  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1177 :: 		
MOK32:
;__Lib_MathDouble.c,1178 :: 		
0x02F0	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1179 :: 		
0x02F2	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1181 :: 		
0x02F4	0xF00EC002  	MOVFF       R2, R14
;__Lib_MathDouble.c,1182 :: 		
0x02F8	0xF00BC001  	MOVFF       R1, R11
;__Lib_MathDouble.c,1183 :: 		
0x02FC	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1185 :: 		
0x0300	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1186 :: 		
0x0302	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1187 :: 		
0x0304	0xF00CCFF4  	MOVFF       PRODH, R12
;__Lib_MathDouble.c,1189 :: 		
0x0308	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1190 :: 		
0x030A	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1191 :: 		
0x030C	0xF000CFF4  	MOVFF       PRODH, R0
;__Lib_MathDouble.c,1192 :: 		
0x0310	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_MathDouble.c,1194 :: 		
0x0314	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1195 :: 		
0x0316	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1196 :: 		
0x0318	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1197 :: 		
0x031A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1198 :: 		
0x031C	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1199 :: 		
0x031E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1200 :: 		
0x0320	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1202 :: 		
0x0322	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1203 :: 		
0x0324	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1204 :: 		
0x0326	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1205 :: 		
0x0328	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1206 :: 		
0x032A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1207 :: 		
0x032C	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1208 :: 		
0x032E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1209 :: 		
0x0330	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1211 :: 		
0x0332	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1212 :: 		
0x0334	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1213 :: 		
0x0336	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1214 :: 		
0x0338	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1215 :: 		
0x033A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1216 :: 		
0x033C	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1217 :: 		
0x033E	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1218 :: 		
0x0340	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1219 :: 		
0x0342	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1220 :: 		
0x0344	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1221 :: 		
0x0346	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1222 :: 		
0x0348	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1223 :: 		
0x034A	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1224 :: 		
0x034C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1225 :: 		
0x034E	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1227 :: 		
0x0350	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1228 :: 		
0x0352	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1229 :: 		
0x0354	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1230 :: 		
0x0356	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1231 :: 		
0x0358	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1232 :: 		
0x035A	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1233 :: 		
0x035C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1234 :: 		
0x035E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1235 :: 		
0x0360	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1236 :: 		
0x0362	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1238 :: 		
0x0364	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,1239 :: 		
0x0366	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1240 :: 		
0x0368	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1241 :: 		
0x036A	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1242 :: 		
0x036C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1243 :: 		
0x036E	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1244 :: 		
0x0370	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1245 :: 		
0x0372	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1247 :: 		
0x0374	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,1248 :: 		
0x0376	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1249 :: 		
0x0378	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1250 :: 		
0x037A	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1251 :: 		
0x037C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1252 :: 		
0x037E	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1254 :: 		
0x0380	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1255 :: 		
0x0382	0xF001EFCB  	GOTO        MROUND32
;__Lib_MathDouble.c,1256 :: 		
0x0386	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1257 :: 		
0x0388	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1258 :: 		
0x038A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1259 :: 		
0x038C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1260 :: 		
0x038E	0x0603      	DECF        R3, 1, 0
;__Lib_MathDouble.c,1261 :: 		
0x0390	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1262 :: 		
0x0392	0xF001EFEB  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1264 :: 		
MROUND32:
;__Lib_MathDouble.c,1267 :: 		
0x0396	0xF001EFDE  	GOTO        MUL32OK
;__Lib_MathDouble.c,1268 :: 		
0x039A	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,1269 :: 		
0x039C	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,1270 :: 		
0x039E	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,1271 :: 		
0x03A0	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,1272 :: 		
0x03A2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1273 :: 		
0x03A4	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1274 :: 		
0x03A6	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1275 :: 		
0x03A8	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1277 :: 		
0x03AA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1278 :: 		
0x03AC	0xF001EFDE  	GOTO        MUL32OK
;__Lib_MathDouble.c,1279 :: 		
0x03B0	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1280 :: 		
0x03B2	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1281 :: 		
0x03B4	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1282 :: 		
0x03B6	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,1283 :: 		
0x03B8	0xF001EFE7  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1285 :: 		
MUL32OK:
;__Lib_MathDouble.c,1286 :: 		
0x03BC	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1287 :: 		
0x03BE	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,1289 :: 		
0x03C0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1290 :: 		
0x03C2	0xF001EFED  	GOTO        MULEEE
;__Lib_MathDouble.c,1291 :: 		
MULJPRES032:
;__Lib_MathDouble.c,1292 :: 		
0x03C6	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1295 :: 		
0x03C8	0xDE36      	RCALL       _RES032
;__Lib_MathDouble.c,1297 :: 		
0x03CA	0xF001EFED  	GOTO        MULEEE
;__Lib_MathDouble.c,1298 :: 		
MULJPSETFOV32:
;__Lib_MathDouble.c,1299 :: 		
0x03CE	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1302 :: 		
0x03D0	0xDE9F      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1304 :: 		
0x03D2	0xF001EFED  	GOTO        MULEEE
;__Lib_MathDouble.c,1305 :: 		
MULJPSETFUN32:
;__Lib_MathDouble.c,1306 :: 		
0x03D6	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1309 :: 		
0x03D8	0xDE21      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1311 :: 		
MULEEE:
;__Lib_MathDouble.c,1318 :: 		
0x03DA	0x0012      	RETURN      0
; end of _Mul_32x32_FP
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x03DC	0x5004      	MOVF        R4, 0 
0x03DE	0x0A00      	XORLW       0
0x03E0	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x03E2	0x5005      	MOVF        R5, 0 
0x03E4	0x0A00      	XORLW       0
0x03E6	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x03E8	0x5006      	MOVF        R6, 0 
0x03EA	0x0A00      	XORLW       0
0x03EC	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x03EE	0x5007      	MOVF        R7, 0 
0x03F0	0x0A00      	XORLW       0
0x03F2	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x03F4	0x0EFF      	MOVLW       255
0x03F6	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x03F8	0x0EFF      	MOVLW       255
0x03FA	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x03FC	0x0E7F      	MOVLW       127
0x03FE	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x0400	0x0EFF      	MOVLW       255
0x0402	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x0404	0x0012      	RETURN      0
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x0406	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x0408	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x040A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x040C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x040E	0xF002EF99  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x0412	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x0414	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x0416	0xF002EF9D  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x041A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x041C	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x041E	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x0420	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x0422	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x0424	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x0426	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x042A	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x042E	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x0432	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x0434	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x0436	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x0438	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x043A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x043C	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x043E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x0440	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x0442	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x0444	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x0446	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x0448	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x044A	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x044C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x044E	0xF002EF30  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x0452	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x0454	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x0456	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x0458	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x045A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x045C	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x045E	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x0460	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x0462	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x0464	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x0466	0xF002EF3D  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x046A	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x046C	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x046E	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x0470	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x0472	0xF002EFA1  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x0476	0xF002EF43  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x047A	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x047C	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x047E	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x0480	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x0482	0xF002EFA5  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x0486	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x0488	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x048A	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x048C	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x048E	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x0490	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x0492	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x0494	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x0496	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x0498	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x049A	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x049C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x049E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x04A0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x04A2	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x04A4	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x04A6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x04A8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x04AA	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x04AC	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x04AE	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x04B0	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x04B2	0xF002EF5E  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x04B6	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x04B8	0xF002EF69  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x04BC	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x04BE	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x04C0	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x04C2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x04C4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x04C6	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x04C8	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x04CA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x04CC	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x04CE	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x04D0	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x04D2	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x04D4	0xF002EF45  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x04D8	0xF002EF8F  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x04DC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x04DE	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x04E0	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x04E2	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x04E4	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x04E6	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x04E8	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x04EA	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x04EC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x04EE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x04F0	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x04F2	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x04F4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x04F6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x04F8	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x04FA	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x04FC	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x04FE	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x0500	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x0502	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x0504	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x0506	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x0508	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x050A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x050C	0xF002EF8F  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x0510	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x0512	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x0514	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x0516	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x0518	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x051A	0xF002EFA1  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x051E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x0520	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x0522	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x0524	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x0526	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x0528	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x052A	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x052C	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x052E	0xF002EFA7  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x0532	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x0534	0xDDB3      	RCALL       _SETFDZ32
;__Lib_MathDouble.c,1518 :: 		
0x0536	0xF002EFA7  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x053A	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x053C	0xDD7C      	RCALL       _RES032
;__Lib_MathDouble.c,1525 :: 		
0x053E	0xF002EFA7  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x0542	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x0544	0xDDE5      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1532 :: 		
0x0546	0xF002EFA7  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x054A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x054C	0xDD67      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
0x054E	0x0012      	RETURN      0
; end of _Div_32x32_FP
_Double2Int:
;__Lib_MathDouble.c,1897 :: 		
;__Lib_MathDouble.c,1906 :: 		
0x0550	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1907 :: 		
0x0552	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1908 :: 		
0x0554	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1909 :: 		
0x0556	0xF002EFEE  	GOTO        IRES016
;__Lib_MathDouble.c,1910 :: 		
0x055A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1911 :: 		
0x055C	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1912 :: 		
0x055E	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1914 :: 		
0x0560	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,1915 :: 		
0x0562	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1916 :: 		
0x0564	0xAE03      	BTFSS       R3, 7, 0
;__Lib_MathDouble.c,1917 :: 		
0x0566	0xF002EFF2  	GOTO        SETIOV16
;__Lib_MathDouble.c,1918 :: 		
0x056A	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1920 :: 		
0x056C	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1921 :: 		
0x056E	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1922 :: 		
0x0570	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1923 :: 		
0x0572	0xF002EFCD  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1924 :: 		
0x0576	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1925 :: 		
0x0578	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1926 :: 		
0x057A	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1927 :: 		
0x057E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1929 :: 		
0x0580	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1930 :: 		
0x0582	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1931 :: 		
0x0584	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1932 :: 		
0x0586	0xF002EFCD  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1933 :: 		
0x058A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1934 :: 		
0x058C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1935 :: 		
0x058E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1937 :: 		
0x0590	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1938 :: 		
0x0592	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1939 :: 		
0x0594	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1940 :: 		
0x0596	0xF002EFD7  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1941 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1942 :: 		
0x059A	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1943 :: 		
0x059C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1944 :: 		
0x059E	0xF002EFD7  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1945 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1946 :: 		
0x05A2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1947 :: 		
0x05A4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1948 :: 		
0x05A6	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1949 :: 		
0x05A8	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1950 :: 		
0x05AA	0xF002EFD1  	GOTO        SHIFT3216
;__Lib_MathDouble.c,1951 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1952 :: 		
0x05AE	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1953 :: 		
0x05B0	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,1954 :: 		
0x05B2	0xF002EFE4  	GOTO        INT3216OK
;__Lib_MathDouble.c,1955 :: 		
0x05B6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1956 :: 		
0x05B8	0xF002EFE4  	GOTO        INT3216OK
;__Lib_MathDouble.c,1957 :: 		
0x05BC	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1958 :: 		
0x05BE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1959 :: 		
0x05C0	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1960 :: 		
0x05C2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1961 :: 		
0x05C4	0xF003EF01  	GOTO        JPJSETIOV3224
;__Lib_MathDouble.c,1962 :: 		
INT3216OK:
;__Lib_MathDouble.c,1963 :: 		
0x05C8	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1964 :: 		
0x05CA	0xF003EF06  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1966 :: 		
0x05CE	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1967 :: 		
0x05D0	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1968 :: 		
0x05D2	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1969 :: 		
0x05D4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1970 :: 		
0x05D6	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1971 :: 		
0x05D8	0xF003EF06  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1973 :: 		
IRES016:
;__Lib_MathDouble.c,1974 :: 		
0x05DC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1975 :: 		
0x05DE	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1976 :: 		
0x05E0	0xF003EF06  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1977 :: 		
SETIOV16:
;__Lib_MathDouble.c,1978 :: 		
0x05E4	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1979 :: 		
0x05E6	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1980 :: 		
0x05E8	0xF003EF0A  	GOTO        INT3216EER
;__Lib_MathDouble.c,1982 :: 		
0x05EC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1983 :: 		
0x05EE	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1984 :: 		
0x05F0	0xF003EF0A  	GOTO        INT3216EER
;__Lib_MathDouble.c,1985 :: 		
0x05F4	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1986 :: 		
0x05F6	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1987 :: 		
0x05F8	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1988 :: 		
0x05FA	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1989 :: 		
0x05FC	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1990 :: 		
0x05FE	0xF003EF0A  	GOTO        INT3216EER
;__Lib_MathDouble.c,1992 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1993 :: 		
0x0602	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1994 :: 		
0x0604	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1996 :: 		
0x0606	0xDDFF      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,1998 :: 		
0x0608	0xF003EF0C  	GOTO        INT3216EEE
;__Lib_MathDouble.c,1999 :: 		
INT3216EOK:
;__Lib_MathDouble.c,2000 :: 		
0x060C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2001 :: 		
0x060E	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2002 :: 		
0x0610	0xF003EF0C  	GOTO        INT3216EEE
;__Lib_MathDouble.c,2003 :: 		
INT3216EER:
;__Lib_MathDouble.c,2004 :: 		
0x0614	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2005 :: 		
0x0616	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2006 :: 		
INT3216EEE:
;__Lib_MathDouble.c,2007 :: 		
0x0618	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2008 :: 		
0x061A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2009 :: 		
0x061C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2010 :: 		
0x061E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2015 :: 		
0x0620	0x0012      	RETURN      0
; end of _Double2Int
_NRM4032:
;__Lib_MathDouble.c,174 :: 		
;__Lib_MathDouble.c,183 :: 		
0x0622	0xB00C      	BTFSC       R12, 0, 0
;__Lib_MathDouble.c,184 :: 		
0x0624	0xF003EF53  	GOTO        NRMRND4032
;__Lib_MathDouble.c,185 :: 		
0x0628	0xA20C      	BTFSS       R12, 1, 0
;__Lib_MathDouble.c,186 :: 		
0x062A	0xF003EFF9  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,188 :: 		
0x062E	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,189 :: 		
0x0630	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,190 :: 		
0x0632	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,191 :: 		
0x0634	0xF003EF6A  	GOTO        NRM4032A
;__Lib_MathDouble.c,194 :: 		
0x0638	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,195 :: 		
0x063A	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,196 :: 		
0x063C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,197 :: 		
0x063E	0xF003EF35  	GOTO        NORM4032
;__Lib_MathDouble.c,199 :: 		
0x0642	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,200 :: 		
0x0644	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,201 :: 		
0x0646	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,202 :: 		
0x0648	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,204 :: 		
0x064A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,205 :: 		
0x064C	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,206 :: 		
0x064E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,207 :: 		
0x0650	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,208 :: 		
0x0652	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,209 :: 		
0x0654	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,211 :: 		
0x0656	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,212 :: 		
0x0658	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,213 :: 		
0x065A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,214 :: 		
0x065C	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,215 :: 		
0x065E	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,216 :: 		
0x0660	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,218 :: 		
0x0662	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,219 :: 		
0x0664	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,220 :: 		
0x0666	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,222 :: 		
0x0668	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,224 :: 		
NORM4032:
;__Lib_MathDouble.c,225 :: 		
0x066A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,227 :: 		
0x066C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,228 :: 		
0x066E	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,229 :: 		
0x0672	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,230 :: 		
0x0674	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,231 :: 		
0x0676	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,232 :: 		
0x0678	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,233 :: 		
0x067A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,234 :: 		
0x067C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,235 :: 		
0x067E	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,236 :: 		
0x0682	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,237 :: 		
0x0684	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,238 :: 		
0x0686	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,239 :: 		
0x0688	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,240 :: 		
0x068A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,241 :: 		
0x068C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,242 :: 		
0x068E	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,243 :: 		
0x0692	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,244 :: 		
0x0694	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,245 :: 		
0x0696	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,246 :: 		
0x0698	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,247 :: 		
0x069A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,249 :: 		
TNORMUN4032:
;__Lib_MathDouble.c,250 :: 		
0x069C	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,251 :: 		
0x069E	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,252 :: 		
0x06A0	0xF003EFEF  	GOTO        NRM40JPSETFUN32
;__Lib_MathDouble.c,253 :: 		
0x06A4	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,255 :: 		
NRMRND4032:
;__Lib_MathDouble.c,256 :: 		
0x06A6	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,257 :: 		
0x06A8	0xAE08      	BTFSS       R8, 7, 0
;__Lib_MathDouble.c,258 :: 		
0x06AA	0xF003EFF4  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,259 :: 		
0x06AE	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,260 :: 		
0x06B0	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,261 :: 		
0x06B2	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,262 :: 		
0x06B4	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,263 :: 		
0x06B6	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,264 :: 		
0x06B8	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,265 :: 		
0x06BA	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,266 :: 		
0x06BC	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,268 :: 		
0x06BE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,269 :: 		
0x06C0	0xF003EFF4  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,270 :: 		
0x06C4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,271 :: 		
0x06C6	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,272 :: 		
0x06C8	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,273 :: 		
0x06CA	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,274 :: 		
0x06CC	0xF003EFF9  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,275 :: 		
0x06D0	0xF003EFF4  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,277 :: 		
NRM4032A:
;__Lib_MathDouble.c,278 :: 		
0x06D4	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,279 :: 		
0x06D8	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,280 :: 		
0x06DC	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,281 :: 		
0x06E0	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,282 :: 		
0x06E2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,283 :: 		
0x06E4	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,284 :: 		
0x06E6	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,285 :: 		
0x06E8	0xF003EFA1  	GOTO        NRM4032B
;__Lib_MathDouble.c,288 :: 		
0x06EC	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,289 :: 		
0x06EE	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,290 :: 		
0x06F0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,291 :: 		
0x06F2	0xF003EF89  	GOTO        NORM4032A
;__Lib_MathDouble.c,292 :: 		
0x06F6	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,293 :: 		
0x06F8	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,294 :: 		
0x06FA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,295 :: 		
0x06FC	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,297 :: 		
0x06FE	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,298 :: 		
0x0700	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,299 :: 		
0x0702	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,300 :: 		
0x0704	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,301 :: 		
0x0706	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,302 :: 		
0x0708	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,304 :: 		
0x070A	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,305 :: 		
0x070C	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,306 :: 		
0x070E	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,308 :: 		
0x0710	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,310 :: 		
NORM4032A:
;__Lib_MathDouble.c,311 :: 		
0x0712	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,313 :: 		
0x0714	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,314 :: 		
0x0716	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,315 :: 		
0x071A	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,316 :: 		
0x071C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,317 :: 		
0x071E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,318 :: 		
0x0720	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,319 :: 		
0x0722	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,320 :: 		
0x0724	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,321 :: 		
0x0728	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,322 :: 		
0x072A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,323 :: 		
0x072C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,324 :: 		
0x072E	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,325 :: 		
0x0730	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,326 :: 		
0x0732	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,327 :: 		
0x0736	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,328 :: 		
0x0738	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,329 :: 		
0x073A	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,330 :: 		
0x073C	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,331 :: 		
0x073E	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,333 :: 		
NRM4032B:
;__Lib_MathDouble.c,334 :: 		
0x0742	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,335 :: 		
0x0746	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,336 :: 		
0x074A	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,337 :: 		
0x074C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,338 :: 		
0x074E	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,339 :: 		
0x0750	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,340 :: 		
0x0752	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,341 :: 		
0x0754	0xF003EFCE  	GOTO        NRM4032C
;__Lib_MathDouble.c,344 :: 		
0x0758	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,345 :: 		
0x075A	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,346 :: 		
0x075C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,347 :: 		
0x075E	0xF003EFB9  	GOTO        NORM4032B
;__Lib_MathDouble.c,349 :: 		
0x0762	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,350 :: 		
0x0764	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,351 :: 		
0x0766	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,352 :: 		
0x0768	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,354 :: 		
0x076A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,355 :: 		
0x076C	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,356 :: 		
0x076E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,358 :: 		
0x0770	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,360 :: 		
NORM4032B:
;__Lib_MathDouble.c,361 :: 		
0x0772	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,362 :: 		
0x0774	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,363 :: 		
0x0776	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,364 :: 		
0x077A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,365 :: 		
0x077C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,366 :: 		
0x077E	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,367 :: 		
0x0780	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,368 :: 		
0x0782	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,369 :: 		
0x0786	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,370 :: 		
0x0788	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,371 :: 		
0x078A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,372 :: 		
0x078C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,373 :: 		
0x078E	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,374 :: 		
0x0792	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,375 :: 		
0x0794	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,376 :: 		
0x0796	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,377 :: 		
0x0798	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,379 :: 		
NRM4032C:
;__Lib_MathDouble.c,380 :: 		
0x079C	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,381 :: 		
0x07A0	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,382 :: 		
0x07A2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,383 :: 		
0x07A4	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,384 :: 		
0x07A6	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,385 :: 		
0x07A8	0xF003EFFE  	GOTO        NRM40JPRES032
;__Lib_MathDouble.c,388 :: 		
0x07AC	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,389 :: 		
0x07AE	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,390 :: 		
0x07B0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,391 :: 		
0x07B2	0xF003EFDD  	GOTO        NORM4032C
;__Lib_MathDouble.c,392 :: 		
0x07B6	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,394 :: 		
0x07B8	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,396 :: 		
NORM4032C:
;__Lib_MathDouble.c,397 :: 		
0x07BA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,399 :: 		
0x07BC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,400 :: 		
0x07BE	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,401 :: 		
0x07C2	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,402 :: 		
0x07C4	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,403 :: 		
0x07C6	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,404 :: 		
0x07C8	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,405 :: 		
0x07CC	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,406 :: 		
0x07CE	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,407 :: 		
0x07D0	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,408 :: 		
0x07D2	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,409 :: 		
0x07D6	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,410 :: 		
0x07D8	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,411 :: 		
0x07DA	0xF003EF4E  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,413 :: 		
NRM40JPSETFUN32:
;__Lib_MathDouble.c,414 :: 		
0x07DE	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,415 :: 		
0x07E0	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,417 :: 		
0x07E2	0xDC1C      	RCALL       _SETFUN32
;__Lib_MathDouble.c,419 :: 		
0x07E4	0xF004EF01  	GOTO        NRM40EEE
;__Lib_MathDouble.c,420 :: 		
NRM40JPFIXSIGN32:
;__Lib_MathDouble.c,421 :: 		
0x07E8	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,422 :: 		
0x07EA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,424 :: 		
0x07EC	0xDC53      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,426 :: 		
0x07EE	0xF004EF01  	GOTO        NRM40EEE
;__Lib_MathDouble.c,427 :: 		
NRM40JPSETFOV32:
;__Lib_MathDouble.c,428 :: 		
0x07F2	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,429 :: 		
0x07F4	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,431 :: 		
0x07F6	0xDC8C      	RCALL       _SETFOV32
;__Lib_MathDouble.c,433 :: 		
0x07F8	0xF004EF01  	GOTO        NRM40EEE
;__Lib_MathDouble.c,434 :: 		
NRM40JPRES032:
;__Lib_MathDouble.c,435 :: 		
0x07FC	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,436 :: 		
0x07FE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,438 :: 		
0x0800	0xDC1A      	RCALL       _RES032
;__Lib_MathDouble.c,440 :: 		
NRM40EEE:
;__Lib_MathDouble.c,448 :: 		
0x0802	0x0012      	RETURN      0
; end of _NRM4032
_motorLeft_reverse:
;motion.h,44 :: 		void motorLeft_reverse(int pwm){
;motion.h,45 :: 		Motor_Left_Forward = 0;
0x0804	0x9483      	BCF         PORTD, 2 
;motion.h,46 :: 		Motor_Left_Reverse = 1;
0x0806	0x8683      	BSF         PORTD, 3 
;motion.h,47 :: 		PWM2_Set_Duty(pwm);
0x0808	0xF1A3C19F  	MOVFF       FARG_motorLeft_reverse_pwm, FARG_PWM2_Set_Duty_new_duty
0x080C	0xDC4B      	RCALL       _PWM2_Set_Duty
;motion.h,48 :: 		}
0x080E	0x0012      	RETURN      0
; end of _motorLeft_reverse
_getDistanceSonar2:
;sonar.h,32 :: 		unsigned short getDistanceSonar2(char Sensor){
;sonar.h,36 :: 		TMR1H=0x00;
0x0810	0x6ACF      	CLRF        TMR1H 
;sonar.h,37 :: 		TMR1L=0x00;
0x0812	0x6ACE      	CLRF        TMR1L 
;sonar.h,38 :: 		if(Sensor=='M'){
0x0814	0x0101      	MOVLB       1
0x0816	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x0818	0x0A4D      	XORLW       77
0x081A	0xE165      	BNZ         L_getDistanceSonar2632
;sonar.h,40 :: 		TRIG_MIDDLE = 0;
0x081C	0x9A80      	BCF         PORTA, 5 
;sonar.h,41 :: 		delay_us(2);
0x081E	0x0E03      	MOVLW       3
0x0820	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2633:
0x0822	0x2E0D      	DECFSZ      R13, 1, 0
0x0824	0xD7FE      	BRA         L_getDistanceSonar2633
;sonar.h,42 :: 		TRIG_MIDDLE = 1;
0x0826	0x8A80      	BSF         PORTA, 5 
;sonar.h,43 :: 		delay_us(5);
0x0828	0x0E08      	MOVLW       8
0x082A	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2634:
0x082C	0x2E0D      	DECFSZ      R13, 1, 0
0x082E	0xD7FE      	BRA         L_getDistanceSonar2634
;sonar.h,44 :: 		TRIG_MIDDLE =0;
0x0830	0x9A80      	BCF         PORTA, 5 
;sonar.h,46 :: 		while(!ECHO_MIDDLE)
L_getDistanceSonar2635:
0x0832	0xB084      	BTFSC       PORTE, 0 
0x0834	0xD012      	BRA         L_getDistanceSonar2636
;sonar.h,48 :: 		L=(TMR1L);
0x0836	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x083A	0x0E00      	MOVLW       0
0x083C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,49 :: 		H=(TMR1H);
0x083E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0842	0x0E00      	MOVLW       0
0x0844	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,50 :: 		if(H>0xF0)
0x0846	0x0E00      	MOVLW       0
0x0848	0x6E00      	MOVWF       R0 
0x084A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x084C	0x5C00      	SUBWF       R0, 0 
0x084E	0xE102      	BNZ         L__getDistanceSonar21033
0x0850	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0852	0x08F0      	SUBLW       240
L__getDistanceSonar21033:
0x0854	0xE201      	BC          L_getDistanceSonar2637
;sonar.h,51 :: 		break;
0x0856	0xD001      	BRA         L_getDistanceSonar2636
L_getDistanceSonar2637:
;sonar.h,52 :: 		}
0x0858	0xD7EC      	BRA         L_getDistanceSonar2635
L_getDistanceSonar2636:
;sonar.h,53 :: 		TMR1H=0;
0x085A	0x6ACF      	CLRF        TMR1H 
;sonar.h,54 :: 		TMR1L=0;
0x085C	0x6ACE      	CLRF        TMR1L 
;sonar.h,55 :: 		T1CON.TMR1ON=1;
0x085E	0x80CD      	BSF         T1CON, 0 
;sonar.h,56 :: 		while(ECHO_MIDDLE)
L_getDistanceSonar2638:
0x0860	0xA084      	BTFSS       PORTE, 0 
0x0862	0xD013      	BRA         L_getDistanceSonar2639
;sonar.h,58 :: 		L=(TMR1L);
0x0864	0x0101      	MOVLB       1
0x0866	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x086A	0x0E00      	MOVLW       0
0x086C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,59 :: 		H=(TMR1H);
0x086E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0872	0x0E00      	MOVLW       0
0x0874	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,60 :: 		if(H>0xF0)
0x0876	0x0E00      	MOVLW       0
0x0878	0x6E00      	MOVWF       R0 
0x087A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x087C	0x5C00      	SUBWF       R0, 0 
0x087E	0xE102      	BNZ         L__getDistanceSonar21034
0x0880	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0882	0x08F0      	SUBLW       240
L__getDistanceSonar21034:
0x0884	0xE201      	BC          L_getDistanceSonar2640
;sonar.h,61 :: 		break;
0x0886	0xD001      	BRA         L_getDistanceSonar2639
L_getDistanceSonar2640:
;sonar.h,62 :: 		}
0x0888	0xD7EB      	BRA         L_getDistanceSonar2638
L_getDistanceSonar2639:
0x088A	0x0101      	MOVLB       1
;sonar.h,63 :: 		L=(TMR1L);
0x088C	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0890	0x0E00      	MOVLW       0
0x0892	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,64 :: 		H=(TMR1H);
0x0894	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0898	0x0E00      	MOVLW       0
0x089A	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,65 :: 		x=(H*256 + L)*0.2;
0x089C	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x08A0	0x6A00      	CLRF        R0 
0x08A2	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x08A4	0x2600      	ADDWF       R0, 1 
0x08A6	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x08A8	0x2201      	ADDWFC      R1, 1 
0x08AA	0xDCE2      	RCALL       _Word2Double
0x08AC	0x0ECD      	MOVLW       205
0x08AE	0x6E04      	MOVWF       R4 
0x08B0	0x0ECC      	MOVLW       204
0x08B2	0x6E05      	MOVWF       R5 
0x08B4	0x0E4C      	MOVLW       76
0x08B6	0x6E06      	MOVWF       R6 
0x08B8	0x0E7C      	MOVLW       124
0x08BA	0x6E07      	MOVWF       R7 
0x08BC	0xDCFF      	RCALL       _Mul_32x32_FP
;sonar.h,66 :: 		y= (x/2)/29.1;
0x08BE	0x0E00      	MOVLW       0
0x08C0	0x6E04      	MOVWF       R4 
0x08C2	0x0E00      	MOVLW       0
0x08C4	0x6E05      	MOVWF       R5 
0x08C6	0x0E00      	MOVLW       0
0x08C8	0x6E06      	MOVWF       R6 
0x08CA	0x0E80      	MOVLW       128
0x08CC	0x6E07      	MOVWF       R7 
0x08CE	0xDD86      	RCALL       _Div_32x32_FP
0x08D0	0x0ECD      	MOVLW       205
0x08D2	0x6E04      	MOVWF       R4 
0x08D4	0x0ECC      	MOVLW       204
0x08D6	0x6E05      	MOVWF       R5 
0x08D8	0x0E68      	MOVLW       104
0x08DA	0x6E06      	MOVWF       R6 
0x08DC	0x0E83      	MOVLW       131
0x08DE	0x6E07      	MOVWF       R7 
0x08E0	0xDD7D      	RCALL       _Div_32x32_FP
;sonar.h,67 :: 		return (int)y;
0x08E2	0xDE36      	RCALL       _Double2Int
0x08E4	0x0012      	RETURN      0
;sonar.h,68 :: 		}
L_getDistanceSonar2632:
;sonar.h,69 :: 		else if(Sensor == 'R'){
0x08E6	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x08E8	0x0A52      	XORLW       82
0x08EA	0xE164      	BNZ         L_getDistanceSonar2642
;sonar.h,70 :: 		TRIG_RIGHT = 0;
0x08EC	0x9080      	BCF         PORTA, 0 
;sonar.h,71 :: 		delay_us(2);
0x08EE	0x0E03      	MOVLW       3
0x08F0	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2643:
0x08F2	0x2E0D      	DECFSZ      R13, 1, 0
0x08F4	0xD7FE      	BRA         L_getDistanceSonar2643
;sonar.h,72 :: 		TRIG_RIGHT = 1;
0x08F6	0x8080      	BSF         PORTA, 0 
;sonar.h,73 :: 		delay_us(5);
0x08F8	0x0E08      	MOVLW       8
0x08FA	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2644:
0x08FC	0x2E0D      	DECFSZ      R13, 1, 0
0x08FE	0xD7FE      	BRA         L_getDistanceSonar2644
;sonar.h,74 :: 		TRIG_RIGHT =0;
0x0900	0x9080      	BCF         PORTA, 0 
;sonar.h,76 :: 		while(!ECHO_RIGHT)
L_getDistanceSonar2645:
0x0902	0xB280      	BTFSC       PORTA, 1 
0x0904	0xD012      	BRA         L_getDistanceSonar2646
;sonar.h,78 :: 		L=(TMR1L);
0x0906	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x090A	0x0E00      	MOVLW       0
0x090C	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,79 :: 		H=(TMR1H);
0x090E	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0912	0x0E00      	MOVLW       0
0x0914	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,80 :: 		if(H>0xF0)
0x0916	0x0E00      	MOVLW       0
0x0918	0x6E00      	MOVWF       R0 
0x091A	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x091C	0x5C00      	SUBWF       R0, 0 
0x091E	0xE102      	BNZ         L__getDistanceSonar21035
0x0920	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0922	0x08F0      	SUBLW       240
L__getDistanceSonar21035:
0x0924	0xE201      	BC          L_getDistanceSonar2647
;sonar.h,81 :: 		break;
0x0926	0xD001      	BRA         L_getDistanceSonar2646
L_getDistanceSonar2647:
;sonar.h,82 :: 		}
0x0928	0xD7EC      	BRA         L_getDistanceSonar2645
L_getDistanceSonar2646:
;sonar.h,83 :: 		TMR1H=0;
0x092A	0x6ACF      	CLRF        TMR1H 
;sonar.h,84 :: 		TMR1L=0;
0x092C	0x6ACE      	CLRF        TMR1L 
;sonar.h,85 :: 		T1CON.TMR1ON=1;
0x092E	0x80CD      	BSF         T1CON, 0 
;sonar.h,86 :: 		while(ECHO_RIGHT)
L_getDistanceSonar2648:
0x0930	0xA280      	BTFSS       PORTA, 1 
0x0932	0xD012      	BRA         L_getDistanceSonar2649
;sonar.h,88 :: 		L=(TMR1L);
0x0934	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0938	0x0E00      	MOVLW       0
0x093A	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,89 :: 		H=(TMR1H);
0x093C	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0940	0x0E00      	MOVLW       0
0x0942	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,90 :: 		if(H>0xF0)
0x0944	0x0E00      	MOVLW       0
0x0946	0x6E00      	MOVWF       R0 
0x0948	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x094A	0x5C00      	SUBWF       R0, 0 
0x094C	0xE102      	BNZ         L__getDistanceSonar21036
0x094E	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0950	0x08F0      	SUBLW       240
L__getDistanceSonar21036:
0x0952	0xE201      	BC          L_getDistanceSonar2650
;sonar.h,91 :: 		break;
0x0954	0xD001      	BRA         L_getDistanceSonar2649
L_getDistanceSonar2650:
;sonar.h,92 :: 		}
0x0956	0xD7EC      	BRA         L_getDistanceSonar2648
L_getDistanceSonar2649:
0x0958	0x0101      	MOVLB       1
;sonar.h,93 :: 		L=(TMR1L);
0x095A	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x095E	0x0E00      	MOVLW       0
0x0960	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,94 :: 		H=(TMR1H);
0x0962	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0966	0x0E00      	MOVLW       0
0x0968	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,95 :: 		x=(H*256 + L)*0.2;
0x096A	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x096E	0x6A00      	CLRF        R0 
0x0970	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x0972	0x2600      	ADDWF       R0, 1 
0x0974	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x0976	0x2201      	ADDWFC      R1, 1 
0x0978	0xDC7B      	RCALL       _Word2Double
0x097A	0x0ECD      	MOVLW       205
0x097C	0x6E04      	MOVWF       R4 
0x097E	0x0ECC      	MOVLW       204
0x0980	0x6E05      	MOVWF       R5 
0x0982	0x0E4C      	MOVLW       76
0x0984	0x6E06      	MOVWF       R6 
0x0986	0x0E7C      	MOVLW       124
0x0988	0x6E07      	MOVWF       R7 
0x098A	0xDC98      	RCALL       _Mul_32x32_FP
;sonar.h,96 :: 		y= (x/2)/29.1;
0x098C	0x0E00      	MOVLW       0
0x098E	0x6E04      	MOVWF       R4 
0x0990	0x0E00      	MOVLW       0
0x0992	0x6E05      	MOVWF       R5 
0x0994	0x0E00      	MOVLW       0
0x0996	0x6E06      	MOVWF       R6 
0x0998	0x0E80      	MOVLW       128
0x099A	0x6E07      	MOVWF       R7 
0x099C	0xDD1F      	RCALL       _Div_32x32_FP
0x099E	0x0ECD      	MOVLW       205
0x09A0	0x6E04      	MOVWF       R4 
0x09A2	0x0ECC      	MOVLW       204
0x09A4	0x6E05      	MOVWF       R5 
0x09A6	0x0E68      	MOVLW       104
0x09A8	0x6E06      	MOVWF       R6 
0x09AA	0x0E83      	MOVLW       131
0x09AC	0x6E07      	MOVWF       R7 
0x09AE	0xDD16      	RCALL       _Div_32x32_FP
;sonar.h,97 :: 		return (int)y;
0x09B0	0xDDCF      	RCALL       _Double2Int
0x09B2	0x0012      	RETURN      0
;sonar.h,98 :: 		}
L_getDistanceSonar2642:
;sonar.h,99 :: 		else if(Sensor == 'L'){
0x09B4	0x519A      	MOVF        FARG_getDistanceSonar2_Sensor, 0, 1
0x09B6	0x0A4C      	XORLW       76
0x09B8	0xE164      	BNZ         L_getDistanceSonar2652
;sonar.h,100 :: 		TRIG_LEFT = 0;
0x09BA	0x9480      	BCF         PORTA, 2 
;sonar.h,101 :: 		delay_us(2);
0x09BC	0x0E03      	MOVLW       3
0x09BE	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2653:
0x09C0	0x2E0D      	DECFSZ      R13, 1, 0
0x09C2	0xD7FE      	BRA         L_getDistanceSonar2653
;sonar.h,102 :: 		TRIG_LEFT = 1;
0x09C4	0x8480      	BSF         PORTA, 2 
;sonar.h,103 :: 		delay_us(5);
0x09C6	0x0E08      	MOVLW       8
0x09C8	0x6E0D      	MOVWF       R13, 0
L_getDistanceSonar2654:
0x09CA	0x2E0D      	DECFSZ      R13, 1, 0
0x09CC	0xD7FE      	BRA         L_getDistanceSonar2654
;sonar.h,104 :: 		TRIG_LEFT =0;
0x09CE	0x9480      	BCF         PORTA, 2 
;sonar.h,106 :: 		while(!ECHO_LEFT)
L_getDistanceSonar2655:
0x09D0	0xB680      	BTFSC       PORTA, 3 
0x09D2	0xD012      	BRA         L_getDistanceSonar2656
;sonar.h,108 :: 		L=(TMR1L);
0x09D4	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x09D8	0x0E00      	MOVLW       0
0x09DA	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,109 :: 		H=(TMR1H);
0x09DC	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x09E0	0x0E00      	MOVLW       0
0x09E2	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,110 :: 		if(H>0xF0)
0x09E4	0x0E00      	MOVLW       0
0x09E6	0x6E00      	MOVWF       R0 
0x09E8	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x09EA	0x5C00      	SUBWF       R0, 0 
0x09EC	0xE102      	BNZ         L__getDistanceSonar21037
0x09EE	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x09F0	0x08F0      	SUBLW       240
L__getDistanceSonar21037:
0x09F2	0xE201      	BC          L_getDistanceSonar2657
;sonar.h,111 :: 		break;
0x09F4	0xD001      	BRA         L_getDistanceSonar2656
L_getDistanceSonar2657:
;sonar.h,112 :: 		}
0x09F6	0xD7EC      	BRA         L_getDistanceSonar2655
L_getDistanceSonar2656:
;sonar.h,113 :: 		TMR1H=0;
0x09F8	0x6ACF      	CLRF        TMR1H 
;sonar.h,114 :: 		TMR1L=0;
0x09FA	0x6ACE      	CLRF        TMR1L 
;sonar.h,115 :: 		T1CON.TMR1ON=1;
0x09FC	0x80CD      	BSF         T1CON, 0 
;sonar.h,116 :: 		while(ECHO_LEFT)
L_getDistanceSonar2658:
0x09FE	0xA680      	BTFSS       PORTA, 3 
0x0A00	0xD012      	BRA         L_getDistanceSonar2659
;sonar.h,118 :: 		L=(TMR1L);
0x0A02	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0A06	0x0E00      	MOVLW       0
0x0A08	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,119 :: 		H=(TMR1H);
0x0A0A	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0A0E	0x0E00      	MOVLW       0
0x0A10	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,120 :: 		if(H>0xF0)
0x0A12	0x0E00      	MOVLW       0
0x0A14	0x6E00      	MOVWF       R0 
0x0A16	0x519E      	MOVF        getDistanceSonar2_H_L0+1, 0, 1
0x0A18	0x5C00      	SUBWF       R0, 0 
0x0A1A	0xE102      	BNZ         L__getDistanceSonar21038
0x0A1C	0x519D      	MOVF        getDistanceSonar2_H_L0, 0, 1
0x0A1E	0x08F0      	SUBLW       240
L__getDistanceSonar21038:
0x0A20	0xE201      	BC          L_getDistanceSonar2660
;sonar.h,121 :: 		break;
0x0A22	0xD001      	BRA         L_getDistanceSonar2659
L_getDistanceSonar2660:
;sonar.h,122 :: 		}
0x0A24	0xD7EC      	BRA         L_getDistanceSonar2658
L_getDistanceSonar2659:
0x0A26	0x0101      	MOVLB       1
;sonar.h,123 :: 		L=(TMR1L);
0x0A28	0xF19BCFCE  	MOVFF       TMR1L, getDistanceSonar2_L_L0
0x0A2C	0x0E00      	MOVLW       0
0x0A2E	0x6F9C      	MOVWF       getDistanceSonar2_L_L0+1, 1
;sonar.h,124 :: 		H=(TMR1H);
0x0A30	0xF19DCFCF  	MOVFF       TMR1H, getDistanceSonar2_H_L0
0x0A34	0x0E00      	MOVLW       0
0x0A36	0x6F9E      	MOVWF       getDistanceSonar2_H_L0+1, 1
;sonar.h,125 :: 		x=(H*256 + L)*0.2;
0x0A38	0xF001C19D  	MOVFF       getDistanceSonar2_H_L0, R1
0x0A3C	0x6A00      	CLRF        R0 
0x0A3E	0x519B      	MOVF        getDistanceSonar2_L_L0, 0, 1
0x0A40	0x2600      	ADDWF       R0, 1 
0x0A42	0x519C      	MOVF        getDistanceSonar2_L_L0+1, 0, 1
0x0A44	0x2201      	ADDWFC      R1, 1 
0x0A46	0xDC14      	RCALL       _Word2Double
0x0A48	0x0ECD      	MOVLW       205
0x0A4A	0x6E04      	MOVWF       R4 
0x0A4C	0x0ECC      	MOVLW       204
0x0A4E	0x6E05      	MOVWF       R5 
0x0A50	0x0E4C      	MOVLW       76
0x0A52	0x6E06      	MOVWF       R6 
0x0A54	0x0E7C      	MOVLW       124
0x0A56	0x6E07      	MOVWF       R7 
0x0A58	0xDC31      	RCALL       _Mul_32x32_FP
;sonar.h,126 :: 		y= (x/2)/29.1;
0x0A5A	0x0E00      	MOVLW       0
0x0A5C	0x6E04      	MOVWF       R4 
0x0A5E	0x0E00      	MOVLW       0
0x0A60	0x6E05      	MOVWF       R5 
0x0A62	0x0E00      	MOVLW       0
0x0A64	0x6E06      	MOVWF       R6 
0x0A66	0x0E80      	MOVLW       128
0x0A68	0x6E07      	MOVWF       R7 
0x0A6A	0xDCB8      	RCALL       _Div_32x32_FP
0x0A6C	0x0ECD      	MOVLW       205
0x0A6E	0x6E04      	MOVWF       R4 
0x0A70	0x0ECC      	MOVLW       204
0x0A72	0x6E05      	MOVWF       R5 
0x0A74	0x0E68      	MOVLW       104
0x0A76	0x6E06      	MOVWF       R6 
0x0A78	0x0E83      	MOVLW       131
0x0A7A	0x6E07      	MOVWF       R7 
0x0A7C	0xDCAF      	RCALL       _Div_32x32_FP
;sonar.h,127 :: 		return (int)y;
0x0A7E	0xDD68      	RCALL       _Double2Int
0x0A80	0x0012      	RETURN      0
;sonar.h,128 :: 		}
L_getDistanceSonar2652:
;sonar.h,129 :: 		}
0x0A82	0x0012      	RETURN      0
; end of _getDistanceSonar2
_Add_32x32_FP:
;__Lib_MathDouble.c,563 :: 		
;__Lib_MathDouble.c,578 :: 		
0x0A84	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,579 :: 		
0x0A86	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,580 :: 		
0x0A88	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,582 :: 		
0x0A8A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,583 :: 		
0x0A8C	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,584 :: 		
0x0A8E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,586 :: 		
0x0A90	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,587 :: 		
0x0A92	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,588 :: 		
0x0A94	0xF006EF35  	GOTO        USEA32
;__Lib_MathDouble.c,591 :: 		
0x0A98	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,592 :: 		
0x0A9A	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,593 :: 		
0x0A9C	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,594 :: 		
0x0A9E	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,596 :: 		
0x0AA0	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,597 :: 		
0x0AA2	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,598 :: 		
0x0AA4	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,599 :: 		
0x0AA6	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,601 :: 		
0x0AA8	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,602 :: 		
0x0AAA	0x640B      	CPFSGT      R11, 0
;__Lib_MathDouble.c,603 :: 		
0x0AAC	0xF005EF85  	GOTO        BRETURN32
;__Lib_MathDouble.c,604 :: 		
0x0AB0	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,605 :: 		
0x0AB2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,606 :: 		
0x0AB4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,607 :: 		
0x0AB6	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,609 :: 		
0x0ABA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,610 :: 		
0x0ABC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,611 :: 		
0x0ABE	0xF005EFF4  	GOTO        BNIB32
;__Lib_MathDouble.c,613 :: 		
0x0AC2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,614 :: 		
0x0AC4	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,615 :: 		
0x0AC8	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,616 :: 		
0x0ACC	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,617 :: 		
0x0AD0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,618 :: 		
0x0AD2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,619 :: 		
0x0AD4	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,621 :: 		
0x0AD8	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,622 :: 		
0x0ADA	0xF005EFC9  	GOTO        BNIB32A
;__Lib_MathDouble.c,623 :: 		
0x0ADE	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,624 :: 		
0x0AE0	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,625 :: 		
0x0AE4	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,626 :: 		
0x0AE8	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,627 :: 		
0x0AEA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,628 :: 		
0x0AEC	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,630 :: 		
0x0AF0	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,631 :: 		
0x0AF2	0xF005EFA7  	GOTO        BNIB32B
;__Lib_MathDouble.c,632 :: 		
0x0AF6	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,633 :: 		
0x0AF8	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,634 :: 		
0x0AFC	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,635 :: 		
0x0AFE	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,636 :: 		
0x0B00	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,638 :: 		
0x0B04	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,639 :: 		
0x0B06	0xF005EF8E  	GOTO        BNIB32C
;__Lib_MathDouble.c,641 :: 		
BRETURN32:
;__Lib_MathDouble.c,642 :: 		
0x0B0A	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,643 :: 		
0x0B0E	0xF001C005  	MOVFF       R5, R1
;__Lib_MathDouble.c,644 :: 		
0x0B12	0xF000C004  	MOVFF       R4, R0
;__Lib_MathDouble.c,645 :: 		
0x0B16	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,646 :: 		
0x0B18	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,648 :: 		
BNIB32C:
;__Lib_MathDouble.c,649 :: 		
0x0B1C	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,650 :: 		
0x0B1E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,651 :: 		
0x0B20	0xF005EF99  	GOTO        BLOOP32C
;__Lib_MathDouble.c,652 :: 		
0x0B24	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,653 :: 		
0x0B26	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,654 :: 		
0x0B28	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,655 :: 		
0x0B2A	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,656 :: 		
0x0B2C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,657 :: 		
0x0B2E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,659 :: 		
BLOOP32C:
;__Lib_MathDouble.c,660 :: 		
0x0B32	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,661 :: 		
0x0B34	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,662 :: 		
0x0B36	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,663 :: 		
0x0B38	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,664 :: 		
0x0B3C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,665 :: 		
0x0B3E	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,666 :: 		
0x0B40	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,667 :: 		
0x0B42	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,668 :: 		
0x0B46	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,669 :: 		
0x0B48	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,670 :: 		
0x0B4A	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,672 :: 		
BNIB32B:
;__Lib_MathDouble.c,673 :: 		
0x0B4E	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,674 :: 		
0x0B50	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,675 :: 		
0x0B52	0xF005EFB8  	GOTO        BLOOP32B
;__Lib_MathDouble.c,676 :: 		
0x0B56	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,677 :: 		
0x0B58	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,678 :: 		
0x0B5A	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,679 :: 		
0x0B5C	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,680 :: 		
0x0B5E	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,681 :: 		
0x0B60	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,682 :: 		
0x0B62	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,683 :: 		
0x0B64	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,684 :: 		
0x0B66	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,685 :: 		
0x0B68	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,686 :: 		
0x0B6A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,687 :: 		
0x0B6C	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,689 :: 		
BLOOP32B:
;__Lib_MathDouble.c,690 :: 		
0x0B70	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,691 :: 		
0x0B72	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,692 :: 		
0x0B74	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,693 :: 		
0x0B76	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,694 :: 		
0x0B78	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,695 :: 		
0x0B7C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,696 :: 		
0x0B7E	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,697 :: 		
0x0B80	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,698 :: 		
0x0B82	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,699 :: 		
0x0B84	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,700 :: 		
0x0B88	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,701 :: 		
0x0B8A	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,702 :: 		
0x0B8C	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,703 :: 		
0x0B8E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,705 :: 		
BNIB32A:
;__Lib_MathDouble.c,706 :: 		
0x0B92	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,707 :: 		
0x0B94	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,708 :: 		
0x0B96	0xF005EFE0  	GOTO        BLOOP32A
;__Lib_MathDouble.c,709 :: 		
0x0B9A	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,710 :: 		
0x0B9C	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,711 :: 		
0x0B9E	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,712 :: 		
0x0BA0	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,713 :: 		
0x0BA2	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,714 :: 		
0x0BA4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,715 :: 		
0x0BA6	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,716 :: 		
0x0BA8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,717 :: 		
0x0BAA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,718 :: 		
0x0BAC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,719 :: 		
0x0BAE	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,720 :: 		
0x0BB0	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,721 :: 		
0x0BB2	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,722 :: 		
0x0BB4	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,723 :: 		
0x0BB6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,724 :: 		
0x0BB8	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,725 :: 		
0x0BBA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,726 :: 		
0x0BBC	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,728 :: 		
BLOOP32A:
;__Lib_MathDouble.c,729 :: 		
0x0BC0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,730 :: 		
0x0BC2	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,731 :: 		
0x0BC4	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,732 :: 		
0x0BC6	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,733 :: 		
0x0BC8	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,734 :: 		
0x0BCA	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,735 :: 		
0x0BCE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,736 :: 		
0x0BD0	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,737 :: 		
0x0BD2	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,738 :: 		
0x0BD4	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,739 :: 		
0x0BD6	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,740 :: 		
0x0BD8	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,741 :: 		
0x0BDC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,742 :: 		
0x0BDE	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,743 :: 		
0x0BE0	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,744 :: 		
0x0BE2	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,745 :: 		
0x0BE4	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,747 :: 		
BNIB32:
;__Lib_MathDouble.c,748 :: 		
0x0BE8	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,749 :: 		
0x0BEA	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,750 :: 		
0x0BEC	0xF006EF11  	GOTO        BLOOP32
;__Lib_MathDouble.c,751 :: 		
0x0BF0	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,752 :: 		
0x0BF2	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,753 :: 		
0x0BF4	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,754 :: 		
0x0BF6	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,755 :: 		
0x0BF8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,756 :: 		
0x0BFA	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,757 :: 		
0x0BFC	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,758 :: 		
0x0BFE	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,759 :: 		
0x0C00	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,760 :: 		
0x0C02	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,761 :: 		
0x0C04	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,762 :: 		
0x0C06	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,763 :: 		
0x0C08	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,764 :: 		
0x0C0A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,765 :: 		
0x0C0C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,766 :: 		
0x0C0E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,767 :: 		
0x0C10	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,768 :: 		
0x0C12	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,769 :: 		
0x0C14	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,770 :: 		
0x0C16	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,771 :: 		
0x0C18	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,772 :: 		
0x0C1A	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,773 :: 		
0x0C1C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,774 :: 		
0x0C1E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,776 :: 		
BLOOP32:
;__Lib_MathDouble.c,777 :: 		
0x0C22	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,778 :: 		
0x0C24	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,779 :: 		
0x0C26	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,780 :: 		
0x0C28	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,781 :: 		
0x0C2A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,782 :: 		
0x0C2C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,783 :: 		
0x0C2E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,784 :: 		
0x0C32	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,785 :: 		
0x0C34	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,786 :: 		
0x0C36	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,787 :: 		
0x0C38	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,788 :: 		
0x0C3A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,789 :: 		
0x0C3C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,790 :: 		
0x0C3E	0xF006EF26  	GOTO        BLIGNED32
;__Lib_MathDouble.c,791 :: 		
0x0C42	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,792 :: 		
0x0C44	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,793 :: 		
0x0C46	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,794 :: 		
0x0C48	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,795 :: 		
0x0C4A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,797 :: 		
BLIGNED32:
;__Lib_MathDouble.c,798 :: 		
0x0C4C	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,799 :: 		
0x0C4E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,800 :: 		
0x0C50	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,801 :: 		
0x0C52	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,802 :: 		
0x0C56	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,803 :: 		
0x0C58	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,804 :: 		
0x0C5A	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,805 :: 		
0x0C5C	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,806 :: 		
0x0C5E	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,807 :: 		
0x0C60	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,808 :: 		
0x0C62	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,809 :: 		
0x0C64	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,810 :: 		
0x0C66	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,812 :: 		
USEA32:
;__Lib_MathDouble.c,813 :: 		
0x0C6A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,814 :: 		
0x0C6C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,815 :: 		
0x0C6E	0xF006EF3B  	GOTO        BNE032
;__Lib_MathDouble.c,816 :: 		
0x0C72	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,818 :: 		
BNE032:
;__Lib_MathDouble.c,819 :: 		
0x0C76	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,820 :: 		
0x0C78	0xF00AC002  	MOVFF       R2, R10
;__Lib_MathDouble.c,821 :: 		
0x0C7C	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,822 :: 		
0x0C7E	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,824 :: 		
0x0C80	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,825 :: 		
0x0C82	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,826 :: 		
0x0C84	0x6E07      	MOVWF       R7, 0
;__Lib_MathDouble.c,827 :: 		
0x0C86	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,828 :: 		
0x0C88	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,830 :: 		
0x0C8C	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,831 :: 		
0x0C8E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,832 :: 		
0x0C90	0xF006EFDB  	GOTO        ANIB32
;__Lib_MathDouble.c,833 :: 		
0x0C94	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,834 :: 		
0x0C96	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,835 :: 		
0x0C98	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,836 :: 		
0x0C9A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,837 :: 		
0x0C9C	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,838 :: 		
0x0C9E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,839 :: 		
0x0CA0	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,840 :: 		
0x0CA2	0x6A06      	CLRF        R6, 0
;__Lib_MathDouble.c,841 :: 		
0x0CA4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,842 :: 		
0x0CA6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,844 :: 		
0x0CAA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,845 :: 		
0x0CAC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,846 :: 		
0x0CAE	0xF006EFB0  	GOTO        ANIB32A
;__Lib_MathDouble.c,847 :: 		
0x0CB2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,848 :: 		
0x0CB4	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,849 :: 		
0x0CB6	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,850 :: 		
0x0CB8	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,851 :: 		
0x0CBA	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,852 :: 		
0x0CBC	0x6A05      	CLRF        R5, 0
;__Lib_MathDouble.c,853 :: 		
0x0CBE	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,854 :: 		
0x0CC0	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,856 :: 		
0x0CC4	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,857 :: 		
0x0CC6	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,858 :: 		
0x0CC8	0xF006EF8E  	GOTO        ANIB32B
;__Lib_MathDouble.c,859 :: 		
0x0CCC	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,860 :: 		
0x0CCE	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,861 :: 		
0x0CD0	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,862 :: 		
0x0CD2	0x6A04      	CLRF        R4, 0
;__Lib_MathDouble.c,863 :: 		
0x0CD4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,864 :: 		
0x0CD6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,866 :: 		
0x0CDA	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,867 :: 		
0x0CDC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,868 :: 		
0x0CDE	0xF006EF75  	GOTO        ANIB32C
;__Lib_MathDouble.c,870 :: 		
0x0CE2	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,871 :: 		
0x0CE6	0xF007EF52  	GOTO        ADDEOK
;__Lib_MathDouble.c,873 :: 		
ANIB32C:
;__Lib_MathDouble.c,874 :: 		
0x0CEA	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,875 :: 		
0x0CEC	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,876 :: 		
0x0CEE	0xF006EF80  	GOTO        ALOOP32C
;__Lib_MathDouble.c,877 :: 		
0x0CF2	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,878 :: 		
0x0CF4	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,879 :: 		
0x0CF6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,880 :: 		
0x0CF8	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,881 :: 		
0x0CFA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,882 :: 		
0x0CFC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,884 :: 		
ALOOP32C:
;__Lib_MathDouble.c,885 :: 		
0x0D00	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,886 :: 		
0x0D02	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,887 :: 		
0x0D04	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,888 :: 		
0x0D06	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,889 :: 		
0x0D0A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,890 :: 		
0x0D0C	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,891 :: 		
0x0D0E	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,892 :: 		
0x0D10	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,893 :: 		
0x0D14	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,894 :: 		
0x0D16	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,895 :: 		
0x0D18	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,897 :: 		
ANIB32B:
;__Lib_MathDouble.c,898 :: 		
0x0D1C	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,899 :: 		
0x0D1E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,900 :: 		
0x0D20	0xF006EF9F  	GOTO        ALOOP32B
;__Lib_MathDouble.c,901 :: 		
0x0D24	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,902 :: 		
0x0D26	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,903 :: 		
0x0D28	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,904 :: 		
0x0D2A	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,905 :: 		
0x0D2C	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,906 :: 		
0x0D2E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,907 :: 		
0x0D30	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,908 :: 		
0x0D32	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,909 :: 		
0x0D34	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,910 :: 		
0x0D36	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,911 :: 		
0x0D38	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,912 :: 		
0x0D3A	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,914 :: 		
ALOOP32B:
;__Lib_MathDouble.c,915 :: 		
0x0D3E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,916 :: 		
0x0D40	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,917 :: 		
0x0D42	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,918 :: 		
0x0D44	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,919 :: 		
0x0D46	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,920 :: 		
0x0D4A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,921 :: 		
0x0D4C	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,922 :: 		
0x0D4E	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,923 :: 		
0x0D50	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,924 :: 		
0x0D52	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,925 :: 		
0x0D56	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,926 :: 		
0x0D58	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,927 :: 		
0x0D5A	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,928 :: 		
0x0D5C	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,930 :: 		
ANIB32A:
;__Lib_MathDouble.c,931 :: 		
0x0D60	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,932 :: 		
0x0D62	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,933 :: 		
0x0D64	0xF006EFC7  	GOTO        ALOOP32A
;__Lib_MathDouble.c,934 :: 		
0x0D68	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,935 :: 		
0x0D6A	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,936 :: 		
0x0D6C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,937 :: 		
0x0D6E	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,938 :: 		
0x0D70	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,939 :: 		
0x0D72	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,940 :: 		
0x0D74	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,941 :: 		
0x0D76	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,942 :: 		
0x0D78	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,943 :: 		
0x0D7A	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,944 :: 		
0x0D7C	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,945 :: 		
0x0D7E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,946 :: 		
0x0D80	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,947 :: 		
0x0D82	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,948 :: 		
0x0D84	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,949 :: 		
0x0D86	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,950 :: 		
0x0D88	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,951 :: 		
0x0D8A	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,953 :: 		
ALOOP32A:
;__Lib_MathDouble.c,954 :: 		
0x0D8E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,955 :: 		
0x0D90	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,956 :: 		
0x0D92	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,957 :: 		
0x0D94	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,958 :: 		
0x0D96	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,959 :: 		
0x0D98	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,960 :: 		
0x0D9C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,961 :: 		
0x0D9E	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,962 :: 		
0x0DA0	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,963 :: 		
0x0DA2	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,964 :: 		
0x0DA4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,965 :: 		
0x0DA6	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,966 :: 		
0x0DAA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,967 :: 		
0x0DAC	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,968 :: 		
0x0DAE	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,969 :: 		
0x0DB0	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,970 :: 		
0x0DB2	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,972 :: 		
ANIB32:
;__Lib_MathDouble.c,973 :: 		
0x0DB6	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,974 :: 		
0x0DB8	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,975 :: 		
0x0DBA	0xF006EFF8  	GOTO        ALOOP32
;__Lib_MathDouble.c,976 :: 		
0x0DBE	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,977 :: 		
0x0DC0	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,978 :: 		
0x0DC2	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,979 :: 		
0x0DC4	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,980 :: 		
0x0DC6	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,981 :: 		
0x0DC8	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,982 :: 		
0x0DCA	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,983 :: 		
0x0DCC	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,984 :: 		
0x0DCE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,985 :: 		
0x0DD0	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,986 :: 		
0x0DD2	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,987 :: 		
0x0DD4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,988 :: 		
0x0DD6	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,989 :: 		
0x0DD8	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,990 :: 		
0x0DDA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,991 :: 		
0x0DDC	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,992 :: 		
0x0DDE	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,993 :: 		
0x0DE0	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,994 :: 		
0x0DE2	0x2605      	ADDWF       R5, 1, 0
;__Lib_MathDouble.c,995 :: 		
0x0DE4	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,996 :: 		
0x0DE6	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,997 :: 		
0x0DE8	0x6E06      	MOVWF       R6, 0
;__Lib_MathDouble.c,998 :: 		
0x0DEA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,999 :: 		
0x0DEC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1001 :: 		
ALOOP32:
;__Lib_MathDouble.c,1002 :: 		
0x0DF0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1003 :: 		
0x0DF2	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1004 :: 		
0x0DF4	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1005 :: 		
0x0DF6	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1006 :: 		
0x0DF8	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1007 :: 		
0x0DFA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1008 :: 		
0x0DFC	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1009 :: 		
0x0E00	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1010 :: 		
0x0E02	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1011 :: 		
0x0E04	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1012 :: 		
0x0E06	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1013 :: 		
0x0E08	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1014 :: 		
0x0E0A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1015 :: 		
0x0E0C	0xF007EF0D  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1016 :: 		
0x0E10	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1017 :: 		
0x0E12	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1018 :: 		
0x0E14	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1019 :: 		
0x0E16	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1020 :: 		
0x0E18	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1022 :: 		
ALIGNED32:
;__Lib_MathDouble.c,1023 :: 		
0x0E1A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1024 :: 		
0x0E1C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1025 :: 		
0x0E1E	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,1026 :: 		
0x0E20	0xF007EF1A  	GOTO        AOK32
;__Lib_MathDouble.c,1027 :: 		
0x0E24	0x1E09      	COMF        R9, 1, 0
;__Lib_MathDouble.c,1028 :: 		
0x0E26	0x1E04      	COMF        R4, 1, 0
;__Lib_MathDouble.c,1029 :: 		
0x0E28	0x1E05      	COMF        R5, 1, 0
;__Lib_MathDouble.c,1030 :: 		
0x0E2A	0x1E06      	COMF        R6, 1, 0
;__Lib_MathDouble.c,1031 :: 		
0x0E2C	0x2A09      	INCF        R9, 1, 0
;__Lib_MathDouble.c,1032 :: 		
0x0E2E	0x2204      	ADDWFC      R4, 1, 0
;__Lib_MathDouble.c,1033 :: 		
0x0E30	0x2205      	ADDWFC      R5, 1, 0
;__Lib_MathDouble.c,1034 :: 		
0x0E32	0x2206      	ADDWFC      R6, 1, 0
;__Lib_MathDouble.c,1036 :: 		
AOK32:
;__Lib_MathDouble.c,1037 :: 		
0x0E34	0x5009      	MOVF        R9, 0, 0
;__Lib_MathDouble.c,1038 :: 		
0x0E36	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1039 :: 		
0x0E38	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1040 :: 		
0x0E3A	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1041 :: 		
0x0E3C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1042 :: 		
0x0E3E	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1043 :: 		
0x0E40	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1044 :: 		
0x0E42	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1046 :: 		
0x0E44	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_MathDouble.c,1047 :: 		
0x0E46	0xF007EF31  	GOTO        ACOMP32
;__Lib_MathDouble.c,1048 :: 		
0x0E4A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1049 :: 		
0x0E4C	0xF007EF40  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1051 :: 		
0x0E50	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1052 :: 		
0x0E52	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1053 :: 		
0x0E54	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1054 :: 		
0x0E56	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1055 :: 		
0x0E58	0x3E03      	INCFSZ      R3, 1, 0
;__Lib_MathDouble.c,1056 :: 		
0x0E5A	0xF007EF40  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1057 :: 		
0x0E5E	0xF007EF4C  	GOTO        ADDJPSETFOV32
;__Lib_MathDouble.c,1059 :: 		
ACOMP32:
;__Lib_MathDouble.c,1060 :: 		
0x0E62	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1061 :: 		
0x0E64	0xF007EF46  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1062 :: 		
0x0E68	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1063 :: 		
0x0E6A	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1064 :: 		
0x0E6C	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1065 :: 		
0x0E6E	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1066 :: 		
0x0E70	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1067 :: 		
0x0E72	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1068 :: 		
0x0E74	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1069 :: 		
0x0E76	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1070 :: 		
0x0E78	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1071 :: 		
0x0E7A	0x7E0A      	BTG         R10, 7, 0
;__Lib_MathDouble.c,1072 :: 		
0x0E7C	0xF007EF46  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1074 :: 		
ADDJPNRMRND4032:
;__Lib_MathDouble.c,1075 :: 		
0x0E80	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1076 :: 		
0x0E82	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1078 :: 		
0x0E84	0xF003EC11  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1080 :: 		
0x0E88	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1081 :: 		
ADDJPNRM4032:
;__Lib_MathDouble.c,1082 :: 		
0x0E8C	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1083 :: 		
0x0E8E	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1085 :: 		
0x0E90	0xF003EC11  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1087 :: 		
0x0E94	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1088 :: 		
ADDJPSETFOV32:
;__Lib_MathDouble.c,1089 :: 		
0x0E98	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1090 :: 		
0x0E9A	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1092 :: 		
0x0E9C	0xF000EC88  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1094 :: 		
0x0EA0	0xF007EF54  	GOTO        ADDEEE
;__Lib_MathDouble.c,1095 :: 		
ADDEOK:
;__Lib_MathDouble.c,1096 :: 		
0x0EA4	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1097 :: 		
0x0EA6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1098 :: 		
ADDEEE:
;__Lib_MathDouble.c,1105 :: 		
0x0EA8	0x0012      	RETURN      0
; end of _Add_32x32_FP
_stop:
;motion.h,96 :: 		void stop(){
;motion.h,97 :: 		motorLeft_stop();
0x0EAA	0xF001EC55  	CALL        _motorLeft_stop, 0
;motion.h,98 :: 		motorRight_stop();
0x0EAE	0xF001EC52  	CALL        _motorRight_stop, 0
;motion.h,99 :: 		}
0x0EB2	0x0012      	RETURN      0
; end of _stop
_sendText:
;debug.h,106 :: 		void sendText(char* aText){
;debug.h,107 :: 		UART1_Write_Text(aText);
0x0EB4	0xF19FC19A  	MOVFF       FARG_sendText_aText, FARG_UART1_Write_Text_uart_text
0x0EB8	0xF1A0C19B  	MOVFF       FARG_sendText_aText+1, FARG_UART1_Write_Text_uart_text+1
0x0EBC	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,108 :: 		}
0x0EC0	0x0012      	RETURN      0
; end of _sendText
_moveForward:
;motion.h,66 :: 		void moveForward(int pwmLeft, int pwmRight){
;motion.h,67 :: 		motorLeft_foward(pwmLeft);
0x0EC2	0xF19FC19A  	MOVFF       FARG_moveForward_pwmLeft, FARG_motorLeft_foward_pwm
0x0EC6	0xF1A0C19B  	MOVFF       FARG_moveForward_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x0ECA	0xF001EC4C  	CALL        _motorLeft_foward, 0
;motion.h,68 :: 		motorRight_foward(pwmRight);
0x0ECE	0xF19FC19C  	MOVFF       FARG_moveForward_pwmRight, FARG_motorRight_foward_pwm
0x0ED2	0xF1A0C19D  	MOVFF       FARG_moveForward_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0ED6	0xF001EC32  	CALL        _motorRight_foward, 0
;motion.h,69 :: 		}
0x0EDA	0x0012      	RETURN      0
; end of _moveForward
_rotateClockwise:
;motion.h,86 :: 		void rotateClockwise(int pwm){
;motion.h,87 :: 		motorLeft_foward(pwm);
0x0EDC	0xF19FC19A  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorLeft_foward_pwm
0x0EE0	0xF1A0C19B  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorLeft_foward_pwm+1
0x0EE4	0xF001EC4C  	CALL        _motorLeft_foward, 0
;motion.h,88 :: 		motorRight_reverse(pwm);
0x0EE8	0xF19FC19A  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorRight_reverse_pwm
0x0EEC	0xF1A0C19B  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorRight_reverse_pwm+1
0x0EF0	0xF001EC58  	CALL        _motorRight_reverse, 0
;motion.h,89 :: 		}
0x0EF4	0x0012      	RETURN      0
; end of _rotateClockwise
_rotateAntiClockwise:
;motion.h,91 :: 		void rotateAntiClockwise(int pwm){
;motion.h,92 :: 		motorLeft_reverse(pwm);
0x0EF6	0xF19FC19A  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorLeft_reverse_pwm
0x0EFA	0xF1A0C19B  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorLeft_reverse_pwm+1
0x0EFE	0xDC82      	RCALL       _motorLeft_reverse
;motion.h,93 :: 		motorRight_foward(pwm);
0x0F00	0xF19FC19A  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorRight_foward_pwm
0x0F04	0xF1A0C19B  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorRight_foward_pwm+1
0x0F08	0xF001EC32  	CALL        _motorRight_foward, 0
;motion.h,94 :: 		}
0x0F0C	0x0012      	RETURN      0
; end of _rotateAntiClockwise
_moveStraightFast:
;Main 7.0V.c,177 :: 		void moveStraightFast(){
;Main 7.0V.c,178 :: 		moveForward(255,250);
0x0F0E	0x0EFF      	MOVLW       255
0x0F10	0x0101      	MOVLB       1
0x0F12	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x0F14	0x0E00      	MOVLW       0
0x0F16	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x0F18	0x0EFA      	MOVLW       250
0x0F1A	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x0F1C	0x0E00      	MOVLW       0
0x0F1E	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x0F20	0xDFD0      	RCALL       _moveForward
;Main 7.0V.c,179 :: 		}
0x0F22	0x0012      	RETURN      0
; end of _moveStraightFast
_turnLeft:
;motion.h,81 :: 		void turnLeft(int pwmRight){
;motion.h,82 :: 		motorRight_foward(pwmRight);
0x0F24	0xF19FC196  	MOVFF       FARG_turnLeft_pwmRight, FARG_motorRight_foward_pwm
0x0F28	0xF1A0C197  	MOVFF       FARG_turnLeft_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0F2C	0xF001EC32  	CALL        _motorRight_foward, 0
;motion.h,83 :: 		motorLeft_stop();
0x0F30	0xF001EC55  	CALL        _motorLeft_stop, 0
;motion.h,84 :: 		}
0x0F34	0x0012      	RETURN      0
; end of _turnLeft
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0F36	0x6ABB      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x0F38	0x98BA      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x0F3A	0x9ABA      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
0x0F3C	0x0012      	RETURN      0
; end of _PWM2_Init
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x0F3E	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x0F40	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x0F42	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
0x0F44	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0F46	0x9294      	BCF         TRISC1_bit, 1 
;__Lib_PWM_c21.c,21 :: 		
0x0F48	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x0F4A	0x0E0C      	MOVLW       12
0x0F4C	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
0x0F4E	0x0012      	RETURN      0
; end of _PWM2_Start
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0F50	0x0E22      	MOVLW       _UART1_Write
0x0F52	0x0101      	MOVLB       1
0x0F54	0x6F7A      	MOVWF       _UART_Wr_Ptr, 1
0x0F56	0x0E02      	MOVLW       hi_addr(_UART1_Write)
0x0F58	0x6F7B      	MOVWF       _UART_Wr_Ptr+1, 1
0x0F5A	0x0EA3      	MOVLW       FARG_UART1_Write_data_
0x0F5C	0x6F7C      	MOVWF       _UART_Wr_Ptr+2, 1
0x0F5E	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0F60	0x6F7D      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0F62	0x0EFF      	MOVLW       _UART1_Read
0x0F64	0x6F7E      	MOVWF       _UART_Rd_Ptr, 1
0x0F66	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x0F68	0x6F7F      	MOVWF       _UART_Rd_Ptr+1, 1
0x0F6A	0x0E00      	MOVLW       0
0x0F6C	0x6F80      	MOVWF       _UART_Rd_Ptr+2, 1
0x0F6E	0x0E00      	MOVLW       0
0x0F70	0x6F81      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0F72	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0F74	0x6F72      	MOVWF       _UART_Rdy_Ptr, 1
0x0F76	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0F78	0x6F73      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0F7A	0x0E00      	MOVLW       0
0x0F7C	0x6F74      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0F7E	0x0E00      	MOVLW       0
0x0F80	0x6F75      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0F82	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0F84	0x6F76      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0F86	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0F88	0x6F77      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0F8A	0x0E00      	MOVLW       0
0x0F8C	0x6F78      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0F8E	0x0E00      	MOVLW       0
0x0F90	0x6F79      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0F92	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0F94	0x0E90      	MOVLW       144
0x0F96	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0F98	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x0F9A	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0F9C	0xAA9E      	BTFSS       PIR1, 5 
0x0F9E	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0FA0	0xF000CFAE  	MOVFF       RCREG, R0
0x0FA4	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
0x0FA6	0x0012      	RETURN      0
; end of _UART1_Init
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x0FA8	0x9494      	BCF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,56 :: 		
0x0FAA	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x0FAC	0x0E0C      	MOVLW       12
0x0FAE	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
0x0FB0	0x0012      	RETURN      0
; end of _PWM1_Start
_Sub_32x32_FP:
;__Lib_MathDouble.c,1113 :: 		
;__Lib_MathDouble.c,1118 :: 		
0x0FB2	0x7E06      	BTG         R6, 7, 0
;__Lib_MathDouble.c,1120 :: 		
0x0FB4	0xDD67      	RCALL       _Add_32x32_FP
;__Lib_MathDouble.c,1121 :: 		
0x0FB6	0x0012      	RETURN      0
; end of _Sub_32x32_FP
_Int2Double:
;__Lib_MathDouble.c,2285 :: 		
;__Lib_MathDouble.c,2294 :: 		
0x0FB8	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,2295 :: 		
0x0FBC	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2296 :: 		
0x0FBE	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2297 :: 		
0x0FC0	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2298 :: 		
0x0FC2	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2299 :: 		
0x0FC4	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2302 :: 		
0x0FC6	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2303 :: 		
0x0FC8	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2304 :: 		
0x0FCA	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2305 :: 		
0x0FCC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2306 :: 		
0x0FCE	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2308 :: 		
0x0FD0	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2309 :: 		
0x0FD2	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2310 :: 		
0x0FD4	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2311 :: 		
0x0FD6	0xAE00      	BTFSS       R0, 7, 0
;__Lib_MathDouble.c,2312 :: 		
0x0FD8	0xF007EFF4  	GOTO        FLO1632EEE
;__Lib_MathDouble.c,2314 :: 		
0x0FDC	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,2315 :: 		
0x0FDE	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,2317 :: 		
0x0FE0	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,2318 :: 		
0x0FE2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2319 :: 		
0x0FE4	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,2321 :: 		
0x0FE6	0x8E0A      	BSF         R10, 7, 0
;__Lib_MathDouble.c,2322 :: 		
FLO1632EEE:
;__Lib_MathDouble.c,2323 :: 		
0x0FE8	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2324 :: 		
0x0FEC	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2325 :: 		
0x0FF0	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2326 :: 		
0x0FF2	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2328 :: 		
0x0FF4	0xF000EC94  	CALL        _NRM3232, 0
;__Lib_MathDouble.c,2329 :: 		
0x0FF8	0x0012      	RETURN      0
; end of _Int2Double
_turnRight:
;motion.h,76 :: 		void turnRight(int pwmLeft){
;motion.h,77 :: 		motorLeft_foward(pwmLeft);
0x0FFA	0xF19FC196  	MOVFF       FARG_turnRight_pwmLeft, FARG_motorLeft_foward_pwm
0x0FFE	0xF1A0C197  	MOVFF       FARG_turnRight_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x1002	0xF001EC4C  	CALL        _motorLeft_foward, 0
;motion.h,78 :: 		motorRight_stop();
0x1006	0xF001EC52  	CALL        _motorRight_stop, 0
;motion.h,79 :: 		}
0x100A	0x0012      	RETURN      0
; end of _turnRight
_level2Aligning:
;Main 7.0V.c,352 :: 		void level2Aligning(){
;Main 7.0V.c,353 :: 		while((Sensor1 == 0 || Sensor2 == 0 || Sensor3 == 0 || Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0) && (Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0 || Sensor7 == 0 || Sensor8 == 0 || Sensor9 == 0))
L_level2Aligning795:
0x100C	0xA881      	BTFSS       PORTB, 4 
0x100E	0xD00B      	BRA         L__level2Aligning981
0x1010	0xA681      	BTFSS       PORTB, 3 
0x1012	0xD009      	BRA         L__level2Aligning981
0x1014	0xA883      	BTFSS       PORTD, 4 
0x1016	0xD007      	BRA         L__level2Aligning981
0x1018	0xAA83      	BTFSS       PORTD, 5 
0x101A	0xD005      	BRA         L__level2Aligning981
0x101C	0xAC83      	BTFSS       PORTD, 6 
0x101E	0xD003      	BRA         L__level2Aligning981
0x1020	0xAE83      	BTFSS       PORTD, 7 
0x1022	0xD001      	BRA         L__level2Aligning981
0x1024	0xD018      	BRA         L_level2Aligning796
L__level2Aligning981:
0x1026	0xAA83      	BTFSS       PORTD, 5 
0x1028	0xD00B      	BRA         L__level2Aligning980
0x102A	0xAC83      	BTFSS       PORTD, 6 
0x102C	0xD009      	BRA         L__level2Aligning980
0x102E	0xAE83      	BTFSS       PORTD, 7 
0x1030	0xD007      	BRA         L__level2Aligning980
0x1032	0xA481      	BTFSS       PORTB, 2 
0x1034	0xD005      	BRA         L__level2Aligning980
0x1036	0xAC81      	BTFSS       PORTB, 6 
0x1038	0xD003      	BRA         L__level2Aligning980
0x103A	0xAE81      	BTFSS       PORTB, 7 
0x103C	0xD001      	BRA         L__level2Aligning980
0x103E	0xD00B      	BRA         L_level2Aligning796
L__level2Aligning980:
L__level2Aligning979:
;Main 7.0V.c,354 :: 		moveForward(220,220);
0x1040	0x0EDC      	MOVLW       220
0x1042	0x0101      	MOVLB       1
0x1044	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x1046	0x0E00      	MOVLW       0
0x1048	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x104A	0x0EDC      	MOVLW       220
0x104C	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x104E	0x0E00      	MOVLW       0
0x1050	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x1052	0xDF37      	RCALL       _moveForward
0x1054	0xD7DB      	BRA         L_level2Aligning795
L_level2Aligning796:
;Main 7.0V.c,355 :: 		delay_ms(1);
0x1056	0x0E07      	MOVLW       7
0x1058	0x6E0C      	MOVWF       R12, 0
0x105A	0x0E7D      	MOVLW       125
0x105C	0x6E0D      	MOVWF       R13, 0
L_level2Aligning803:
0x105E	0x2E0D      	DECFSZ      R13, 1, 0
0x1060	0xD7FE      	BRA         L_level2Aligning803
0x1062	0x2E0C      	DECFSZ      R12, 1, 0
0x1064	0xD7FC      	BRA         L_level2Aligning803
;Main 7.0V.c,356 :: 		stop();
0x1066	0xDF21      	RCALL       _stop
;Main 7.0V.c,357 :: 		sendText("Sensor5 at LEVEL 2 ");
0x1068	0x0E46      	MOVLW       ?lstr45_Main_327.0V
0x106A	0x0101      	MOVLB       1
0x106C	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x106E	0x0E00      	MOVLW       hi_addr(?lstr45_Main_327.0V)
0x1070	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x1072	0xDF20      	RCALL       _sendText
;Main 7.0V.c,358 :: 		delay_ms(500);
0x1074	0x0E0D      	MOVLW       13
0x1076	0x6E0B      	MOVWF       R11, 0
0x1078	0x0EAF      	MOVLW       175
0x107A	0x6E0C      	MOVWF       R12, 0
0x107C	0x0EB6      	MOVLW       182
0x107E	0x6E0D      	MOVWF       R13, 0
L_level2Aligning804:
0x1080	0x2E0D      	DECFSZ      R13, 1, 0
0x1082	0xD7FE      	BRA         L_level2Aligning804
0x1084	0x2E0C      	DECFSZ      R12, 1, 0
0x1086	0xD7FC      	BRA         L_level2Aligning804
0x1088	0x2E0B      	DECFSZ      R11, 1, 0
0x108A	0xD7FA      	BRA         L_level2Aligning804
0x108C	0x0000      	NOP
;Main 7.0V.c,359 :: 		while(Sensor1==0 || Sensor2==0 || Sensor3==0 || Sensor4==0 || Sensor5==0 || Sensor6==0 || Sensor7==0 || Sensor8==0 || Sensor9==0){
L_level2Aligning805:
0x108E	0xA881      	BTFSS       PORTB, 4 
0x1090	0xD011      	BRA         L__level2Aligning978
0x1092	0xA681      	BTFSS       PORTB, 3 
0x1094	0xD00F      	BRA         L__level2Aligning978
0x1096	0xA883      	BTFSS       PORTD, 4 
0x1098	0xD00D      	BRA         L__level2Aligning978
0x109A	0xAA83      	BTFSS       PORTD, 5 
0x109C	0xD00B      	BRA         L__level2Aligning978
0x109E	0xAC83      	BTFSS       PORTD, 6 
0x10A0	0xD009      	BRA         L__level2Aligning978
0x10A2	0xAE83      	BTFSS       PORTD, 7 
0x10A4	0xD007      	BRA         L__level2Aligning978
0x10A6	0xA481      	BTFSS       PORTB, 2 
0x10A8	0xD005      	BRA         L__level2Aligning978
0x10AA	0xAC81      	BTFSS       PORTB, 6 
0x10AC	0xD003      	BRA         L__level2Aligning978
0x10AE	0xAE81      	BTFSS       PORTB, 7 
0x10B0	0xD001      	BRA         L__level2Aligning978
0x10B2	0xD012      	BRA         L_level2Aligning806
L__level2Aligning978:
;Main 7.0V.c,360 :: 		if(Sensor9 == 1)
0x10B4	0xAE81      	BTFSS       PORTB, 7 
0x10B6	0xD007      	BRA         L_level2Aligning809
;Main 7.0V.c,361 :: 		rotateClockwise(220);
0x10B8	0x0101      	MOVLB       1
0x10BA	0x0EDC      	MOVLW       220
0x10BC	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x10BE	0x0E00      	MOVLW       0
0x10C0	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x10C2	0xDF0C      	RCALL       _rotateClockwise
0x10C4	0xD008      	BRA         L_level2Aligning810
L_level2Aligning809:
;Main 7.0V.c,363 :: 		else if(Sensor1 == 1)
0x10C6	0xA881      	BTFSS       PORTB, 4 
0x10C8	0xD006      	BRA         L_level2Aligning811
;Main 7.0V.c,364 :: 		rotateAntiClockwise(220);
0x10CA	0x0EDC      	MOVLW       220
0x10CC	0x0101      	MOVLB       1
0x10CE	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x10D0	0x0E00      	MOVLW       0
0x10D2	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x10D4	0xDF10      	RCALL       _rotateAntiClockwise
L_level2Aligning811:
L_level2Aligning810:
;Main 7.0V.c,366 :: 		}
0x10D6	0xD7DB      	BRA         L_level2Aligning805
L_level2Aligning806:
;Main 7.0V.c,367 :: 		stop();
0x10D8	0xDEE8      	RCALL       _stop
;Main 7.0V.c,368 :: 		}
0x10DA	0x0012      	RETURN      0
; end of _level2Aligning
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x10DC	0x0E80      	MOVLW       128
0x10DE	0x0101      	MOVLB       1
0x10E0	0x1997      	XORWF       FARG_abs_a+1, 0, 1
0x10E2	0x6E00      	MOVWF       R0 
0x10E4	0x0E80      	MOVLW       128
0x10E6	0x5C00      	SUBWF       R0, 0 
0x10E8	0xE102      	BNZ         L__abs92
0x10EA	0x0E00      	MOVLW       0
0x10EC	0x5D96      	SUBWF       FARG_abs_a, 0, 1
L__abs92:
0x10EE	0xE208      	BC          L_abs0
;__Lib_CStdlib.c,39 :: 		
0x10F0	0x5196      	MOVF        FARG_abs_a, 0, 1
0x10F2	0x0800      	SUBLW       0
0x10F4	0x6E00      	MOVWF       R0 
0x10F6	0xF001C197  	MOVFF       FARG_abs_a+1, R1
0x10FA	0x0E00      	MOVLW       0
0x10FC	0x5601      	SUBFWB      R1, 1 
0x10FE	0x0012      	RETURN      0
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x1100	0xF000C196  	MOVFF       FARG_abs_a, R0
0x1104	0xF001C197  	MOVFF       FARG_abs_a+1, R1
;__Lib_CStdlib.c,41 :: 		
0x1108	0x0012      	RETURN      0
; end of _abs
_isAllWhite:
;sensorpanel.h,23 :: 		int isAllWhite(){
;sensorpanel.h,24 :: 		if( Scout==0 && Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0){
0x110A	0xBA81      	BTFSC       PORTB, 5 
0x110C	0xD017      	BRA         L_isAllWhite6
0x110E	0xB881      	BTFSC       PORTB, 4 
0x1110	0xD015      	BRA         L_isAllWhite6
0x1112	0xB681      	BTFSC       PORTB, 3 
0x1114	0xD013      	BRA         L_isAllWhite6
0x1116	0xB883      	BTFSC       PORTD, 4 
0x1118	0xD011      	BRA         L_isAllWhite6
0x111A	0xBA83      	BTFSC       PORTD, 5 
0x111C	0xD00F      	BRA         L_isAllWhite6
0x111E	0xBC83      	BTFSC       PORTD, 6 
0x1120	0xD00D      	BRA         L_isAllWhite6
0x1122	0xBE83      	BTFSC       PORTD, 7 
0x1124	0xD00B      	BRA         L_isAllWhite6
0x1126	0xB481      	BTFSC       PORTB, 2 
0x1128	0xD009      	BRA         L_isAllWhite6
0x112A	0xBC81      	BTFSC       PORTB, 6 
0x112C	0xD007      	BRA         L_isAllWhite6
0x112E	0xBE81      	BTFSC       PORTB, 7 
0x1130	0xD005      	BRA         L_isAllWhite6
L__isAllWhite828:
;sensorpanel.h,25 :: 		return 1;
0x1132	0x0E01      	MOVLW       1
0x1134	0x6E00      	MOVWF       R0 
0x1136	0x0E00      	MOVLW       0
0x1138	0x6E01      	MOVWF       R1 
0x113A	0x0012      	RETURN      0
;sensorpanel.h,26 :: 		}
L_isAllWhite6:
;sensorpanel.h,28 :: 		return 0;
0x113C	0x6A00      	CLRF        R0 
0x113E	0x6A01      	CLRF        R1 
;sensorpanel.h,29 :: 		}
0x1140	0x0012      	RETURN      0
; end of _isAllWhite
_isPathClear:
;Main 7.0V.c,307 :: 		int isPathClear() {
;Main 7.0V.c,308 :: 		if(getDistanceSonar2('L') < 7 || getDistanceSonar2('M') < 7 || getDistanceSonar2('R') < 7) {
0x1142	0x0E4C      	MOVLW       76
0x1144	0x0101      	MOVLB       1
0x1146	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x1148	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x114C	0x0E07      	MOVLW       7
0x114E	0x5C00      	SUBWF       R0, 0 
0x1150	0xE311      	BNC         L__isPathClear975
0x1152	0x0E4D      	MOVLW       77
0x1154	0x0101      	MOVLB       1
0x1156	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x1158	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x115C	0x0E07      	MOVLW       7
0x115E	0x5C00      	SUBWF       R0, 0 
0x1160	0xE309      	BNC         L__isPathClear975
0x1162	0x0E52      	MOVLW       82
0x1164	0x0101      	MOVLB       1
0x1166	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x1168	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x116C	0x0E07      	MOVLW       7
0x116E	0x5C00      	SUBWF       R0, 0 
0x1170	0xE301      	BNC         L__isPathClear975
0x1172	0xD003      	BRA         L_isPathClear771
L__isPathClear975:
;Main 7.0V.c,309 :: 		return 0;     // Not Clear
0x1174	0x6A00      	CLRF        R0 
0x1176	0x6A01      	CLRF        R1 
0x1178	0x0012      	RETURN      0
;Main 7.0V.c,310 :: 		} else {
L_isPathClear771:
;Main 7.0V.c,311 :: 		return 1;
0x117A	0x0E01      	MOVLW       1
0x117C	0x6E00      	MOVWF       R0 
0x117E	0x0E00      	MOVLW       0
0x1180	0x6E01      	MOVWF       R1 
;Main 7.0V.c,313 :: 		}
0x1182	0x0012      	RETURN      0
; end of _isPathClear
_sendSensorStatus:
;debug.h,14 :: 		void sendSensorStatus(){
;debug.h,15 :: 		if( Sensor1 == 1){
0x1184	0xA881      	BTFSS       PORTB, 4 
0x1186	0xD00C      	BRA         L_sendSensorStatus48
;debug.h,16 :: 		debugText = "1";
0x1188	0x0E31      	MOVLW       ?lstr3_Main_327.0V
0x118A	0x0101      	MOVLB       1
0x118C	0x6F06      	MOVWF       _debugText, 1
0x118E	0x0E01      	MOVLW       hi_addr(?lstr3_Main_327.0V)
0x1190	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,17 :: 		UART1_Write_Text(debugText);
0x1192	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1196	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x119A	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,18 :: 		}
0x119E	0xD00D      	BRA         L_sendSensorStatus49
L_sendSensorStatus48:
;debug.h,19 :: 		else if( Sensor1 == 0){
0x11A0	0xB881      	BTFSC       PORTB, 4 
0x11A2	0xD00B      	BRA         L_sendSensorStatus50
;debug.h,20 :: 		debugText = "0";
0x11A4	0x0101      	MOVLB       1
0x11A6	0x0E2F      	MOVLW       ?lstr4_Main_327.0V
0x11A8	0x6F06      	MOVWF       _debugText, 1
0x11AA	0x0E01      	MOVLW       hi_addr(?lstr4_Main_327.0V)
0x11AC	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,21 :: 		UART1_Write_Text(debugText);
0x11AE	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11B2	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11B6	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,22 :: 		}
L_sendSensorStatus50:
L_sendSensorStatus49:
;debug.h,24 :: 		if( Sensor2 == 1){
0x11BA	0xA681      	BTFSS       PORTB, 3 
0x11BC	0xD00B      	BRA         L_sendSensorStatus51
;debug.h,25 :: 		debugText = "1";
0x11BE	0x0E2D      	MOVLW       ?lstr5_Main_327.0V
0x11C0	0x6F06      	MOVWF       _debugText, 1
0x11C2	0x0E01      	MOVLW       hi_addr(?lstr5_Main_327.0V)
0x11C4	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,26 :: 		UART1_Write_Text(debugText);
0x11C6	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11CA	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11CE	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,27 :: 		}
0x11D2	0xD00C      	BRA         L_sendSensorStatus52
L_sendSensorStatus51:
;debug.h,28 :: 		else if( Sensor2 == 0){
0x11D4	0xB681      	BTFSC       PORTB, 3 
0x11D6	0xD00A      	BRA         L_sendSensorStatus53
;debug.h,29 :: 		debugText = "0";
0x11D8	0x0E04      	MOVLW       ?lstr6_Main_327.0V
0x11DA	0x6F06      	MOVWF       _debugText, 1
0x11DC	0x0E01      	MOVLW       hi_addr(?lstr6_Main_327.0V)
0x11DE	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,30 :: 		UART1_Write_Text(debugText);
0x11E0	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11E4	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x11E8	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,31 :: 		}
L_sendSensorStatus53:
L_sendSensorStatus52:
;debug.h,33 :: 		if( Sensor3 == 1){
0x11EC	0xA883      	BTFSS       PORTD, 4 
0x11EE	0xD00B      	BRA         L_sendSensorStatus54
;debug.h,34 :: 		debugText = "1";
0x11F0	0x0EFC      	MOVLW       ?lstr7_Main_327.0V
0x11F2	0x6F06      	MOVWF       _debugText, 1
0x11F4	0x0E00      	MOVLW       hi_addr(?lstr7_Main_327.0V)
0x11F6	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,35 :: 		UART1_Write_Text(debugText);
0x11F8	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x11FC	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1200	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,36 :: 		}
0x1204	0xD00C      	BRA         L_sendSensorStatus55
L_sendSensorStatus54:
;debug.h,37 :: 		else if( Sensor3 == 0){
0x1206	0xB883      	BTFSC       PORTD, 4 
0x1208	0xD00A      	BRA         L_sendSensorStatus56
;debug.h,38 :: 		debugText = "0";
0x120A	0x0EFA      	MOVLW       ?lstr8_Main_327.0V
0x120C	0x6F06      	MOVWF       _debugText, 1
0x120E	0x0E00      	MOVLW       hi_addr(?lstr8_Main_327.0V)
0x1210	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,39 :: 		UART1_Write_Text(debugText);
0x1212	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1216	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x121A	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,40 :: 		}
L_sendSensorStatus56:
L_sendSensorStatus55:
;debug.h,42 :: 		if( Sensor4 == 1){
0x121E	0xAA83      	BTFSS       PORTD, 5 
0x1220	0xD00B      	BRA         L_sendSensorStatus57
;debug.h,43 :: 		debugText = "1";
0x1222	0x0EF8      	MOVLW       ?lstr9_Main_327.0V
0x1224	0x6F06      	MOVWF       _debugText, 1
0x1226	0x0E00      	MOVLW       hi_addr(?lstr9_Main_327.0V)
0x1228	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,44 :: 		UART1_Write_Text(debugText);
0x122A	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x122E	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1232	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,45 :: 		}
0x1236	0xD00C      	BRA         L_sendSensorStatus58
L_sendSensorStatus57:
;debug.h,46 :: 		else if( Sensor4 == 0){
0x1238	0xBA83      	BTFSC       PORTD, 5 
0x123A	0xD00A      	BRA         L_sendSensorStatus59
;debug.h,47 :: 		debugText = "0";
0x123C	0x0E02      	MOVLW       ?lstr10_Main_327.0V
0x123E	0x6F06      	MOVWF       _debugText, 1
0x1240	0x0E01      	MOVLW       hi_addr(?lstr10_Main_327.0V)
0x1242	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,48 :: 		UART1_Write_Text(debugText);
0x1244	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1248	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x124C	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,49 :: 		}
L_sendSensorStatus59:
L_sendSensorStatus58:
;debug.h,51 :: 		if( Sensor5 == 1){
0x1250	0xAC83      	BTFSS       PORTD, 6 
0x1252	0xD00B      	BRA         L_sendSensorStatus60
;debug.h,52 :: 		debugText = "1";
0x1254	0x0E00      	MOVLW       ?lstr11_Main_327.0V
0x1256	0x6F06      	MOVWF       _debugText, 1
0x1258	0x0E01      	MOVLW       hi_addr(?lstr11_Main_327.0V)
0x125A	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,53 :: 		UART1_Write_Text(debugText);
0x125C	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1260	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1264	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,54 :: 		}
0x1268	0xD00C      	BRA         L_sendSensorStatus61
L_sendSensorStatus60:
;debug.h,55 :: 		else if( Sensor5 == 0){
0x126A	0xBC83      	BTFSC       PORTD, 6 
0x126C	0xD00A      	BRA         L_sendSensorStatus62
;debug.h,56 :: 		debugText = "0";
0x126E	0x0EFE      	MOVLW       ?lstr12_Main_327.0V
0x1270	0x6F06      	MOVWF       _debugText, 1
0x1272	0x0E00      	MOVLW       hi_addr(?lstr12_Main_327.0V)
0x1274	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,57 :: 		UART1_Write_Text(debugText);
0x1276	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x127A	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x127E	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,58 :: 		}
L_sendSensorStatus62:
L_sendSensorStatus61:
;debug.h,60 :: 		if( Sensor6 == 1){
0x1282	0xAE83      	BTFSS       PORTD, 7 
0x1284	0xD00B      	BRA         L_sendSensorStatus63
;debug.h,61 :: 		debugText = "1";
0x1286	0x0E33      	MOVLW       ?lstr13_Main_327.0V
0x1288	0x6F06      	MOVWF       _debugText, 1
0x128A	0x0E01      	MOVLW       hi_addr(?lstr13_Main_327.0V)
0x128C	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,62 :: 		UART1_Write_Text(debugText);
0x128E	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1292	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1296	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,63 :: 		}
0x129A	0xD00C      	BRA         L_sendSensorStatus64
L_sendSensorStatus63:
;debug.h,64 :: 		else if( Sensor6 == 0){
0x129C	0xBE83      	BTFSC       PORTD, 7 
0x129E	0xD00A      	BRA         L_sendSensorStatus65
;debug.h,65 :: 		debugText = "0";
0x12A0	0x0E42      	MOVLW       ?lstr14_Main_327.0V
0x12A2	0x6F06      	MOVWF       _debugText, 1
0x12A4	0x0E01      	MOVLW       hi_addr(?lstr14_Main_327.0V)
0x12A6	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,66 :: 		UART1_Write_Text(debugText);
0x12A8	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12AC	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12B0	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,67 :: 		}
L_sendSensorStatus65:
L_sendSensorStatus64:
;debug.h,69 :: 		if( Sensor7 == 1){
0x12B4	0xA481      	BTFSS       PORTB, 2 
0x12B6	0xD00B      	BRA         L_sendSensorStatus66
;debug.h,70 :: 		debugText = "1";
0x12B8	0x0E44      	MOVLW       ?lstr15_Main_327.0V
0x12BA	0x6F06      	MOVWF       _debugText, 1
0x12BC	0x0E01      	MOVLW       hi_addr(?lstr15_Main_327.0V)
0x12BE	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,71 :: 		UART1_Write_Text(debugText);
0x12C0	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12C4	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12C8	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,72 :: 		}
0x12CC	0xD00C      	BRA         L_sendSensorStatus67
L_sendSensorStatus66:
;debug.h,73 :: 		else if( Sensor7 == 0){
0x12CE	0xB481      	BTFSC       PORTB, 2 
0x12D0	0xD00A      	BRA         L_sendSensorStatus68
;debug.h,74 :: 		debugText = "0";
0x12D2	0x0E46      	MOVLW       ?lstr16_Main_327.0V
0x12D4	0x6F06      	MOVWF       _debugText, 1
0x12D6	0x0E01      	MOVLW       hi_addr(?lstr16_Main_327.0V)
0x12D8	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,75 :: 		UART1_Write_Text(debugText);
0x12DA	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12DE	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12E2	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,76 :: 		}
L_sendSensorStatus68:
L_sendSensorStatus67:
;debug.h,78 :: 		if( Sensor8 == 1){
0x12E6	0xAC81      	BTFSS       PORTB, 6 
0x12E8	0xD00B      	BRA         L_sendSensorStatus69
;debug.h,79 :: 		debugText = "1";
0x12EA	0x0E37      	MOVLW       ?lstr17_Main_327.0V
0x12EC	0x6F06      	MOVWF       _debugText, 1
0x12EE	0x0E01      	MOVLW       hi_addr(?lstr17_Main_327.0V)
0x12F0	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,80 :: 		UART1_Write_Text(debugText);
0x12F2	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x12F6	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x12FA	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,81 :: 		}
0x12FE	0xD00C      	BRA         L_sendSensorStatus70
L_sendSensorStatus69:
;debug.h,82 :: 		else if( Sensor8 == 0){
0x1300	0xBC81      	BTFSC       PORTB, 6 
0x1302	0xD00A      	BRA         L_sendSensorStatus71
;debug.h,83 :: 		debugText = "0";
0x1304	0x0E35      	MOVLW       ?lstr18_Main_327.0V
0x1306	0x6F06      	MOVWF       _debugText, 1
0x1308	0x0E01      	MOVLW       hi_addr(?lstr18_Main_327.0V)
0x130A	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,84 :: 		UART1_Write_Text(debugText);
0x130C	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1310	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1314	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,85 :: 		}
L_sendSensorStatus71:
L_sendSensorStatus70:
;debug.h,87 :: 		if( Sensor9 == 1){
0x1318	0xAE81      	BTFSS       PORTB, 7 
0x131A	0xD00B      	BRA         L_sendSensorStatus72
;debug.h,88 :: 		debugText = "1";
0x131C	0x0E39      	MOVLW       ?lstr19_Main_327.0V
0x131E	0x6F06      	MOVWF       _debugText, 1
0x1320	0x0E01      	MOVLW       hi_addr(?lstr19_Main_327.0V)
0x1322	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,89 :: 		UART1_Write_Text(debugText);
0x1324	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1328	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x132C	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,90 :: 		}
0x1330	0xD00C      	BRA         L_sendSensorStatus73
L_sendSensorStatus72:
;debug.h,91 :: 		else if( Sensor9 == 0){
0x1332	0xBE81      	BTFSC       PORTB, 7 
0x1334	0xD00A      	BRA         L_sendSensorStatus74
;debug.h,92 :: 		debugText = "0";
0x1336	0x0E40      	MOVLW       ?lstr20_Main_327.0V
0x1338	0x6F06      	MOVWF       _debugText, 1
0x133A	0x0E01      	MOVLW       hi_addr(?lstr20_Main_327.0V)
0x133C	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,93 :: 		UART1_Write_Text(debugText);
0x133E	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1342	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1346	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,94 :: 		}
L_sendSensorStatus74:
L_sendSensorStatus73:
;debug.h,96 :: 		if( Scout == 1){
0x134A	0xAA81      	BTFSS       PORTB, 5 
0x134C	0xD00B      	BRA         L_sendSensorStatus75
;debug.h,97 :: 		debugText = " 1; ";
0x134E	0x0E3B      	MOVLW       ?lstr21_Main_327.0V
0x1350	0x6F06      	MOVWF       _debugText, 1
0x1352	0x0E01      	MOVLW       hi_addr(?lstr21_Main_327.0V)
0x1354	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,98 :: 		UART1_Write_Text(debugText);
0x1356	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x135A	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x135E	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,99 :: 		}
0x1362	0xD00C      	BRA         L_sendSensorStatus76
L_sendSensorStatus75:
;debug.h,100 :: 		else if( Scout == 0){
0x1364	0xBA81      	BTFSC       PORTB, 5 
0x1366	0xD00A      	BRA         L_sendSensorStatus77
;debug.h,101 :: 		debugText = " 0; ";
0x1368	0x0E3F      	MOVLW       ?lstr22_Main_327.0V
0x136A	0x6F06      	MOVWF       _debugText, 1
0x136C	0x0E00      	MOVLW       hi_addr(?lstr22_Main_327.0V)
0x136E	0x6F07      	MOVWF       _debugText+1, 1
;debug.h,102 :: 		UART1_Write_Text(debugText);
0x1370	0xF19FC106  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x1374	0xF1A0C107  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x1378	0xF001EC18  	CALL        _UART1_Write_Text, 0
;debug.h,103 :: 		}
L_sendSensorStatus77:
L_sendSensorStatus76:
;debug.h,104 :: 		}
0x137C	0x0012      	RETURN      0
; end of _sendSensorStatus
_isAllBlack:
;sensorpanel.h,15 :: 		int isAllBlack(){
;sensorpanel.h,16 :: 		if( Scout==1 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1){
0x137E	0xAA81      	BTFSS       PORTB, 5 
0x1380	0xD017      	BRA         L_isAllBlack2
0x1382	0xA881      	BTFSS       PORTB, 4 
0x1384	0xD015      	BRA         L_isAllBlack2
0x1386	0xA681      	BTFSS       PORTB, 3 
0x1388	0xD013      	BRA         L_isAllBlack2
0x138A	0xA883      	BTFSS       PORTD, 4 
0x138C	0xD011      	BRA         L_isAllBlack2
0x138E	0xAA83      	BTFSS       PORTD, 5 
0x1390	0xD00F      	BRA         L_isAllBlack2
0x1392	0xAC83      	BTFSS       PORTD, 6 
0x1394	0xD00D      	BRA         L_isAllBlack2
0x1396	0xAE83      	BTFSS       PORTD, 7 
0x1398	0xD00B      	BRA         L_isAllBlack2
0x139A	0xA481      	BTFSS       PORTB, 2 
0x139C	0xD009      	BRA         L_isAllBlack2
0x139E	0xAC81      	BTFSS       PORTB, 6 
0x13A0	0xD007      	BRA         L_isAllBlack2
0x13A2	0xAE81      	BTFSS       PORTB, 7 
0x13A4	0xD005      	BRA         L_isAllBlack2
L__isAllBlack827:
;sensorpanel.h,17 :: 		return 1;
0x13A6	0x0E01      	MOVLW       1
0x13A8	0x6E00      	MOVWF       R0 
0x13AA	0x0E00      	MOVLW       0
0x13AC	0x6E01      	MOVWF       R1 
0x13AE	0x0012      	RETURN      0
;sensorpanel.h,18 :: 		}
L_isAllBlack2:
;sensorpanel.h,20 :: 		return 0;
0x13B0	0x6A00      	CLRF        R0 
0x13B2	0x6A01      	CLRF        R1 
;sensorpanel.h,21 :: 		}
0x13B4	0x0012      	RETURN      0
; end of _isAllBlack
_reverse:
;motion.h,71 :: 		void reverse(int pwmLeft, int pwmRight){
;motion.h,72 :: 		motorLeft_reverse(pwmLeft);
0x13B6	0xF19FC196  	MOVFF       FARG_reverse_pwmLeft, FARG_motorLeft_reverse_pwm
0x13BA	0xF1A0C197  	MOVFF       FARG_reverse_pwmLeft+1, FARG_motorLeft_reverse_pwm+1
0x13BE	0xF004EC02  	CALL        _motorLeft_reverse, 0
;motion.h,73 :: 		motorRight_reverse(pwmRight);
0x13C2	0xF19FC198  	MOVFF       FARG_reverse_pwmRight, FARG_motorRight_reverse_pwm
0x13C6	0xF1A0C199  	MOVFF       FARG_reverse_pwmRight+1, FARG_motorRight_reverse_pwm+1
0x13CA	0xF001EC58  	CALL        _motorRight_reverse, 0
;motion.h,74 :: 		}
0x13CE	0x0012      	RETURN      0
; end of _reverse
_rotateByDegree:
;motion.h,101 :: 		void rotateByDegree(int degree){
;motion.h,102 :: 		if( degree == -90 ){
0x13D0	0x0EFF      	MOVLW       255
0x13D2	0x0101      	MOVLB       1
0x13D4	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x13D6	0xE102      	BNZ         L__rotateByDegree982
0x13D8	0x0EA6      	MOVLW       166
0x13DA	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree982:
0x13DC	0xE114      	BNZ         L_rotateByDegree8
;motion.h,103 :: 		rotateAntiClockwise(255);
0x13DE	0x0EFF      	MOVLW       255
0x13E0	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x13E2	0x0E00      	MOVLW       0
0x13E4	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x13E6	0xDD87      	RCALL       _rotateAntiClockwise
;motion.h,104 :: 		delay_ms(290);
0x13E8	0x0E08      	MOVLW       8
0x13EA	0x6E0B      	MOVWF       R11, 0
0x13EC	0x0E5C      	MOVLW       92
0x13EE	0x6E0C      	MOVWF       R12, 0
0x13F0	0x0E16      	MOVLW       22
0x13F2	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree9:
0x13F4	0x2E0D      	DECFSZ      R13, 1, 0
0x13F6	0xD7FE      	BRA         L_rotateByDegree9
0x13F8	0x2E0C      	DECFSZ      R12, 1, 0
0x13FA	0xD7FC      	BRA         L_rotateByDegree9
0x13FC	0x2E0B      	DECFSZ      R11, 1, 0
0x13FE	0xD7FA      	BRA         L_rotateByDegree9
0x1400	0x0000      	NOP
;motion.h,105 :: 		stop();
0x1402	0xDD53      	RCALL       _stop
;motion.h,106 :: 		}
0x1404	0xD15E      	BRA         L_rotateByDegree10
L_rotateByDegree8:
;motion.h,107 :: 		else if( degree == 90 ){
0x1406	0x0E00      	MOVLW       0
0x1408	0x0101      	MOVLB       1
0x140A	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x140C	0xE102      	BNZ         L__rotateByDegree983
0x140E	0x0E5A      	MOVLW       90
0x1410	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree983:
0x1412	0xE114      	BNZ         L_rotateByDegree11
;motion.h,108 :: 		rotateClockwise(255);
0x1414	0x0EFF      	MOVLW       255
0x1416	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1418	0x0E00      	MOVLW       0
0x141A	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x141C	0xDD5F      	RCALL       _rotateClockwise
;motion.h,109 :: 		delay_ms(290);
0x141E	0x0E08      	MOVLW       8
0x1420	0x6E0B      	MOVWF       R11, 0
0x1422	0x0E5C      	MOVLW       92
0x1424	0x6E0C      	MOVWF       R12, 0
0x1426	0x0E16      	MOVLW       22
0x1428	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree12:
0x142A	0x2E0D      	DECFSZ      R13, 1, 0
0x142C	0xD7FE      	BRA         L_rotateByDegree12
0x142E	0x2E0C      	DECFSZ      R12, 1, 0
0x1430	0xD7FC      	BRA         L_rotateByDegree12
0x1432	0x2E0B      	DECFSZ      R11, 1, 0
0x1434	0xD7FA      	BRA         L_rotateByDegree12
0x1436	0x0000      	NOP
;motion.h,110 :: 		stop();
0x1438	0xDD38      	RCALL       _stop
;motion.h,111 :: 		}
0x143A	0xD143      	BRA         L_rotateByDegree13
L_rotateByDegree11:
;motion.h,112 :: 		else if( degree == -30 ){
0x143C	0x0EFF      	MOVLW       255
0x143E	0x0101      	MOVLB       1
0x1440	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1442	0xE102      	BNZ         L__rotateByDegree984
0x1444	0x0EE2      	MOVLW       226
0x1446	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree984:
0x1448	0xE123      	BNZ         L_rotateByDegree14
;motion.h,113 :: 		rotateAntiClockwise(255);
0x144A	0x0EFF      	MOVLW       255
0x144C	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x144E	0x0E00      	MOVLW       0
0x1450	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1452	0xDD51      	RCALL       _rotateAntiClockwise
;motion.h,114 :: 		delay_ms(120);                   //100
0x1454	0x0E04      	MOVLW       4
0x1456	0x6E0B      	MOVWF       R11, 0
0x1458	0x0E0C      	MOVLW       12
0x145A	0x6E0C      	MOVWF       R12, 0
0x145C	0x0E33      	MOVLW       51
0x145E	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree15:
0x1460	0x2E0D      	DECFSZ      R13, 1, 0
0x1462	0xD7FE      	BRA         L_rotateByDegree15
0x1464	0x2E0C      	DECFSZ      R12, 1, 0
0x1466	0xD7FC      	BRA         L_rotateByDegree15
0x1468	0x2E0B      	DECFSZ      R11, 1, 0
0x146A	0xD7FA      	BRA         L_rotateByDegree15
0x146C	0x0000      	NOP
0x146E	0x0000      	NOP
;motion.h,115 :: 		stop();
0x1470	0xDD1C      	RCALL       _stop
;motion.h,116 :: 		delay_ms(200);
0x1472	0x0E06      	MOVLW       6
0x1474	0x6E0B      	MOVWF       R11, 0
0x1476	0x0E13      	MOVLW       19
0x1478	0x6E0C      	MOVWF       R12, 0
0x147A	0x0EAD      	MOVLW       173
0x147C	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree16:
0x147E	0x2E0D      	DECFSZ      R13, 1, 0
0x1480	0xD7FE      	BRA         L_rotateByDegree16
0x1482	0x2E0C      	DECFSZ      R12, 1, 0
0x1484	0xD7FC      	BRA         L_rotateByDegree16
0x1486	0x2E0B      	DECFSZ      R11, 1, 0
0x1488	0xD7FA      	BRA         L_rotateByDegree16
0x148A	0x0000      	NOP
0x148C	0x0000      	NOP
;motion.h,117 :: 		}
0x148E	0xD119      	BRA         L_rotateByDegree17
L_rotateByDegree14:
;motion.h,118 :: 		else if( degree == 30 ){
0x1490	0x0E00      	MOVLW       0
0x1492	0x0101      	MOVLB       1
0x1494	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1496	0xE102      	BNZ         L__rotateByDegree985
0x1498	0x0E1E      	MOVLW       30
0x149A	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree985:
0x149C	0xE123      	BNZ         L_rotateByDegree18
;motion.h,119 :: 		rotateClockwise(255);
0x149E	0x0EFF      	MOVLW       255
0x14A0	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x14A2	0x0E00      	MOVLW       0
0x14A4	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x14A6	0xDD1A      	RCALL       _rotateClockwise
;motion.h,120 :: 		delay_ms(120);
0x14A8	0x0E04      	MOVLW       4
0x14AA	0x6E0B      	MOVWF       R11, 0
0x14AC	0x0E0C      	MOVLW       12
0x14AE	0x6E0C      	MOVWF       R12, 0
0x14B0	0x0E33      	MOVLW       51
0x14B2	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree19:
0x14B4	0x2E0D      	DECFSZ      R13, 1, 0
0x14B6	0xD7FE      	BRA         L_rotateByDegree19
0x14B8	0x2E0C      	DECFSZ      R12, 1, 0
0x14BA	0xD7FC      	BRA         L_rotateByDegree19
0x14BC	0x2E0B      	DECFSZ      R11, 1, 0
0x14BE	0xD7FA      	BRA         L_rotateByDegree19
0x14C0	0x0000      	NOP
0x14C2	0x0000      	NOP
;motion.h,121 :: 		stop();
0x14C4	0xDCF2      	RCALL       _stop
;motion.h,122 :: 		delay_ms(200);
0x14C6	0x0E06      	MOVLW       6
0x14C8	0x6E0B      	MOVWF       R11, 0
0x14CA	0x0E13      	MOVLW       19
0x14CC	0x6E0C      	MOVWF       R12, 0
0x14CE	0x0EAD      	MOVLW       173
0x14D0	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree20:
0x14D2	0x2E0D      	DECFSZ      R13, 1, 0
0x14D4	0xD7FE      	BRA         L_rotateByDegree20
0x14D6	0x2E0C      	DECFSZ      R12, 1, 0
0x14D8	0xD7FC      	BRA         L_rotateByDegree20
0x14DA	0x2E0B      	DECFSZ      R11, 1, 0
0x14DC	0xD7FA      	BRA         L_rotateByDegree20
0x14DE	0x0000      	NOP
0x14E0	0x0000      	NOP
;motion.h,123 :: 		}
0x14E2	0xD0EF      	BRA         L_rotateByDegree21
L_rotateByDegree18:
;motion.h,124 :: 		else if( degree == -60 ){             //155
0x14E4	0x0EFF      	MOVLW       255
0x14E6	0x0101      	MOVLB       1
0x14E8	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x14EA	0xE102      	BNZ         L__rotateByDegree986
0x14EC	0x0EC4      	MOVLW       196
0x14EE	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree986:
0x14F0	0xE123      	BNZ         L_rotateByDegree22
;motion.h,125 :: 		rotateAntiClockwise(255);
0x14F2	0x0EFF      	MOVLW       255
0x14F4	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x14F6	0x0E00      	MOVLW       0
0x14F8	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x14FA	0xDCFD      	RCALL       _rotateAntiClockwise
;motion.h,126 :: 		delay_ms(230);
0x14FC	0x0E06      	MOVLW       6
0x14FE	0x6E0B      	MOVWF       R11, 0
0x1500	0x0ED6      	MOVLW       214
0x1502	0x6E0C      	MOVWF       R12, 0
0x1504	0x0E7B      	MOVLW       123
0x1506	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree23:
0x1508	0x2E0D      	DECFSZ      R13, 1, 0
0x150A	0xD7FE      	BRA         L_rotateByDegree23
0x150C	0x2E0C      	DECFSZ      R12, 1, 0
0x150E	0xD7FC      	BRA         L_rotateByDegree23
0x1510	0x2E0B      	DECFSZ      R11, 1, 0
0x1512	0xD7FA      	BRA         L_rotateByDegree23
0x1514	0x0000      	NOP
0x1516	0x0000      	NOP
;motion.h,127 :: 		stop();
0x1518	0xDCC8      	RCALL       _stop
;motion.h,128 :: 		delay_ms(200);
0x151A	0x0E06      	MOVLW       6
0x151C	0x6E0B      	MOVWF       R11, 0
0x151E	0x0E13      	MOVLW       19
0x1520	0x6E0C      	MOVWF       R12, 0
0x1522	0x0EAD      	MOVLW       173
0x1524	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree24:
0x1526	0x2E0D      	DECFSZ      R13, 1, 0
0x1528	0xD7FE      	BRA         L_rotateByDegree24
0x152A	0x2E0C      	DECFSZ      R12, 1, 0
0x152C	0xD7FC      	BRA         L_rotateByDegree24
0x152E	0x2E0B      	DECFSZ      R11, 1, 0
0x1530	0xD7FA      	BRA         L_rotateByDegree24
0x1532	0x0000      	NOP
0x1534	0x0000      	NOP
;motion.h,129 :: 		}
0x1536	0xD0C5      	BRA         L_rotateByDegree25
L_rotateByDegree22:
;motion.h,130 :: 		else if( degree == 60 ){
0x1538	0x0E00      	MOVLW       0
0x153A	0x0101      	MOVLB       1
0x153C	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x153E	0xE102      	BNZ         L__rotateByDegree987
0x1540	0x0E3C      	MOVLW       60
0x1542	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree987:
0x1544	0xE123      	BNZ         L_rotateByDegree26
;motion.h,131 :: 		rotateClockwise(255);
0x1546	0x0EFF      	MOVLW       255
0x1548	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x154A	0x0E00      	MOVLW       0
0x154C	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x154E	0xDCC6      	RCALL       _rotateClockwise
;motion.h,132 :: 		delay_ms(230);
0x1550	0x0E06      	MOVLW       6
0x1552	0x6E0B      	MOVWF       R11, 0
0x1554	0x0ED6      	MOVLW       214
0x1556	0x6E0C      	MOVWF       R12, 0
0x1558	0x0E7B      	MOVLW       123
0x155A	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree27:
0x155C	0x2E0D      	DECFSZ      R13, 1, 0
0x155E	0xD7FE      	BRA         L_rotateByDegree27
0x1560	0x2E0C      	DECFSZ      R12, 1, 0
0x1562	0xD7FC      	BRA         L_rotateByDegree27
0x1564	0x2E0B      	DECFSZ      R11, 1, 0
0x1566	0xD7FA      	BRA         L_rotateByDegree27
0x1568	0x0000      	NOP
0x156A	0x0000      	NOP
;motion.h,133 :: 		stop();
0x156C	0xDC9E      	RCALL       _stop
;motion.h,134 :: 		delay_ms(200);
0x156E	0x0E06      	MOVLW       6
0x1570	0x6E0B      	MOVWF       R11, 0
0x1572	0x0E13      	MOVLW       19
0x1574	0x6E0C      	MOVWF       R12, 0
0x1576	0x0EAD      	MOVLW       173
0x1578	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree28:
0x157A	0x2E0D      	DECFSZ      R13, 1, 0
0x157C	0xD7FE      	BRA         L_rotateByDegree28
0x157E	0x2E0C      	DECFSZ      R12, 1, 0
0x1580	0xD7FC      	BRA         L_rotateByDegree28
0x1582	0x2E0B      	DECFSZ      R11, 1, 0
0x1584	0xD7FA      	BRA         L_rotateByDegree28
0x1586	0x0000      	NOP
0x1588	0x0000      	NOP
;motion.h,135 :: 		}
0x158A	0xD09B      	BRA         L_rotateByDegree29
L_rotateByDegree26:
;motion.h,136 :: 		else if( degree == -45 ){               //135
0x158C	0x0EFF      	MOVLW       255
0x158E	0x0101      	MOVLB       1
0x1590	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1592	0xE102      	BNZ         L__rotateByDegree988
0x1594	0x0ED3      	MOVLW       211
0x1596	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree988:
0x1598	0xE123      	BNZ         L_rotateByDegree30
;motion.h,137 :: 		rotateAntiClockwise(255);
0x159A	0x0EFF      	MOVLW       255
0x159C	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x159E	0x0E00      	MOVLW       0
0x15A0	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x15A2	0xDCA9      	RCALL       _rotateAntiClockwise
;motion.h,138 :: 		delay_ms(180);
0x15A4	0x0E05      	MOVLW       5
0x15A6	0x6E0B      	MOVWF       R11, 0
0x15A8	0x0E91      	MOVLW       145
0x15AA	0x6E0C      	MOVWF       R12, 0
0x15AC	0x0ECF      	MOVLW       207
0x15AE	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree31:
0x15B0	0x2E0D      	DECFSZ      R13, 1, 0
0x15B2	0xD7FE      	BRA         L_rotateByDegree31
0x15B4	0x2E0C      	DECFSZ      R12, 1, 0
0x15B6	0xD7FC      	BRA         L_rotateByDegree31
0x15B8	0x2E0B      	DECFSZ      R11, 1, 0
0x15BA	0xD7FA      	BRA         L_rotateByDegree31
0x15BC	0x0000      	NOP
0x15BE	0x0000      	NOP
;motion.h,139 :: 		stop();
0x15C0	0xDC74      	RCALL       _stop
;motion.h,140 :: 		delay_ms(200);
0x15C2	0x0E06      	MOVLW       6
0x15C4	0x6E0B      	MOVWF       R11, 0
0x15C6	0x0E13      	MOVLW       19
0x15C8	0x6E0C      	MOVWF       R12, 0
0x15CA	0x0EAD      	MOVLW       173
0x15CC	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree32:
0x15CE	0x2E0D      	DECFSZ      R13, 1, 0
0x15D0	0xD7FE      	BRA         L_rotateByDegree32
0x15D2	0x2E0C      	DECFSZ      R12, 1, 0
0x15D4	0xD7FC      	BRA         L_rotateByDegree32
0x15D6	0x2E0B      	DECFSZ      R11, 1, 0
0x15D8	0xD7FA      	BRA         L_rotateByDegree32
0x15DA	0x0000      	NOP
0x15DC	0x0000      	NOP
;motion.h,141 :: 		}
0x15DE	0xD071      	BRA         L_rotateByDegree33
L_rotateByDegree30:
;motion.h,142 :: 		else if( degree == 45 ){
0x15E0	0x0E00      	MOVLW       0
0x15E2	0x0101      	MOVLB       1
0x15E4	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x15E6	0xE102      	BNZ         L__rotateByDegree989
0x15E8	0x0E2D      	MOVLW       45
0x15EA	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree989:
0x15EC	0xE123      	BNZ         L_rotateByDegree34
;motion.h,143 :: 		rotateClockwise(255);
0x15EE	0x0EFF      	MOVLW       255
0x15F0	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x15F2	0x0E00      	MOVLW       0
0x15F4	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x15F6	0xDC72      	RCALL       _rotateClockwise
;motion.h,144 :: 		delay_ms(180);
0x15F8	0x0E05      	MOVLW       5
0x15FA	0x6E0B      	MOVWF       R11, 0
0x15FC	0x0E91      	MOVLW       145
0x15FE	0x6E0C      	MOVWF       R12, 0
0x1600	0x0ECF      	MOVLW       207
0x1602	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree35:
0x1604	0x2E0D      	DECFSZ      R13, 1, 0
0x1606	0xD7FE      	BRA         L_rotateByDegree35
0x1608	0x2E0C      	DECFSZ      R12, 1, 0
0x160A	0xD7FC      	BRA         L_rotateByDegree35
0x160C	0x2E0B      	DECFSZ      R11, 1, 0
0x160E	0xD7FA      	BRA         L_rotateByDegree35
0x1610	0x0000      	NOP
0x1612	0x0000      	NOP
;motion.h,145 :: 		stop();
0x1614	0xDC4A      	RCALL       _stop
;motion.h,146 :: 		delay_ms(200);
0x1616	0x0E06      	MOVLW       6
0x1618	0x6E0B      	MOVWF       R11, 0
0x161A	0x0E13      	MOVLW       19
0x161C	0x6E0C      	MOVWF       R12, 0
0x161E	0x0EAD      	MOVLW       173
0x1620	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree36:
0x1622	0x2E0D      	DECFSZ      R13, 1, 0
0x1624	0xD7FE      	BRA         L_rotateByDegree36
0x1626	0x2E0C      	DECFSZ      R12, 1, 0
0x1628	0xD7FC      	BRA         L_rotateByDegree36
0x162A	0x2E0B      	DECFSZ      R11, 1, 0
0x162C	0xD7FA      	BRA         L_rotateByDegree36
0x162E	0x0000      	NOP
0x1630	0x0000      	NOP
;motion.h,147 :: 		}
0x1632	0xD047      	BRA         L_rotateByDegree37
L_rotateByDegree34:
;motion.h,148 :: 		else if( degree == -2 ){
0x1634	0x0EFF      	MOVLW       255
0x1636	0x0101      	MOVLB       1
0x1638	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x163A	0xE102      	BNZ         L__rotateByDegree990
0x163C	0x0EFE      	MOVLW       254
0x163E	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree990:
0x1640	0xE11D      	BNZ         L_rotateByDegree38
;motion.h,149 :: 		rotateAntiClockwise(255);
0x1642	0x0EFF      	MOVLW       255
0x1644	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1646	0x0E00      	MOVLW       0
0x1648	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x164A	0xDC55      	RCALL       _rotateAntiClockwise
;motion.h,150 :: 		delay_ms(6);
0x164C	0x0E27      	MOVLW       39
0x164E	0x6E0C      	MOVWF       R12, 0
0x1650	0x0EF5      	MOVLW       245
0x1652	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree39:
0x1654	0x2E0D      	DECFSZ      R13, 1, 0
0x1656	0xD7FE      	BRA         L_rotateByDegree39
0x1658	0x2E0C      	DECFSZ      R12, 1, 0
0x165A	0xD7FC      	BRA         L_rotateByDegree39
;motion.h,151 :: 		stop();
0x165C	0xDC26      	RCALL       _stop
;motion.h,152 :: 		delay_ms(50);
0x165E	0x0E02      	MOVLW       2
0x1660	0x6E0B      	MOVWF       R11, 0
0x1662	0x0E45      	MOVLW       69
0x1664	0x6E0C      	MOVWF       R12, 0
0x1666	0x0EA9      	MOVLW       169
0x1668	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree40:
0x166A	0x2E0D      	DECFSZ      R13, 1, 0
0x166C	0xD7FE      	BRA         L_rotateByDegree40
0x166E	0x2E0C      	DECFSZ      R12, 1, 0
0x1670	0xD7FC      	BRA         L_rotateByDegree40
0x1672	0x2E0B      	DECFSZ      R11, 1, 0
0x1674	0xD7FA      	BRA         L_rotateByDegree40
0x1676	0x0000      	NOP
0x1678	0x0000      	NOP
;motion.h,153 :: 		}
0x167A	0xD023      	BRA         L_rotateByDegree41
L_rotateByDegree38:
;motion.h,154 :: 		else if( degree == 2 ){
0x167C	0x0E00      	MOVLW       0
0x167E	0x0101      	MOVLB       1
0x1680	0x1997      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x1682	0xE102      	BNZ         L__rotateByDegree991
0x1684	0x0E02      	MOVLW       2
0x1686	0x1996      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree991:
0x1688	0xE11C      	BNZ         L_rotateByDegree42
;motion.h,155 :: 		rotateClockwise(255);
0x168A	0x0EFF      	MOVLW       255
0x168C	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x168E	0x0E00      	MOVLW       0
0x1690	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x1692	0xDC24      	RCALL       _rotateClockwise
;motion.h,156 :: 		delay_ms(6);
0x1694	0x0E27      	MOVLW       39
0x1696	0x6E0C      	MOVWF       R12, 0
0x1698	0x0EF5      	MOVLW       245
0x169A	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree43:
0x169C	0x2E0D      	DECFSZ      R13, 1, 0
0x169E	0xD7FE      	BRA         L_rotateByDegree43
0x16A0	0x2E0C      	DECFSZ      R12, 1, 0
0x16A2	0xD7FC      	BRA         L_rotateByDegree43
;motion.h,157 :: 		stop();
0x16A4	0xDC02      	RCALL       _stop
;motion.h,158 :: 		delay_ms(50);
0x16A6	0x0E02      	MOVLW       2
0x16A8	0x6E0B      	MOVWF       R11, 0
0x16AA	0x0E45      	MOVLW       69
0x16AC	0x6E0C      	MOVWF       R12, 0
0x16AE	0x0EA9      	MOVLW       169
0x16B0	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree44:
0x16B2	0x2E0D      	DECFSZ      R13, 1, 0
0x16B4	0xD7FE      	BRA         L_rotateByDegree44
0x16B6	0x2E0C      	DECFSZ      R12, 1, 0
0x16B8	0xD7FC      	BRA         L_rotateByDegree44
0x16BA	0x2E0B      	DECFSZ      R11, 1, 0
0x16BC	0xD7FA      	BRA         L_rotateByDegree44
0x16BE	0x0000      	NOP
0x16C0	0x0000      	NOP
;motion.h,159 :: 		}
L_rotateByDegree42:
L_rotateByDegree41:
L_rotateByDegree37:
L_rotateByDegree33:
L_rotateByDegree29:
L_rotateByDegree25:
L_rotateByDegree21:
L_rotateByDegree17:
L_rotateByDegree13:
L_rotateByDegree10:
;motion.h,160 :: 		}
0x16C2	0x0012      	RETURN      0
; end of _rotateByDegree
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x16C4	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x16C6	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x16CA	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x16CC	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x16CE	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x16D0	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x16D2	0x0012      	RETURN      0
; end of ___CC2DW
_configure:
;configuration.h,9 :: 		void configure(){
;configuration.h,12 :: 		TRISA = 0b11001010;
0x16D4	0x0ECA      	MOVLW       202
0x16D6	0x6E92      	MOVWF       TRISA 
;configuration.h,13 :: 		TRISB = 0b11111111;
0x16D8	0x0EFF      	MOVLW       255
0x16DA	0x6E93      	MOVWF       TRISB 
;configuration.h,14 :: 		TRISC = 0b10001000;
0x16DC	0x0E88      	MOVLW       136
0x16DE	0x6E94      	MOVWF       TRISC 
;configuration.h,15 :: 		TRISD = 0b11110011;
0x16E0	0x0EF3      	MOVLW       243
0x16E2	0x6E95      	MOVWF       TRISD 
;configuration.h,16 :: 		TRISE = 0b00000101;
0x16E4	0x0E05      	MOVLW       5
0x16E6	0x6E96      	MOVWF       TRISE 
;configuration.h,18 :: 		PORTA = 0;
0x16E8	0x6A80      	CLRF        PORTA 
;configuration.h,19 :: 		PORTB = 0;
0x16EA	0x6A81      	CLRF        PORTB 
;configuration.h,20 :: 		PORTC = 0;
0x16EC	0x6A82      	CLRF        PORTC 
;configuration.h,21 :: 		PORTD = 0;
0x16EE	0x6A83      	CLRF        PORTD 
;configuration.h,22 :: 		PORTE = 0;
0x16F0	0x6A84      	CLRF        PORTE 
;configuration.h,24 :: 		PWM1_Init(5000);
0x16F2	0x80CA      	BSF         T2CON, 0, 0
0x16F4	0x92CA      	BCF         T2CON, 1, 0
0x16F6	0x0EF9      	MOVLW       249
0x16F8	0x6ECB      	MOVWF       PR2, 0
0x16FA	0xDC21      	RCALL       _PWM1_Init
;configuration.h,25 :: 		PWM2_Init(5000);
0x16FC	0x80CA      	BSF         T2CON, 0, 0
0x16FE	0x92CA      	BCF         T2CON, 1, 0
0x1700	0x0EF9      	MOVLW       249
0x1702	0x6ECB      	MOVWF       PR2, 0
0x1704	0xDC18      	RCALL       _PWM2_Init
;configuration.h,26 :: 		PWM1_Start();
0x1706	0xDC50      	RCALL       _PWM1_Start
;configuration.h,27 :: 		PWM2_Start();
0x1708	0xDC1E      	RCALL       _PWM2_Start
;configuration.h,28 :: 		UART1_Init(9600);
0x170A	0x0E81      	MOVLW       129
0x170C	0x6EAF      	MOVWF       SPBRG 
0x170E	0x84AC      	BSF         TXSTA, 2, 0
0x1710	0xDC1F      	RCALL       _UART1_Init
;configuration.h,36 :: 		ADCON0 = 0b11000001;
0x1712	0x0EC1      	MOVLW       193
0x1714	0x6EC2      	MOVWF       ADCON0 
;configuration.h,37 :: 		ADCON1 = 0b00000110;   //ADCON1 = 0b00000000;
0x1716	0x0E06      	MOVLW       6
0x1718	0x6EC1      	MOVWF       ADCON1 
;configuration.h,45 :: 		LEVEL = 0;
0x171A	0x0101      	MOVLB       1
0x171C	0x6B88      	CLRF        _LEVEL, 1
0x171E	0x6B89      	CLRF        _LEVEL+1, 1
;configuration.h,46 :: 		LEVEL1_STATE  = NOT_REACHED;
0x1720	0x6B82      	CLRF        _LEVEL1_STATE, 1
0x1722	0x6B83      	CLRF        _LEVEL1_STATE+1, 1
;configuration.h,47 :: 		LEVEL2_STATE  = NOT_REACHED;
0x1724	0x6B62      	CLRF        _LEVEL2_STATE, 1
0x1726	0x6B63      	CLRF        _LEVEL2_STATE+1, 1
;configuration.h,48 :: 		LEVEL3_STATE  = NOT_REACHED;
0x1728	0x6B6C      	CLRF        _LEVEL3_STATE, 1
0x172A	0x6B6D      	CLRF        _LEVEL3_STATE+1, 1
;configuration.h,51 :: 		T0CON=0xC3;
0x172C	0x0EC3      	MOVLW       195
0x172E	0x6ED5      	MOVWF       T0CON 
;configuration.h,52 :: 		TMR0L=0x00;
0x1730	0x6AD6      	CLRF        TMR0L 
;configuration.h,53 :: 		INTCON.TMR0IE=1;
0x1732	0x8AF2      	BSF         INTCON, 5 
;configuration.h,55 :: 		T1CON=0x80;
0x1734	0x0E80      	MOVLW       128
0x1736	0x6ECD      	MOVWF       T1CON 
;configuration.h,56 :: 		TMR1H=0x00;
0x1738	0x6ACF      	CLRF        TMR1H 
;configuration.h,57 :: 		TMR1L=0x00;
0x173A	0x6ACE      	CLRF        TMR1L 
;configuration.h,58 :: 		}
0x173C	0x0012      	RETURN      0
; end of _configure
_lineFollowNormalWorked:
;linefollow.h,108 :: 		void lineFollowNormalWorked(){
;linefollow.h,109 :: 		if(Scout == 1){
0x173E	0xAA81      	BTFSS       PORTB, 5 
0x1740	0xD138      	BRA         L_lineFollowNormalWorked121
;linefollow.h,111 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1742	0xB883      	BTFSC       PORTD, 4 
0x1744	0xD013      	BRA         L_lineFollowNormalWorked124
0x1746	0xAA83      	BTFSS       PORTD, 5 
0x1748	0xD011      	BRA         L_lineFollowNormalWorked124
0x174A	0xAC83      	BTFSS       PORTD, 6 
0x174C	0xD00F      	BRA         L_lineFollowNormalWorked124
0x174E	0xBE83      	BTFSC       PORTD, 7 
0x1750	0xD00D      	BRA         L_lineFollowNormalWorked124
0x1752	0xB481      	BTFSC       PORTB, 2 
0x1754	0xD00B      	BRA         L_lineFollowNormalWorked124
L__lineFollowNormalWorked878:
;linefollow.h,112 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1756	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x175A	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x175E	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1762	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1766	0xF007EC61  	CALL        _moveForward, 0
0x176A	0xD122      	BRA         L_lineFollowNormalWorked125
L_lineFollowNormalWorked124:
;linefollow.h,113 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x176C	0xB883      	BTFSC       PORTD, 4 
0x176E	0xD013      	BRA         L_lineFollowNormalWorked128
0x1770	0xAA83      	BTFSS       PORTD, 5 
0x1772	0xD011      	BRA         L_lineFollowNormalWorked128
0x1774	0xAC83      	BTFSS       PORTD, 6 
0x1776	0xD00F      	BRA         L_lineFollowNormalWorked128
0x1778	0xAE83      	BTFSS       PORTD, 7 
0x177A	0xD00D      	BRA         L_lineFollowNormalWorked128
0x177C	0xB481      	BTFSC       PORTB, 2 
0x177E	0xD00B      	BRA         L_lineFollowNormalWorked128
L__lineFollowNormalWorked877:
;linefollow.h,114 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1780	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1784	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1788	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x178C	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1790	0xF007EC61  	CALL        _moveForward, 0
0x1794	0xD10D      	BRA         L_lineFollowNormalWorked129
L_lineFollowNormalWorked128:
;linefollow.h,115 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1796	0xB883      	BTFSC       PORTD, 4 
0x1798	0xD013      	BRA         L_lineFollowNormalWorked132
0x179A	0xBA83      	BTFSC       PORTD, 5 
0x179C	0xD011      	BRA         L_lineFollowNormalWorked132
0x179E	0xAC83      	BTFSS       PORTD, 6 
0x17A0	0xD00F      	BRA         L_lineFollowNormalWorked132
0x17A2	0xBE83      	BTFSC       PORTD, 7 
0x17A4	0xD00D      	BRA         L_lineFollowNormalWorked132
0x17A6	0xB481      	BTFSC       PORTB, 2 
0x17A8	0xD00B      	BRA         L_lineFollowNormalWorked132
L__lineFollowNormalWorked876:
;linefollow.h,116 :: 		moveForward(FAST_PWM,FAST_PWM);
0x17AA	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x17AE	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x17B2	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x17B6	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x17BA	0xF007EC61  	CALL        _moveForward, 0
0x17BE	0xD0F8      	BRA         L_lineFollowNormalWorked133
L_lineFollowNormalWorked132:
;linefollow.h,117 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x17C0	0xB883      	BTFSC       PORTD, 4 
0x17C2	0xD013      	BRA         L_lineFollowNormalWorked136
0x17C4	0xBA83      	BTFSC       PORTD, 5 
0x17C6	0xD011      	BRA         L_lineFollowNormalWorked136
0x17C8	0xAC83      	BTFSS       PORTD, 6 
0x17CA	0xD00F      	BRA         L_lineFollowNormalWorked136
0x17CC	0xAE83      	BTFSS       PORTD, 7 
0x17CE	0xD00D      	BRA         L_lineFollowNormalWorked136
0x17D0	0xB481      	BTFSC       PORTB, 2 
0x17D2	0xD00B      	BRA         L_lineFollowNormalWorked136
L__lineFollowNormalWorked875:
;linefollow.h,118 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x17D4	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x17D8	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x17DC	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x17E0	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x17E4	0xF007EC61  	CALL        _moveForward, 0
0x17E8	0xD0E3      	BRA         L_lineFollowNormalWorked137
L_lineFollowNormalWorked136:
;linefollow.h,123 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x17EA	0xA883      	BTFSS       PORTD, 4 
0x17EC	0xD00F      	BRA         L_lineFollowNormalWorked140
0x17EE	0xBA83      	BTFSC       PORTD, 5 
0x17F0	0xD00D      	BRA         L_lineFollowNormalWorked140
0x17F2	0xBC83      	BTFSC       PORTD, 6 
0x17F4	0xD00B      	BRA         L_lineFollowNormalWorked140
0x17F6	0xBE83      	BTFSC       PORTD, 7 
0x17F8	0xD009      	BRA         L_lineFollowNormalWorked140
0x17FA	0xB481      	BTFSC       PORTB, 2 
0x17FC	0xD007      	BRA         L_lineFollowNormalWorked140
L__lineFollowNormalWorked874:
;linefollow.h,125 :: 		turnLeft(FAST_PWM);
0x17FE	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1802	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1806	0xF007EC92  	CALL        _turnLeft, 0
0x180A	0xD0D2      	BRA         L_lineFollowNormalWorked141
L_lineFollowNormalWorked140:
;linefollow.h,126 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x180C	0xA883      	BTFSS       PORTD, 4 
0x180E	0xD00F      	BRA         L_lineFollowNormalWorked144
0x1810	0xAA83      	BTFSS       PORTD, 5 
0x1812	0xD00D      	BRA         L_lineFollowNormalWorked144
0x1814	0xBC83      	BTFSC       PORTD, 6 
0x1816	0xD00B      	BRA         L_lineFollowNormalWorked144
0x1818	0xBE83      	BTFSC       PORTD, 7 
0x181A	0xD009      	BRA         L_lineFollowNormalWorked144
0x181C	0xB481      	BTFSC       PORTB, 2 
0x181E	0xD007      	BRA         L_lineFollowNormalWorked144
L__lineFollowNormalWorked873:
;linefollow.h,128 :: 		turnLeft(FAST_PWM);
0x1820	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1824	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1828	0xF007EC92  	CALL        _turnLeft, 0
0x182C	0xD0C1      	BRA         L_lineFollowNormalWorked145
L_lineFollowNormalWorked144:
;linefollow.h,129 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x182E	0xA883      	BTFSS       PORTD, 4 
0x1830	0xD00F      	BRA         L_lineFollowNormalWorked148
0x1832	0xAA83      	BTFSS       PORTD, 5 
0x1834	0xD00D      	BRA         L_lineFollowNormalWorked148
0x1836	0xAC83      	BTFSS       PORTD, 6 
0x1838	0xD00B      	BRA         L_lineFollowNormalWorked148
0x183A	0xBE83      	BTFSC       PORTD, 7 
0x183C	0xD009      	BRA         L_lineFollowNormalWorked148
0x183E	0xB481      	BTFSC       PORTB, 2 
0x1840	0xD007      	BRA         L_lineFollowNormalWorked148
L__lineFollowNormalWorked872:
;linefollow.h,131 :: 		turnLeft(FAST_PWM);
0x1842	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1846	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x184A	0xF007EC92  	CALL        _turnLeft, 0
0x184E	0xD0B0      	BRA         L_lineFollowNormalWorked149
L_lineFollowNormalWorked148:
;linefollow.h,132 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1850	0xB883      	BTFSC       PORTD, 4 
0x1852	0xD00F      	BRA         L_lineFollowNormalWorked152
0x1854	0xAA83      	BTFSS       PORTD, 5 
0x1856	0xD00D      	BRA         L_lineFollowNormalWorked152
0x1858	0xBC83      	BTFSC       PORTD, 6 
0x185A	0xD00B      	BRA         L_lineFollowNormalWorked152
0x185C	0xBE83      	BTFSC       PORTD, 7 
0x185E	0xD009      	BRA         L_lineFollowNormalWorked152
0x1860	0xB481      	BTFSC       PORTB, 2 
0x1862	0xD007      	BRA         L_lineFollowNormalWorked152
L__lineFollowNormalWorked871:
;linefollow.h,134 :: 		turnLeft(FAST_PWM);
0x1864	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1868	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x186C	0xF007EC92  	CALL        _turnLeft, 0
0x1870	0xD09F      	BRA         L_lineFollowNormalWorked153
L_lineFollowNormalWorked152:
;linefollow.h,137 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x1872	0xB883      	BTFSC       PORTD, 4 
0x1874	0xD00F      	BRA         L_lineFollowNormalWorked156
0x1876	0xBA83      	BTFSC       PORTD, 5 
0x1878	0xD00D      	BRA         L_lineFollowNormalWorked156
0x187A	0xBC83      	BTFSC       PORTD, 6 
0x187C	0xD00B      	BRA         L_lineFollowNormalWorked156
0x187E	0xAE83      	BTFSS       PORTD, 7 
0x1880	0xD009      	BRA         L_lineFollowNormalWorked156
0x1882	0xB481      	BTFSC       PORTB, 2 
0x1884	0xD007      	BRA         L_lineFollowNormalWorked156
L__lineFollowNormalWorked870:
;linefollow.h,139 :: 		turnRight(FAST_PWM);
0x1886	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x188A	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x188E	0xF007ECFD  	CALL        _turnRight, 0
0x1892	0xD08E      	BRA         L_lineFollowNormalWorked157
L_lineFollowNormalWorked156:
;linefollow.h,140 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1894	0xB883      	BTFSC       PORTD, 4 
0x1896	0xD00F      	BRA         L_lineFollowNormalWorked160
0x1898	0xBA83      	BTFSC       PORTD, 5 
0x189A	0xD00D      	BRA         L_lineFollowNormalWorked160
0x189C	0xAC83      	BTFSS       PORTD, 6 
0x189E	0xD00B      	BRA         L_lineFollowNormalWorked160
0x18A0	0xAE83      	BTFSS       PORTD, 7 
0x18A2	0xD009      	BRA         L_lineFollowNormalWorked160
0x18A4	0xA481      	BTFSS       PORTB, 2 
0x18A6	0xD007      	BRA         L_lineFollowNormalWorked160
L__lineFollowNormalWorked869:
;linefollow.h,142 :: 		turnRight(FAST_PWM);
0x18A8	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x18AC	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x18B0	0xF007ECFD  	CALL        _turnRight, 0
0x18B4	0xD07D      	BRA         L_lineFollowNormalWorked161
L_lineFollowNormalWorked160:
;linefollow.h,143 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x18B6	0xB883      	BTFSC       PORTD, 4 
0x18B8	0xD00F      	BRA         L_lineFollowNormalWorked164
0x18BA	0xBA83      	BTFSC       PORTD, 5 
0x18BC	0xD00D      	BRA         L_lineFollowNormalWorked164
0x18BE	0xBC83      	BTFSC       PORTD, 6 
0x18C0	0xD00B      	BRA         L_lineFollowNormalWorked164
0x18C2	0xAE83      	BTFSS       PORTD, 7 
0x18C4	0xD009      	BRA         L_lineFollowNormalWorked164
0x18C6	0xA481      	BTFSS       PORTB, 2 
0x18C8	0xD007      	BRA         L_lineFollowNormalWorked164
L__lineFollowNormalWorked868:
;linefollow.h,145 :: 		turnRight(FAST_PWM);
0x18CA	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x18CE	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x18D2	0xF007ECFD  	CALL        _turnRight, 0
0x18D6	0xD06C      	BRA         L_lineFollowNormalWorked165
L_lineFollowNormalWorked164:
;linefollow.h,146 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x18D8	0xB883      	BTFSC       PORTD, 4 
0x18DA	0xD00F      	BRA         L_lineFollowNormalWorked168
0x18DC	0xBA83      	BTFSC       PORTD, 5 
0x18DE	0xD00D      	BRA         L_lineFollowNormalWorked168
0x18E0	0xBC83      	BTFSC       PORTD, 6 
0x18E2	0xD00B      	BRA         L_lineFollowNormalWorked168
0x18E4	0xBE83      	BTFSC       PORTD, 7 
0x18E6	0xD009      	BRA         L_lineFollowNormalWorked168
0x18E8	0xA481      	BTFSS       PORTB, 2 
0x18EA	0xD007      	BRA         L_lineFollowNormalWorked168
L__lineFollowNormalWorked867:
;linefollow.h,148 :: 		turnRight(FAST_PWM);
0x18EC	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x18F0	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x18F4	0xF007ECFD  	CALL        _turnRight, 0
0x18F8	0xD05B      	BRA         L_lineFollowNormalWorked169
L_lineFollowNormalWorked168:
;linefollow.h,151 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x18FA	0xA883      	BTFSS       PORTD, 4 
0x18FC	0xD013      	BRA         L_lineFollowNormalWorked172
0x18FE	0xAA83      	BTFSS       PORTD, 5 
0x1900	0xD011      	BRA         L_lineFollowNormalWorked172
0x1902	0xAC83      	BTFSS       PORTD, 6 
0x1904	0xD00F      	BRA         L_lineFollowNormalWorked172
0x1906	0xAE83      	BTFSS       PORTD, 7 
0x1908	0xD00D      	BRA         L_lineFollowNormalWorked172
0x190A	0xB481      	BTFSC       PORTB, 2 
0x190C	0xD00B      	BRA         L_lineFollowNormalWorked172
L__lineFollowNormalWorked866:
;linefollow.h,152 :: 		moveForward(FAST_PWM,FAST_PWM);
0x190E	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1912	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1916	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x191A	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x191E	0xF007EC61  	CALL        _moveForward, 0
0x1922	0xD046      	BRA         L_lineFollowNormalWorked173
L_lineFollowNormalWorked172:
;linefollow.h,153 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1924	0xB883      	BTFSC       PORTD, 4 
0x1926	0xD013      	BRA         L_lineFollowNormalWorked176
0x1928	0xAA83      	BTFSS       PORTD, 5 
0x192A	0xD011      	BRA         L_lineFollowNormalWorked176
0x192C	0xAC83      	BTFSS       PORTD, 6 
0x192E	0xD00F      	BRA         L_lineFollowNormalWorked176
0x1930	0xAE83      	BTFSS       PORTD, 7 
0x1932	0xD00D      	BRA         L_lineFollowNormalWorked176
0x1934	0xA481      	BTFSS       PORTB, 2 
0x1936	0xD00B      	BRA         L_lineFollowNormalWorked176
L__lineFollowNormalWorked865:
;linefollow.h,154 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1938	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x193C	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1940	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1944	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1948	0xF007EC61  	CALL        _moveForward, 0
0x194C	0xD031      	BRA         L_lineFollowNormalWorked177
L_lineFollowNormalWorked176:
;linefollow.h,155 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x194E	0xB881      	BTFSC       PORTB, 4 
0x1950	0xD01C      	BRA         L_lineFollowNormalWorked180
0x1952	0xB681      	BTFSC       PORTB, 3 
0x1954	0xD01A      	BRA         L_lineFollowNormalWorked180
0x1956	0xB883      	BTFSC       PORTD, 4 
0x1958	0xD018      	BRA         L_lineFollowNormalWorked180
0x195A	0xBA83      	BTFSC       PORTD, 5 
0x195C	0xD016      	BRA         L_lineFollowNormalWorked180
0x195E	0xBC83      	BTFSC       PORTD, 6 
0x1960	0xD014      	BRA         L_lineFollowNormalWorked180
0x1962	0xBE83      	BTFSC       PORTD, 7 
0x1964	0xD012      	BRA         L_lineFollowNormalWorked180
0x1966	0xB481      	BTFSC       PORTB, 2 
0x1968	0xD010      	BRA         L_lineFollowNormalWorked180
0x196A	0xBC81      	BTFSC       PORTB, 6 
0x196C	0xD00E      	BRA         L_lineFollowNormalWorked180
0x196E	0xBE81      	BTFSC       PORTB, 7 
0x1970	0xD00C      	BRA         L_lineFollowNormalWorked180
L__lineFollowNormalWorked864:
;linefollow.h,156 :: 		moveForward(255,255);
0x1972	0x0EFF      	MOVLW       255
0x1974	0x0101      	MOVLB       1
0x1976	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x1978	0x0E00      	MOVLW       0
0x197A	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x197C	0x0EFF      	MOVLW       255
0x197E	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x1980	0x0E00      	MOVLW       0
0x1982	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x1984	0xF007EC61  	CALL        _moveForward, 0
0x1988	0xD013      	BRA         L_lineFollowNormalWorked181
L_lineFollowNormalWorked180:
;linefollow.h,158 :: 		else if(isAllBlack()){
0x198A	0xDCF9      	RCALL       _isAllBlack
0x198C	0x5000      	MOVF        R0, 0 
0x198E	0x1001      	IORWF       R1, 0 
0x1990	0xE003      	BZ          L_lineFollowNormalWorked182
;linefollow.h,161 :: 		sendSensorStatus();
0x1992	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,162 :: 		}
0x1996	0xD00C      	BRA         L_lineFollowNormalWorked183
L_lineFollowNormalWorked182:
0x1998	0x0101      	MOVLB       1
;linefollow.h,165 :: 		reverse(220,220);
0x199A	0x0EDC      	MOVLW       220
0x199C	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x199E	0x0E00      	MOVLW       0
0x19A0	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x19A2	0x0EDC      	MOVLW       220
0x19A4	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x19A6	0x0E00      	MOVLW       0
0x19A8	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x19AA	0xDD05      	RCALL       _reverse
;linefollow.h,166 :: 		sendSensorStatus();
0x19AC	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,168 :: 		}
L_lineFollowNormalWorked183:
L_lineFollowNormalWorked181:
L_lineFollowNormalWorked177:
L_lineFollowNormalWorked173:
L_lineFollowNormalWorked169:
L_lineFollowNormalWorked165:
L_lineFollowNormalWorked161:
L_lineFollowNormalWorked157:
L_lineFollowNormalWorked153:
L_lineFollowNormalWorked149:
L_lineFollowNormalWorked145:
L_lineFollowNormalWorked141:
L_lineFollowNormalWorked137:
L_lineFollowNormalWorked133:
L_lineFollowNormalWorked129:
L_lineFollowNormalWorked125:
;linefollow.h,169 :: 		}
0x19B0	0xD204      	BRA         L_lineFollowNormalWorked184
L_lineFollowNormalWorked121:
;linefollow.h,176 :: 		if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x19B2	0xA881      	BTFSS       PORTB, 4 
0x19B4	0xD017      	BRA         L_lineFollowNormalWorked187
0x19B6	0xA681      	BTFSS       PORTB, 3 
0x19B8	0xD015      	BRA         L_lineFollowNormalWorked187
0x19BA	0xA883      	BTFSS       PORTD, 4 
0x19BC	0xD013      	BRA         L_lineFollowNormalWorked187
0x19BE	0xAA83      	BTFSS       PORTD, 5 
0x19C0	0xD011      	BRA         L_lineFollowNormalWorked187
0x19C2	0xAC83      	BTFSS       PORTD, 6 
0x19C4	0xD00F      	BRA         L_lineFollowNormalWorked187
0x19C6	0xBE83      	BTFSC       PORTD, 7 
0x19C8	0xD00D      	BRA         L_lineFollowNormalWorked187
0x19CA	0xB481      	BTFSC       PORTB, 2 
0x19CC	0xD00B      	BRA         L_lineFollowNormalWorked187
0x19CE	0xBC81      	BTFSC       PORTB, 6 
0x19D0	0xD009      	BRA         L_lineFollowNormalWorked187
0x19D2	0xBE81      	BTFSC       PORTB, 7 
0x19D4	0xD007      	BRA         L_lineFollowNormalWorked187
L__lineFollowNormalWorked863:
0x19D6	0x0101      	MOVLB       1
;linefollow.h,177 :: 		rotateByDegree(-90);
0x19D8	0x0EA6      	MOVLW       166
0x19DA	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x19DC	0x0EFF      	MOVLW       255
0x19DE	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x19E0	0xDCF7      	RCALL       _rotateByDegree
0x19E2	0xD1EB      	BRA         L_lineFollowNormalWorked188
L_lineFollowNormalWorked187:
;linefollow.h,178 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x19E4	0xA881      	BTFSS       PORTB, 4 
0x19E6	0xD017      	BRA         L_lineFollowNormalWorked191
0x19E8	0xA681      	BTFSS       PORTB, 3 
0x19EA	0xD015      	BRA         L_lineFollowNormalWorked191
0x19EC	0xA883      	BTFSS       PORTD, 4 
0x19EE	0xD013      	BRA         L_lineFollowNormalWorked191
0x19F0	0xAA83      	BTFSS       PORTD, 5 
0x19F2	0xD011      	BRA         L_lineFollowNormalWorked191
0x19F4	0xAC83      	BTFSS       PORTD, 6 
0x19F6	0xD00F      	BRA         L_lineFollowNormalWorked191
0x19F8	0xAE83      	BTFSS       PORTD, 7 
0x19FA	0xD00D      	BRA         L_lineFollowNormalWorked191
0x19FC	0xB481      	BTFSC       PORTB, 2 
0x19FE	0xD00B      	BRA         L_lineFollowNormalWorked191
0x1A00	0xBC81      	BTFSC       PORTB, 6 
0x1A02	0xD009      	BRA         L_lineFollowNormalWorked191
0x1A04	0xBE81      	BTFSC       PORTB, 7 
0x1A06	0xD007      	BRA         L_lineFollowNormalWorked191
L__lineFollowNormalWorked862:
;linefollow.h,179 :: 		rotateByDegree(-90);
0x1A08	0x0EA6      	MOVLW       166
0x1A0A	0x0101      	MOVLB       1
0x1A0C	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1A0E	0x0EFF      	MOVLW       255
0x1A10	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1A12	0xDCDE      	RCALL       _rotateByDegree
0x1A14	0xD1D2      	BRA         L_lineFollowNormalWorked192
L_lineFollowNormalWorked191:
;linefollow.h,180 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==0 && Sensor9==0)
0x1A16	0xA881      	BTFSS       PORTB, 4 
0x1A18	0xD017      	BRA         L_lineFollowNormalWorked195
0x1A1A	0xA681      	BTFSS       PORTB, 3 
0x1A1C	0xD015      	BRA         L_lineFollowNormalWorked195
0x1A1E	0xA883      	BTFSS       PORTD, 4 
0x1A20	0xD013      	BRA         L_lineFollowNormalWorked195
0x1A22	0xAA83      	BTFSS       PORTD, 5 
0x1A24	0xD011      	BRA         L_lineFollowNormalWorked195
0x1A26	0xAC83      	BTFSS       PORTD, 6 
0x1A28	0xD00F      	BRA         L_lineFollowNormalWorked195
0x1A2A	0xAE83      	BTFSS       PORTD, 7 
0x1A2C	0xD00D      	BRA         L_lineFollowNormalWorked195
0x1A2E	0xA481      	BTFSS       PORTB, 2 
0x1A30	0xD00B      	BRA         L_lineFollowNormalWorked195
0x1A32	0xBC81      	BTFSC       PORTB, 6 
0x1A34	0xD009      	BRA         L_lineFollowNormalWorked195
0x1A36	0xBE81      	BTFSC       PORTB, 7 
0x1A38	0xD007      	BRA         L_lineFollowNormalWorked195
L__lineFollowNormalWorked861:
;linefollow.h,181 :: 		rotateByDegree(-90);
0x1A3A	0x0EA6      	MOVLW       166
0x1A3C	0x0101      	MOVLB       1
0x1A3E	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1A40	0x0EFF      	MOVLW       255
0x1A42	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1A44	0xDCC5      	RCALL       _rotateByDegree
0x1A46	0xD1B9      	BRA         L_lineFollowNormalWorked196
L_lineFollowNormalWorked195:
;linefollow.h,184 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1A48	0xB881      	BTFSC       PORTB, 4 
0x1A4A	0xD017      	BRA         L_lineFollowNormalWorked199
0x1A4C	0xB681      	BTFSC       PORTB, 3 
0x1A4E	0xD015      	BRA         L_lineFollowNormalWorked199
0x1A50	0xA883      	BTFSS       PORTD, 4 
0x1A52	0xD013      	BRA         L_lineFollowNormalWorked199
0x1A54	0xAA83      	BTFSS       PORTD, 5 
0x1A56	0xD011      	BRA         L_lineFollowNormalWorked199
0x1A58	0xAC83      	BTFSS       PORTD, 6 
0x1A5A	0xD00F      	BRA         L_lineFollowNormalWorked199
0x1A5C	0xAE83      	BTFSS       PORTD, 7 
0x1A5E	0xD00D      	BRA         L_lineFollowNormalWorked199
0x1A60	0xA481      	BTFSS       PORTB, 2 
0x1A62	0xD00B      	BRA         L_lineFollowNormalWorked199
0x1A64	0xAC81      	BTFSS       PORTB, 6 
0x1A66	0xD009      	BRA         L_lineFollowNormalWorked199
0x1A68	0xAE81      	BTFSS       PORTB, 7 
0x1A6A	0xD007      	BRA         L_lineFollowNormalWorked199
L__lineFollowNormalWorked860:
;linefollow.h,185 :: 		rotateByDegree(90);
0x1A6C	0x0E5A      	MOVLW       90
0x1A6E	0x0101      	MOVLB       1
0x1A70	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1A72	0x0E00      	MOVLW       0
0x1A74	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1A76	0xDCAC      	RCALL       _rotateByDegree
0x1A78	0xD1A0      	BRA         L_lineFollowNormalWorked200
L_lineFollowNormalWorked199:
;linefollow.h,186 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1A7A	0xB881      	BTFSC       PORTB, 4 
0x1A7C	0xD017      	BRA         L_lineFollowNormalWorked203
0x1A7E	0xB681      	BTFSC       PORTB, 3 
0x1A80	0xD015      	BRA         L_lineFollowNormalWorked203
0x1A82	0xB883      	BTFSC       PORTD, 4 
0x1A84	0xD013      	BRA         L_lineFollowNormalWorked203
0x1A86	0xAA83      	BTFSS       PORTD, 5 
0x1A88	0xD011      	BRA         L_lineFollowNormalWorked203
0x1A8A	0xAC83      	BTFSS       PORTD, 6 
0x1A8C	0xD00F      	BRA         L_lineFollowNormalWorked203
0x1A8E	0xAE83      	BTFSS       PORTD, 7 
0x1A90	0xD00D      	BRA         L_lineFollowNormalWorked203
0x1A92	0xA481      	BTFSS       PORTB, 2 
0x1A94	0xD00B      	BRA         L_lineFollowNormalWorked203
0x1A96	0xAC81      	BTFSS       PORTB, 6 
0x1A98	0xD009      	BRA         L_lineFollowNormalWorked203
0x1A9A	0xAE81      	BTFSS       PORTB, 7 
0x1A9C	0xD007      	BRA         L_lineFollowNormalWorked203
L__lineFollowNormalWorked859:
;linefollow.h,187 :: 		rotateByDegree(90);
0x1A9E	0x0E5A      	MOVLW       90
0x1AA0	0x0101      	MOVLB       1
0x1AA2	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1AA4	0x0E00      	MOVLW       0
0x1AA6	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1AA8	0xDC93      	RCALL       _rotateByDegree
0x1AAA	0xD187      	BRA         L_lineFollowNormalWorked204
L_lineFollowNormalWorked203:
;linefollow.h,188 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x1AAC	0xB881      	BTFSC       PORTB, 4 
0x1AAE	0xD017      	BRA         L_lineFollowNormalWorked207
0x1AB0	0xB681      	BTFSC       PORTB, 3 
0x1AB2	0xD015      	BRA         L_lineFollowNormalWorked207
0x1AB4	0xB883      	BTFSC       PORTD, 4 
0x1AB6	0xD013      	BRA         L_lineFollowNormalWorked207
0x1AB8	0xBA83      	BTFSC       PORTD, 5 
0x1ABA	0xD011      	BRA         L_lineFollowNormalWorked207
0x1ABC	0xAC83      	BTFSS       PORTD, 6 
0x1ABE	0xD00F      	BRA         L_lineFollowNormalWorked207
0x1AC0	0xAE83      	BTFSS       PORTD, 7 
0x1AC2	0xD00D      	BRA         L_lineFollowNormalWorked207
0x1AC4	0xA481      	BTFSS       PORTB, 2 
0x1AC6	0xD00B      	BRA         L_lineFollowNormalWorked207
0x1AC8	0xAC81      	BTFSS       PORTB, 6 
0x1ACA	0xD009      	BRA         L_lineFollowNormalWorked207
0x1ACC	0xAE81      	BTFSS       PORTB, 7 
0x1ACE	0xD007      	BRA         L_lineFollowNormalWorked207
L__lineFollowNormalWorked858:
;linefollow.h,189 :: 		rotateByDegree(90);
0x1AD0	0x0E5A      	MOVLW       90
0x1AD2	0x0101      	MOVLB       1
0x1AD4	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1AD6	0x0E00      	MOVLW       0
0x1AD8	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1ADA	0xDC7A      	RCALL       _rotateByDegree
0x1ADC	0xD16E      	BRA         L_lineFollowNormalWorked208
L_lineFollowNormalWorked207:
;linefollow.h,194 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1ADE	0xA883      	BTFSS       PORTD, 4 
0x1AE0	0xD00F      	BRA         L_lineFollowNormalWorked211
0x1AE2	0xBA83      	BTFSC       PORTD, 5 
0x1AE4	0xD00D      	BRA         L_lineFollowNormalWorked211
0x1AE6	0xBC83      	BTFSC       PORTD, 6 
0x1AE8	0xD00B      	BRA         L_lineFollowNormalWorked211
0x1AEA	0xBE83      	BTFSC       PORTD, 7 
0x1AEC	0xD009      	BRA         L_lineFollowNormalWorked211
0x1AEE	0xB481      	BTFSC       PORTB, 2 
0x1AF0	0xD007      	BRA         L_lineFollowNormalWorked211
L__lineFollowNormalWorked857:
;linefollow.h,196 :: 		turnLeft(FAST_PWM);
0x1AF2	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1AF6	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1AFA	0xF007EC92  	CALL        _turnLeft, 0
0x1AFE	0xD15D      	BRA         L_lineFollowNormalWorked212
L_lineFollowNormalWorked211:
;linefollow.h,197 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1B00	0xA883      	BTFSS       PORTD, 4 
0x1B02	0xD00F      	BRA         L_lineFollowNormalWorked215
0x1B04	0xAA83      	BTFSS       PORTD, 5 
0x1B06	0xD00D      	BRA         L_lineFollowNormalWorked215
0x1B08	0xBC83      	BTFSC       PORTD, 6 
0x1B0A	0xD00B      	BRA         L_lineFollowNormalWorked215
0x1B0C	0xBE83      	BTFSC       PORTD, 7 
0x1B0E	0xD009      	BRA         L_lineFollowNormalWorked215
0x1B10	0xB481      	BTFSC       PORTB, 2 
0x1B12	0xD007      	BRA         L_lineFollowNormalWorked215
L__lineFollowNormalWorked856:
;linefollow.h,199 :: 		turnLeft(FAST_PWM);
0x1B14	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1B18	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1B1C	0xF007EC92  	CALL        _turnLeft, 0
0x1B20	0xD14C      	BRA         L_lineFollowNormalWorked216
L_lineFollowNormalWorked215:
;linefollow.h,200 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1B22	0xA883      	BTFSS       PORTD, 4 
0x1B24	0xD00F      	BRA         L_lineFollowNormalWorked219
0x1B26	0xAA83      	BTFSS       PORTD, 5 
0x1B28	0xD00D      	BRA         L_lineFollowNormalWorked219
0x1B2A	0xAC83      	BTFSS       PORTD, 6 
0x1B2C	0xD00B      	BRA         L_lineFollowNormalWorked219
0x1B2E	0xBE83      	BTFSC       PORTD, 7 
0x1B30	0xD009      	BRA         L_lineFollowNormalWorked219
0x1B32	0xB481      	BTFSC       PORTB, 2 
0x1B34	0xD007      	BRA         L_lineFollowNormalWorked219
L__lineFollowNormalWorked855:
;linefollow.h,202 :: 		turnLeft(FAST_PWM);
0x1B36	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1B3A	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1B3E	0xF007EC92  	CALL        _turnLeft, 0
0x1B42	0xD13B      	BRA         L_lineFollowNormalWorked220
L_lineFollowNormalWorked219:
;linefollow.h,203 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x1B44	0xB883      	BTFSC       PORTD, 4 
0x1B46	0xD00F      	BRA         L_lineFollowNormalWorked223
0x1B48	0xAA83      	BTFSS       PORTD, 5 
0x1B4A	0xD00D      	BRA         L_lineFollowNormalWorked223
0x1B4C	0xBC83      	BTFSC       PORTD, 6 
0x1B4E	0xD00B      	BRA         L_lineFollowNormalWorked223
0x1B50	0xBE83      	BTFSC       PORTD, 7 
0x1B52	0xD009      	BRA         L_lineFollowNormalWorked223
0x1B54	0xB481      	BTFSC       PORTB, 2 
0x1B56	0xD007      	BRA         L_lineFollowNormalWorked223
L__lineFollowNormalWorked854:
;linefollow.h,205 :: 		turnLeft(FAST_PWM);
0x1B58	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x1B5C	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x1B60	0xF007EC92  	CALL        _turnLeft, 0
0x1B64	0xD12A      	BRA         L_lineFollowNormalWorked224
L_lineFollowNormalWorked223:
;linefollow.h,208 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x1B66	0xB883      	BTFSC       PORTD, 4 
0x1B68	0xD00F      	BRA         L_lineFollowNormalWorked227
0x1B6A	0xBA83      	BTFSC       PORTD, 5 
0x1B6C	0xD00D      	BRA         L_lineFollowNormalWorked227
0x1B6E	0xBC83      	BTFSC       PORTD, 6 
0x1B70	0xD00B      	BRA         L_lineFollowNormalWorked227
0x1B72	0xAE83      	BTFSS       PORTD, 7 
0x1B74	0xD009      	BRA         L_lineFollowNormalWorked227
0x1B76	0xB481      	BTFSC       PORTB, 2 
0x1B78	0xD007      	BRA         L_lineFollowNormalWorked227
L__lineFollowNormalWorked853:
;linefollow.h,210 :: 		turnRight(FAST_PWM);
0x1B7A	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1B7E	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1B82	0xF007ECFD  	CALL        _turnRight, 0
0x1B86	0xD119      	BRA         L_lineFollowNormalWorked228
L_lineFollowNormalWorked227:
;linefollow.h,211 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1B88	0xB883      	BTFSC       PORTD, 4 
0x1B8A	0xD00F      	BRA         L_lineFollowNormalWorked231
0x1B8C	0xBA83      	BTFSC       PORTD, 5 
0x1B8E	0xD00D      	BRA         L_lineFollowNormalWorked231
0x1B90	0xAC83      	BTFSS       PORTD, 6 
0x1B92	0xD00B      	BRA         L_lineFollowNormalWorked231
0x1B94	0xAE83      	BTFSS       PORTD, 7 
0x1B96	0xD009      	BRA         L_lineFollowNormalWorked231
0x1B98	0xA481      	BTFSS       PORTB, 2 
0x1B9A	0xD007      	BRA         L_lineFollowNormalWorked231
L__lineFollowNormalWorked852:
;linefollow.h,213 :: 		turnRight(FAST_PWM);
0x1B9C	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1BA0	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1BA4	0xF007ECFD  	CALL        _turnRight, 0
0x1BA8	0xD108      	BRA         L_lineFollowNormalWorked232
L_lineFollowNormalWorked231:
;linefollow.h,214 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x1BAA	0xB883      	BTFSC       PORTD, 4 
0x1BAC	0xD00F      	BRA         L_lineFollowNormalWorked235
0x1BAE	0xBA83      	BTFSC       PORTD, 5 
0x1BB0	0xD00D      	BRA         L_lineFollowNormalWorked235
0x1BB2	0xBC83      	BTFSC       PORTD, 6 
0x1BB4	0xD00B      	BRA         L_lineFollowNormalWorked235
0x1BB6	0xAE83      	BTFSS       PORTD, 7 
0x1BB8	0xD009      	BRA         L_lineFollowNormalWorked235
0x1BBA	0xA481      	BTFSS       PORTB, 2 
0x1BBC	0xD007      	BRA         L_lineFollowNormalWorked235
L__lineFollowNormalWorked851:
;linefollow.h,216 :: 		turnRight(FAST_PWM);
0x1BBE	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1BC2	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1BC6	0xF007ECFD  	CALL        _turnRight, 0
0x1BCA	0xD0F7      	BRA         L_lineFollowNormalWorked236
L_lineFollowNormalWorked235:
;linefollow.h,217 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x1BCC	0xB883      	BTFSC       PORTD, 4 
0x1BCE	0xD00F      	BRA         L_lineFollowNormalWorked239
0x1BD0	0xBA83      	BTFSC       PORTD, 5 
0x1BD2	0xD00D      	BRA         L_lineFollowNormalWorked239
0x1BD4	0xBC83      	BTFSC       PORTD, 6 
0x1BD6	0xD00B      	BRA         L_lineFollowNormalWorked239
0x1BD8	0xBE83      	BTFSC       PORTD, 7 
0x1BDA	0xD009      	BRA         L_lineFollowNormalWorked239
0x1BDC	0xA481      	BTFSS       PORTB, 2 
0x1BDE	0xD007      	BRA         L_lineFollowNormalWorked239
L__lineFollowNormalWorked850:
;linefollow.h,219 :: 		turnRight(FAST_PWM);
0x1BE0	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x1BE4	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x1BE8	0xF007ECFD  	CALL        _turnRight, 0
0x1BEC	0xD0E6      	BRA         L_lineFollowNormalWorked240
L_lineFollowNormalWorked239:
;linefollow.h,222 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1BEE	0xA883      	BTFSS       PORTD, 4 
0x1BF0	0xD013      	BRA         L_lineFollowNormalWorked243
0x1BF2	0xAA83      	BTFSS       PORTD, 5 
0x1BF4	0xD011      	BRA         L_lineFollowNormalWorked243
0x1BF6	0xAC83      	BTFSS       PORTD, 6 
0x1BF8	0xD00F      	BRA         L_lineFollowNormalWorked243
0x1BFA	0xAE83      	BTFSS       PORTD, 7 
0x1BFC	0xD00D      	BRA         L_lineFollowNormalWorked243
0x1BFE	0xB481      	BTFSC       PORTB, 2 
0x1C00	0xD00B      	BRA         L_lineFollowNormalWorked243
L__lineFollowNormalWorked849:
;linefollow.h,223 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1C02	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x1C06	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x1C0A	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1C0E	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1C12	0xF007EC61  	CALL        _moveForward, 0
0x1C16	0xD0D1      	BRA         L_lineFollowNormalWorked244
L_lineFollowNormalWorked243:
;linefollow.h,224 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x1C18	0xB883      	BTFSC       PORTD, 4 
0x1C1A	0xD013      	BRA         L_lineFollowNormalWorked247
0x1C1C	0xAA83      	BTFSS       PORTD, 5 
0x1C1E	0xD011      	BRA         L_lineFollowNormalWorked247
0x1C20	0xAC83      	BTFSS       PORTD, 6 
0x1C22	0xD00F      	BRA         L_lineFollowNormalWorked247
0x1C24	0xAE83      	BTFSS       PORTD, 7 
0x1C26	0xD00D      	BRA         L_lineFollowNormalWorked247
0x1C28	0xA481      	BTFSS       PORTB, 2 
0x1C2A	0xD00B      	BRA         L_lineFollowNormalWorked247
L__lineFollowNormalWorked848:
;linefollow.h,225 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x1C2C	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1C30	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1C34	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x1C38	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x1C3C	0xF007EC61  	CALL        _moveForward, 0
0x1C40	0xD0BC      	BRA         L_lineFollowNormalWorked248
L_lineFollowNormalWorked247:
;linefollow.h,226 :: 		else if( Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==1 && Sensor7==1 && Sensor8==1)
0x1C42	0xA681      	BTFSS       PORTB, 3 
0x1C44	0xD017      	BRA         L_lineFollowNormalWorked251
0x1C46	0xA883      	BTFSS       PORTD, 4 
0x1C48	0xD015      	BRA         L_lineFollowNormalWorked251
0x1C4A	0xAA83      	BTFSS       PORTD, 5 
0x1C4C	0xD013      	BRA         L_lineFollowNormalWorked251
0x1C4E	0xBC83      	BTFSC       PORTD, 6 
0x1C50	0xD011      	BRA         L_lineFollowNormalWorked251
0x1C52	0xAE83      	BTFSS       PORTD, 7 
0x1C54	0xD00F      	BRA         L_lineFollowNormalWorked251
0x1C56	0xA481      	BTFSS       PORTB, 2 
0x1C58	0xD00D      	BRA         L_lineFollowNormalWorked251
0x1C5A	0xAC81      	BTFSS       PORTB, 6 
0x1C5C	0xD00B      	BRA         L_lineFollowNormalWorked251
L__lineFollowNormalWorked847:
;linefollow.h,227 :: 		while(Scout==0)
L_lineFollowNormalWorked252:
0x1C5E	0xBA81      	BTFSC       PORTB, 5 
0x1C60	0xD008      	BRA         L_lineFollowNormalWorked253
;linefollow.h,228 :: 		rotateAntiClockwise(255);
0x1C62	0x0EFF      	MOVLW       255
0x1C64	0x0101      	MOVLB       1
0x1C66	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1C68	0x0E00      	MOVLW       0
0x1C6A	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1C6C	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x1C70	0xD7F6      	BRA         L_lineFollowNormalWorked252
L_lineFollowNormalWorked253:
0x1C72	0xD0A3      	BRA         L_lineFollowNormalWorked254
L_lineFollowNormalWorked251:
;linefollow.h,229 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==1 && Sensor9==1)
0x1C74	0xB881      	BTFSC       PORTB, 4 
0x1C76	0xD01B      	BRA         L_lineFollowNormalWorked257
0x1C78	0xB681      	BTFSC       PORTB, 3 
0x1C7A	0xD019      	BRA         L_lineFollowNormalWorked257
0x1C7C	0xB883      	BTFSC       PORTD, 4 
0x1C7E	0xD017      	BRA         L_lineFollowNormalWorked257
0x1C80	0xBA83      	BTFSC       PORTD, 5 
0x1C82	0xD015      	BRA         L_lineFollowNormalWorked257
0x1C84	0xBC83      	BTFSC       PORTD, 6 
0x1C86	0xD013      	BRA         L_lineFollowNormalWorked257
0x1C88	0xBE83      	BTFSC       PORTD, 7 
0x1C8A	0xD011      	BRA         L_lineFollowNormalWorked257
0x1C8C	0xB481      	BTFSC       PORTB, 2 
0x1C8E	0xD00F      	BRA         L_lineFollowNormalWorked257
0x1C90	0xAC81      	BTFSS       PORTB, 6 
0x1C92	0xD00D      	BRA         L_lineFollowNormalWorked257
0x1C94	0xAE81      	BTFSS       PORTB, 7 
0x1C96	0xD00B      	BRA         L_lineFollowNormalWorked257
L__lineFollowNormalWorked846:
;linefollow.h,230 :: 		while(Scout==0)
L_lineFollowNormalWorked258:
0x1C98	0xBA81      	BTFSC       PORTB, 5 
0x1C9A	0xD008      	BRA         L_lineFollowNormalWorked259
;linefollow.h,231 :: 		rotateClockwise(255);
0x1C9C	0x0EFF      	MOVLW       255
0x1C9E	0x0101      	MOVLB       1
0x1CA0	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1CA2	0x0E00      	MOVLW       0
0x1CA4	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x1CA6	0xF007EC6E  	CALL        _rotateClockwise, 0
0x1CAA	0xD7F6      	BRA         L_lineFollowNormalWorked258
L_lineFollowNormalWorked259:
0x1CAC	0xD086      	BRA         L_lineFollowNormalWorked260
L_lineFollowNormalWorked257:
;linefollow.h,232 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x1CAE	0xA881      	BTFSS       PORTB, 4 
0x1CB0	0xD01B      	BRA         L_lineFollowNormalWorked263
0x1CB2	0xA681      	BTFSS       PORTB, 3 
0x1CB4	0xD019      	BRA         L_lineFollowNormalWorked263
0x1CB6	0xB883      	BTFSC       PORTD, 4 
0x1CB8	0xD017      	BRA         L_lineFollowNormalWorked263
0x1CBA	0xBA83      	BTFSC       PORTD, 5 
0x1CBC	0xD015      	BRA         L_lineFollowNormalWorked263
0x1CBE	0xBC83      	BTFSC       PORTD, 6 
0x1CC0	0xD013      	BRA         L_lineFollowNormalWorked263
0x1CC2	0xBE83      	BTFSC       PORTD, 7 
0x1CC4	0xD011      	BRA         L_lineFollowNormalWorked263
0x1CC6	0xB481      	BTFSC       PORTB, 2 
0x1CC8	0xD00F      	BRA         L_lineFollowNormalWorked263
0x1CCA	0xBC81      	BTFSC       PORTB, 6 
0x1CCC	0xD00D      	BRA         L_lineFollowNormalWorked263
0x1CCE	0xBE81      	BTFSC       PORTB, 7 
0x1CD0	0xD00B      	BRA         L_lineFollowNormalWorked263
L__lineFollowNormalWorked845:
;linefollow.h,233 :: 		while(Scout==0)
L_lineFollowNormalWorked264:
0x1CD2	0xBA81      	BTFSC       PORTB, 5 
0x1CD4	0xD008      	BRA         L_lineFollowNormalWorked265
;linefollow.h,234 :: 		rotateAntiClockwise(255);
0x1CD6	0x0EFF      	MOVLW       255
0x1CD8	0x0101      	MOVLB       1
0x1CDA	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1CDC	0x0E00      	MOVLW       0
0x1CDE	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1CE0	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x1CE4	0xD7F6      	BRA         L_lineFollowNormalWorked264
L_lineFollowNormalWorked265:
0x1CE6	0xD069      	BRA         L_lineFollowNormalWorked266
L_lineFollowNormalWorked263:
;linefollow.h,237 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1CE8	0xB883      	BTFSC       PORTD, 4 
0x1CEA	0xD013      	BRA         L_lineFollowNormalWorked269
0x1CEC	0xAA83      	BTFSS       PORTD, 5 
0x1CEE	0xD011      	BRA         L_lineFollowNormalWorked269
0x1CF0	0xAC83      	BTFSS       PORTD, 6 
0x1CF2	0xD00F      	BRA         L_lineFollowNormalWorked269
0x1CF4	0xBE83      	BTFSC       PORTD, 7 
0x1CF6	0xD00D      	BRA         L_lineFollowNormalWorked269
0x1CF8	0xB481      	BTFSC       PORTB, 2 
0x1CFA	0xD00B      	BRA         L_lineFollowNormalWorked269
L__lineFollowNormalWorked844:
;linefollow.h,238 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x1CFC	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x1D00	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x1D04	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1D08	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1D0C	0xF007EC61  	CALL        _moveForward, 0
0x1D10	0xD054      	BRA         L_lineFollowNormalWorked270
L_lineFollowNormalWorked269:
;linefollow.h,239 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1D12	0xB883      	BTFSC       PORTD, 4 
0x1D14	0xD013      	BRA         L_lineFollowNormalWorked273
0x1D16	0xAA83      	BTFSS       PORTD, 5 
0x1D18	0xD011      	BRA         L_lineFollowNormalWorked273
0x1D1A	0xAC83      	BTFSS       PORTD, 6 
0x1D1C	0xD00F      	BRA         L_lineFollowNormalWorked273
0x1D1E	0xAE83      	BTFSS       PORTD, 7 
0x1D20	0xD00D      	BRA         L_lineFollowNormalWorked273
0x1D22	0xB481      	BTFSC       PORTB, 2 
0x1D24	0xD00B      	BRA         L_lineFollowNormalWorked273
L__lineFollowNormalWorked843:
;linefollow.h,240 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1D26	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1D2A	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1D2E	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1D32	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1D36	0xF007EC61  	CALL        _moveForward, 0
0x1D3A	0xD03F      	BRA         L_lineFollowNormalWorked274
L_lineFollowNormalWorked273:
;linefollow.h,241 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x1D3C	0xB883      	BTFSC       PORTD, 4 
0x1D3E	0xD013      	BRA         L_lineFollowNormalWorked277
0x1D40	0xBA83      	BTFSC       PORTD, 5 
0x1D42	0xD011      	BRA         L_lineFollowNormalWorked277
0x1D44	0xAC83      	BTFSS       PORTD, 6 
0x1D46	0xD00F      	BRA         L_lineFollowNormalWorked277
0x1D48	0xBE83      	BTFSC       PORTD, 7 
0x1D4A	0xD00D      	BRA         L_lineFollowNormalWorked277
0x1D4C	0xB481      	BTFSC       PORTB, 2 
0x1D4E	0xD00B      	BRA         L_lineFollowNormalWorked277
L__lineFollowNormalWorked842:
;linefollow.h,242 :: 		moveForward(FAST_PWM,FAST_PWM);
0x1D50	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1D54	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1D58	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x1D5C	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x1D60	0xF007EC61  	CALL        _moveForward, 0
0x1D64	0xD02A      	BRA         L_lineFollowNormalWorked278
L_lineFollowNormalWorked277:
;linefollow.h,243 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x1D66	0xB883      	BTFSC       PORTD, 4 
0x1D68	0xD013      	BRA         L_lineFollowNormalWorked281
0x1D6A	0xBA83      	BTFSC       PORTD, 5 
0x1D6C	0xD011      	BRA         L_lineFollowNormalWorked281
0x1D6E	0xAC83      	BTFSS       PORTD, 6 
0x1D70	0xD00F      	BRA         L_lineFollowNormalWorked281
0x1D72	0xAE83      	BTFSS       PORTD, 7 
0x1D74	0xD00D      	BRA         L_lineFollowNormalWorked281
0x1D76	0xB481      	BTFSC       PORTB, 2 
0x1D78	0xD00B      	BRA         L_lineFollowNormalWorked281
L__lineFollowNormalWorked841:
;linefollow.h,244 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x1D7A	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x1D7E	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x1D82	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x1D86	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x1D8A	0xF007EC61  	CALL        _moveForward, 0
0x1D8E	0xD015      	BRA         L_lineFollowNormalWorked282
L_lineFollowNormalWorked281:
;linefollow.h,247 :: 		else if(isAllWhite()){
0x1D90	0xF008EC85  	CALL        _isAllWhite, 0
0x1D94	0x5000      	MOVF        R0, 0 
0x1D96	0x1001      	IORWF       R1, 0 
0x1D98	0xE003      	BZ          L_lineFollowNormalWorked283
;linefollow.h,250 :: 		sendSensorStatus();
0x1D9A	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,251 :: 		}
0x1D9E	0xD00D      	BRA         L_lineFollowNormalWorked284
L_lineFollowNormalWorked283:
0x1DA0	0x0101      	MOVLB       1
;linefollow.h,254 :: 		reverse(220,220);
0x1DA2	0x0EDC      	MOVLW       220
0x1DA4	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x1DA6	0x0E00      	MOVLW       0
0x1DA8	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x1DAA	0x0EDC      	MOVLW       220
0x1DAC	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x1DAE	0x0E00      	MOVLW       0
0x1DB0	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x1DB2	0xF009ECDB  	CALL        _reverse, 0
;linefollow.h,255 :: 		sendSensorStatus();
0x1DB6	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,257 :: 		}
L_lineFollowNormalWorked284:
L_lineFollowNormalWorked282:
L_lineFollowNormalWorked278:
L_lineFollowNormalWorked274:
L_lineFollowNormalWorked270:
L_lineFollowNormalWorked266:
L_lineFollowNormalWorked260:
L_lineFollowNormalWorked254:
L_lineFollowNormalWorked248:
L_lineFollowNormalWorked244:
L_lineFollowNormalWorked240:
L_lineFollowNormalWorked236:
L_lineFollowNormalWorked232:
L_lineFollowNormalWorked228:
L_lineFollowNormalWorked224:
L_lineFollowNormalWorked220:
L_lineFollowNormalWorked216:
L_lineFollowNormalWorked212:
L_lineFollowNormalWorked208:
L_lineFollowNormalWorked204:
L_lineFollowNormalWorked200:
L_lineFollowNormalWorked196:
L_lineFollowNormalWorked192:
L_lineFollowNormalWorked188:
;linefollow.h,258 :: 		}
L_lineFollowNormalWorked184:
;linefollow.h,259 :: 		}
0x1DBA	0x0012      	RETURN      0
; end of _lineFollowNormalWorked
_level3Aligning:
;Main 7.0V.c,334 :: 		void level3Aligning(){
;Main 7.0V.c,335 :: 		while(Sensor4 == 0 || Sensor5 == 0 || Sensor6 == 0)
L_level3Aligning782:
0x1DBC	0xAA83      	BTFSS       PORTD, 5 
0x1DBE	0xD005      	BRA         L__level3Aligning977
0x1DC0	0xAC83      	BTFSS       PORTD, 6 
0x1DC2	0xD003      	BRA         L__level3Aligning977
0x1DC4	0xAE83      	BTFSS       PORTD, 7 
0x1DC6	0xD001      	BRA         L__level3Aligning977
0x1DC8	0xD00C      	BRA         L_level3Aligning783
L__level3Aligning977:
;Main 7.0V.c,336 :: 		reverse(220,220);
0x1DCA	0x0EDC      	MOVLW       220
0x1DCC	0x0101      	MOVLB       1
0x1DCE	0x6F96      	MOVWF       FARG_reverse_pwmLeft, 1
0x1DD0	0x0E00      	MOVLW       0
0x1DD2	0x6F97      	MOVWF       FARG_reverse_pwmLeft+1, 1
0x1DD4	0x0EDC      	MOVLW       220
0x1DD6	0x6F98      	MOVWF       FARG_reverse_pwmRight, 1
0x1DD8	0x0E00      	MOVLW       0
0x1DDA	0x6F99      	MOVWF       FARG_reverse_pwmRight+1, 1
0x1DDC	0xF009ECDB  	CALL        _reverse, 0
0x1DE0	0xD7ED      	BRA         L_level3Aligning782
L_level3Aligning783:
;Main 7.0V.c,337 :: 		delay_ms(1);
0x1DE2	0x0E07      	MOVLW       7
0x1DE4	0x6E0C      	MOVWF       R12, 0
0x1DE6	0x0E7D      	MOVLW       125
0x1DE8	0x6E0D      	MOVWF       R13, 0
L_level3Aligning786:
0x1DEA	0x2E0D      	DECFSZ      R13, 1, 0
0x1DEC	0xD7FE      	BRA         L_level3Aligning786
0x1DEE	0x2E0C      	DECFSZ      R12, 1, 0
0x1DF0	0xD7FC      	BRA         L_level3Aligning786
;Main 7.0V.c,338 :: 		stop();
0x1DF2	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,339 :: 		sendText("Sensor5 at LEVEL 2 ");
0x1DF6	0x0E5A      	MOVLW       ?lstr44_Main_327.0V
0x1DF8	0x0101      	MOVLB       1
0x1DFA	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x1DFC	0x0E00      	MOVLW       hi_addr(?lstr44_Main_327.0V)
0x1DFE	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x1E00	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,340 :: 		delay_ms(500);
0x1E04	0x0E0D      	MOVLW       13
0x1E06	0x6E0B      	MOVWF       R11, 0
0x1E08	0x0EAF      	MOVLW       175
0x1E0A	0x6E0C      	MOVWF       R12, 0
0x1E0C	0x0EB6      	MOVLW       182
0x1E0E	0x6E0D      	MOVWF       R13, 0
L_level3Aligning787:
0x1E10	0x2E0D      	DECFSZ      R13, 1, 0
0x1E12	0xD7FE      	BRA         L_level3Aligning787
0x1E14	0x2E0C      	DECFSZ      R12, 1, 0
0x1E16	0xD7FC      	BRA         L_level3Aligning787
0x1E18	0x2E0B      	DECFSZ      R11, 1, 0
0x1E1A	0xD7FA      	BRA         L_level3Aligning787
0x1E1C	0x0000      	NOP
;Main 7.0V.c,341 :: 		while(Sensor1==0 || Sensor2==0 || Sensor3==0 || Sensor4==0 || Sensor5==0 || Sensor6==0 || Sensor7==0 || Sensor8==0 || Sensor9==0){
L_level3Aligning788:
0x1E1E	0xA881      	BTFSS       PORTB, 4 
0x1E20	0xD011      	BRA         L__level3Aligning976
0x1E22	0xA681      	BTFSS       PORTB, 3 
0x1E24	0xD00F      	BRA         L__level3Aligning976
0x1E26	0xA883      	BTFSS       PORTD, 4 
0x1E28	0xD00D      	BRA         L__level3Aligning976
0x1E2A	0xAA83      	BTFSS       PORTD, 5 
0x1E2C	0xD00B      	BRA         L__level3Aligning976
0x1E2E	0xAC83      	BTFSS       PORTD, 6 
0x1E30	0xD009      	BRA         L__level3Aligning976
0x1E32	0xAE83      	BTFSS       PORTD, 7 
0x1E34	0xD007      	BRA         L__level3Aligning976
0x1E36	0xA481      	BTFSS       PORTB, 2 
0x1E38	0xD005      	BRA         L__level3Aligning976
0x1E3A	0xAC81      	BTFSS       PORTB, 6 
0x1E3C	0xD003      	BRA         L__level3Aligning976
0x1E3E	0xAE81      	BTFSS       PORTB, 7 
0x1E40	0xD001      	BRA         L__level3Aligning976
0x1E42	0xD014      	BRA         L_level3Aligning789
L__level3Aligning976:
;Main 7.0V.c,342 :: 		if(Sensor9 == 1)
0x1E44	0xAE81      	BTFSS       PORTB, 7 
0x1E46	0xD008      	BRA         L_level3Aligning792
;Main 7.0V.c,343 :: 		rotateAntiClockwise(220);
0x1E48	0x0101      	MOVLB       1
0x1E4A	0x0EDC      	MOVLW       220
0x1E4C	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x1E4E	0x0E00      	MOVLW       0
0x1E50	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x1E52	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x1E56	0xD009      	BRA         L_level3Aligning793
L_level3Aligning792:
;Main 7.0V.c,345 :: 		else if(Sensor1 == 1)
0x1E58	0xA881      	BTFSS       PORTB, 4 
0x1E5A	0xD007      	BRA         L_level3Aligning794
;Main 7.0V.c,346 :: 		rotateClockwise(220);
0x1E5C	0x0EDC      	MOVLW       220
0x1E5E	0x0101      	MOVLB       1
0x1E60	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x1E62	0x0E00      	MOVLW       0
0x1E64	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x1E66	0xF007EC6E  	CALL        _rotateClockwise, 0
L_level3Aligning794:
L_level3Aligning793:
;Main 7.0V.c,348 :: 		}
0x1E6A	0xD7D9      	BRA         L_level3Aligning788
L_level3Aligning789:
;Main 7.0V.c,349 :: 		stop();
0x1E6C	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,350 :: 		}
0x1E70	0x0012      	RETURN      0
; end of _level3Aligning
_goThroughObstaclesJay:
;Main 7.0V.c,255 :: 		void goThroughObstaclesJay(){
;Main 7.0V.c,256 :: 		int ROTATION_ANGLE = 0;
0x1E72	0x0101      	MOVLB       1
0x1E74	0x6B8A      	CLRF        goThroughObstaclesJay_ROTATION_ANGLE_L0, 1
0x1E76	0x6B8B      	CLRF        goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1
;Main 7.0V.c,257 :: 		if(isPathClear() == 0) {
0x1E78	0xF008ECA1  	CALL        _isPathClear, 0
0x1E7C	0x0E00      	MOVLW       0
0x1E7E	0x1801      	XORWF       R1, 0 
0x1E80	0xE102      	BNZ         L__goThroughObstaclesJay1046
0x1E82	0x0E00      	MOVLW       0
0x1E84	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1046:
0x1E86	0xA4D8      	BTFSS       STATUS, 2 
0x1E88	0xD086      	BRA         L_goThroughObstaclesJay759
;Main 7.0V.c,258 :: 		rotateByDegree(30);
0x1E8A	0x0E1E      	MOVLW       30
0x1E8C	0x0101      	MOVLB       1
0x1E8E	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1E90	0x0E00      	MOVLW       0
0x1E92	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1E94	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,259 :: 		ROTATION_ANGLE += 30;
0x1E98	0x0E1E      	MOVLW       30
0x1E9A	0x0101      	MOVLB       1
0x1E9C	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1E9E	0x0E00      	MOVLW       0
0x1EA0	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,260 :: 		if(isPathClear() == 0) {
0x1EA2	0xF008ECA1  	CALL        _isPathClear, 0
0x1EA6	0x0E00      	MOVLW       0
0x1EA8	0x1801      	XORWF       R1, 0 
0x1EAA	0xE102      	BNZ         L__goThroughObstaclesJay1047
0x1EAC	0x0E00      	MOVLW       0
0x1EAE	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1047:
0x1EB0	0xA4D8      	BTFSS       STATUS, 2 
0x1EB2	0xD071      	BRA         L_goThroughObstaclesJay760
;Main 7.0V.c,261 :: 		rotateByDegree(-60);
0x1EB4	0x0EC4      	MOVLW       196
0x1EB6	0x0101      	MOVLB       1
0x1EB8	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1EBA	0x0EFF      	MOVLW       255
0x1EBC	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1EBE	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,262 :: 		ROTATION_ANGLE += -60;
0x1EC2	0x0EC4      	MOVLW       196
0x1EC4	0x0101      	MOVLB       1
0x1EC6	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1EC8	0x0EFF      	MOVLW       255
0x1ECA	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,263 :: 		if(isPathClear() == 0) {
0x1ECC	0xF008ECA1  	CALL        _isPathClear, 0
0x1ED0	0x0E00      	MOVLW       0
0x1ED2	0x1801      	XORWF       R1, 0 
0x1ED4	0xE102      	BNZ         L__goThroughObstaclesJay1048
0x1ED6	0x0E00      	MOVLW       0
0x1ED8	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1048:
0x1EDA	0xE15D      	BNZ         L_goThroughObstaclesJay761
;Main 7.0V.c,264 :: 		rotateByDegree(90);
0x1EDC	0x0E5A      	MOVLW       90
0x1EDE	0x0101      	MOVLB       1
0x1EE0	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1EE2	0x0E00      	MOVLW       0
0x1EE4	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1EE6	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,265 :: 		ROTATION_ANGLE += 90;
0x1EEA	0x0E5A      	MOVLW       90
0x1EEC	0x0101      	MOVLB       1
0x1EEE	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1EF0	0x0E00      	MOVLW       0
0x1EF2	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,266 :: 		if(isPathClear() == 0) {
0x1EF4	0xF008ECA1  	CALL        _isPathClear, 0
0x1EF8	0x0E00      	MOVLW       0
0x1EFA	0x1801      	XORWF       R1, 0 
0x1EFC	0xE102      	BNZ         L__goThroughObstaclesJay1049
0x1EFE	0x0E00      	MOVLW       0
0x1F00	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1049:
0x1F02	0xE149      	BNZ         L_goThroughObstaclesJay762
;Main 7.0V.c,267 :: 		rotateByDegree(-90);
0x1F04	0x0EA6      	MOVLW       166
0x1F06	0x0101      	MOVLB       1
0x1F08	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F0A	0x0EFF      	MOVLW       255
0x1F0C	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F0E	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,268 :: 		rotateByDegree(-30);
0x1F12	0x0EE2      	MOVLW       226
0x1F14	0x0101      	MOVLB       1
0x1F16	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F18	0x0EFF      	MOVLW       255
0x1F1A	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F1C	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,269 :: 		ROTATION_ANGLE += -120;
0x1F20	0x0E88      	MOVLW       136
0x1F22	0x0101      	MOVLB       1
0x1F24	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F26	0x0EFF      	MOVLW       255
0x1F28	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,270 :: 		if(isPathClear() == 0) {
0x1F2A	0xF008ECA1  	CALL        _isPathClear, 0
0x1F2E	0x0E00      	MOVLW       0
0x1F30	0x1801      	XORWF       R1, 0 
0x1F32	0xE102      	BNZ         L__goThroughObstaclesJay1050
0x1F34	0x0E00      	MOVLW       0
0x1F36	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1050:
0x1F38	0xE12E      	BNZ         L_goThroughObstaclesJay763
;Main 7.0V.c,271 :: 		rotateByDegree(90);
0x1F3A	0x0E5A      	MOVLW       90
0x1F3C	0x0101      	MOVLB       1
0x1F3E	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F40	0x0E00      	MOVLW       0
0x1F42	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F44	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,272 :: 		rotateByDegree(60);
0x1F48	0x0E3C      	MOVLW       60
0x1F4A	0x0101      	MOVLB       1
0x1F4C	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F4E	0x0E00      	MOVLW       0
0x1F50	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F52	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,273 :: 		ROTATION_ANGLE += 150;
0x1F56	0x0E96      	MOVLW       150
0x1F58	0x0101      	MOVLB       1
0x1F5A	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F5C	0x0E00      	MOVLW       0
0x1F5E	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,274 :: 		if(isPathClear() == 0) {
0x1F60	0xF008ECA1  	CALL        _isPathClear, 0
0x1F64	0x0E00      	MOVLW       0
0x1F66	0x1801      	XORWF       R1, 0 
0x1F68	0xE102      	BNZ         L__goThroughObstaclesJay1051
0x1F6A	0x0E00      	MOVLW       0
0x1F6C	0x1800      	XORWF       R0, 0 
L__goThroughObstaclesJay1051:
0x1F6E	0xE113      	BNZ         L_goThroughObstaclesJay764
;Main 7.0V.c,275 :: 		rotateByDegree(-90);
0x1F70	0x0EA6      	MOVLW       166
0x1F72	0x0101      	MOVLB       1
0x1F74	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F76	0x0EFF      	MOVLW       255
0x1F78	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F7A	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,276 :: 		rotateByDegree(-90);
0x1F7E	0x0EA6      	MOVLW       166
0x1F80	0x0101      	MOVLB       1
0x1F82	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1F84	0x0EFF      	MOVLW       255
0x1F86	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1F88	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,277 :: 		ROTATION_ANGLE += -180;
0x1F8C	0x0E4C      	MOVLW       76
0x1F8E	0x0101      	MOVLB       1
0x1F90	0x278A      	ADDWF       goThroughObstaclesJay_ROTATION_ANGLE_L0, 1, 1
0x1F92	0x0EFF      	MOVLW       255
0x1F94	0x238B      	ADDWFC      goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 1, 1
;Main 7.0V.c,278 :: 		}
L_goThroughObstaclesJay764:
;Main 7.0V.c,279 :: 		}
L_goThroughObstaclesJay763:
;Main 7.0V.c,280 :: 		}
L_goThroughObstaclesJay762:
;Main 7.0V.c,281 :: 		}
L_goThroughObstaclesJay761:
;Main 7.0V.c,282 :: 		}
L_goThroughObstaclesJay760:
;Main 7.0V.c,283 :: 		}
L_goThroughObstaclesJay759:
0x1F96	0x0101      	MOVLB       1
;Main 7.0V.c,284 :: 		DIRECTION += ROTATION_ANGLE;
0x1F98	0x518A      	MOVF        goThroughObstaclesJay_ROTATION_ANGLE_L0, 0, 1
0x1F9A	0x2644      	ADDWF       _DIRECTION, 1 
0x1F9C	0x518B      	MOVF        goThroughObstaclesJay_ROTATION_ANGLE_L0+1, 0, 1
0x1F9E	0x2245      	ADDWFC      _DIRECTION+1, 1 
;Main 7.0V.c,285 :: 		moveStraightFast();
0x1FA0	0xF007EC87  	CALL        _moveStraightFast, 0
;Main 7.0V.c,286 :: 		delay_ms(10);
0x1FA4	0x0E41      	MOVLW       65
0x1FA6	0x6E0C      	MOVWF       R12, 0
0x1FA8	0x0EEE      	MOVLW       238
0x1FAA	0x6E0D      	MOVWF       R13, 0
L_goThroughObstaclesJay765:
0x1FAC	0x2E0D      	DECFSZ      R13, 1, 0
0x1FAE	0xD7FE      	BRA         L_goThroughObstaclesJay765
0x1FB0	0x2E0C      	DECFSZ      R12, 1, 0
0x1FB2	0xD7FC      	BRA         L_goThroughObstaclesJay765
0x1FB4	0x0000      	NOP
;Main 7.0V.c,288 :: 		if(isAllWhite()) {
0x1FB6	0xF008EC85  	CALL        _isAllWhite, 0
0x1FBA	0x5000      	MOVF        R0, 0 
0x1FBC	0x1001      	IORWF       R1, 0 
0x1FBE	0xE032      	BZ          L_goThroughObstaclesJay766
;Main 7.0V.c,290 :: 		if(abs(DIRECTION) >= 90) {
0x1FC0	0xF196C044  	MOVFF       _DIRECTION, FARG_abs_a
0x1FC4	0xF197C045  	MOVFF       _DIRECTION+1, FARG_abs_a+1
0x1FC8	0xF008EC6E  	CALL        _abs, 0
0x1FCC	0x0E80      	MOVLW       128
0x1FCE	0x1801      	XORWF       R1, 0 
0x1FD0	0x6E02      	MOVWF       R2 
0x1FD2	0x0E80      	MOVLW       128
0x1FD4	0x5C02      	SUBWF       R2, 0 
0x1FD6	0xE102      	BNZ         L__goThroughObstaclesJay1052
0x1FD8	0x0E5A      	MOVLW       90
0x1FDA	0x5C00      	SUBWF       R0, 0 
L__goThroughObstaclesJay1052:
0x1FDC	0xE318      	BNC         L_goThroughObstaclesJay767
;Main 7.0V.c,291 :: 		sendText("Wrong Direction !!!");
0x1FDE	0x0E15      	MOVLW       ?lstr39_Main_327.0V
0x1FE0	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x1FE2	0x0E00      	MOVLW       hi_addr(?lstr39_Main_327.0V)
0x1FE4	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x1FE6	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,292 :: 		rotateByDegree(90);
0x1FEA	0x0E5A      	MOVLW       90
0x1FEC	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1FEE	0x0E00      	MOVLW       0
0x1FF0	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x1FF2	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,293 :: 		rotateByDegree(90);
0x1FF6	0x0E5A      	MOVLW       90
0x1FF8	0x0101      	MOVLB       1
0x1FFA	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x1FFC	0x0E00      	MOVLW       0
0x1FFE	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2000	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,295 :: 		DIRECTION = 0;
0x2004	0x6A44      	CLRF        _DIRECTION 
0x2006	0x6A45      	CLRF        _DIRECTION+1 
;Main 7.0V.c,296 :: 		level2Aligning();
0x2008	0xF008EC06  	CALL        _level2Aligning, 0
;Main 7.0V.c,297 :: 		}
0x200C	0xD00B      	BRA         L_goThroughObstaclesJay768
L_goThroughObstaclesJay767:
;Main 7.0V.c,299 :: 		sendText("Corrent Direction !!!");
0x200E	0x0E29      	MOVLW       ?lstr40_Main_327.0V
0x2010	0x0101      	MOVLB       1
0x2012	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2014	0x0E00      	MOVLW       hi_addr(?lstr40_Main_327.0V)
0x2016	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2018	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,300 :: 		LEVEL2_STATE = COMPLETED;
0x201C	0x0E02      	MOVLW       2
0x201E	0x6F62      	MOVWF       _LEVEL2_STATE, 1
0x2020	0x0E00      	MOVLW       0
0x2022	0x6F63      	MOVWF       _LEVEL2_STATE+1, 1
;Main 7.0V.c,301 :: 		}
L_goThroughObstaclesJay768:
;Main 7.0V.c,302 :: 		}
L_goThroughObstaclesJay766:
;Main 7.0V.c,303 :: 		}
0x2024	0x0012      	RETURN      0
; end of _goThroughObstaclesJay
_lineFollowNormalWorkedForLast:
;linefollow.h,261 :: 		void lineFollowNormalWorkedForLast(){
;linefollow.h,262 :: 		if(Scout == 1){
0x2026	0xAA81      	BTFSS       PORTB, 5 
0x2028	0xD13A      	BRA         L_lineFollowNormalWorkedForLast285
;linefollow.h,264 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x202A	0xB883      	BTFSC       PORTD, 4 
0x202C	0xD013      	BRA         L_lineFollowNormalWorkedForLast288
0x202E	0xAA83      	BTFSS       PORTD, 5 
0x2030	0xD011      	BRA         L_lineFollowNormalWorkedForLast288
0x2032	0xAC83      	BTFSS       PORTD, 6 
0x2034	0xD00F      	BRA         L_lineFollowNormalWorkedForLast288
0x2036	0xBE83      	BTFSC       PORTD, 7 
0x2038	0xD00D      	BRA         L_lineFollowNormalWorkedForLast288
0x203A	0xB481      	BTFSC       PORTB, 2 
0x203C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast288
L__lineFollowNormalWorkedForLast916:
;linefollow.h,265 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x203E	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x2042	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x2046	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x204A	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x204E	0xF007EC61  	CALL        _moveForward, 0
0x2052	0xD124      	BRA         L_lineFollowNormalWorkedForLast289
L_lineFollowNormalWorkedForLast288:
;linefollow.h,266 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2054	0xB883      	BTFSC       PORTD, 4 
0x2056	0xD013      	BRA         L_lineFollowNormalWorkedForLast292
0x2058	0xAA83      	BTFSS       PORTD, 5 
0x205A	0xD011      	BRA         L_lineFollowNormalWorkedForLast292
0x205C	0xAC83      	BTFSS       PORTD, 6 
0x205E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast292
0x2060	0xAE83      	BTFSS       PORTD, 7 
0x2062	0xD00D      	BRA         L_lineFollowNormalWorkedForLast292
0x2064	0xB481      	BTFSC       PORTB, 2 
0x2066	0xD00B      	BRA         L_lineFollowNormalWorkedForLast292
L__lineFollowNormalWorkedForLast915:
;linefollow.h,267 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2068	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x206C	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2070	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2074	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2078	0xF007EC61  	CALL        _moveForward, 0
0x207C	0xD10F      	BRA         L_lineFollowNormalWorkedForLast293
L_lineFollowNormalWorkedForLast292:
;linefollow.h,268 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x207E	0xB883      	BTFSC       PORTD, 4 
0x2080	0xD013      	BRA         L_lineFollowNormalWorkedForLast296
0x2082	0xBA83      	BTFSC       PORTD, 5 
0x2084	0xD011      	BRA         L_lineFollowNormalWorkedForLast296
0x2086	0xAC83      	BTFSS       PORTD, 6 
0x2088	0xD00F      	BRA         L_lineFollowNormalWorkedForLast296
0x208A	0xBE83      	BTFSC       PORTD, 7 
0x208C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast296
0x208E	0xB481      	BTFSC       PORTB, 2 
0x2090	0xD00B      	BRA         L_lineFollowNormalWorkedForLast296
L__lineFollowNormalWorkedForLast914:
;linefollow.h,269 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2092	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2096	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x209A	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x209E	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x20A2	0xF007EC61  	CALL        _moveForward, 0
0x20A6	0xD0FA      	BRA         L_lineFollowNormalWorkedForLast297
L_lineFollowNormalWorkedForLast296:
;linefollow.h,270 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x20A8	0xB883      	BTFSC       PORTD, 4 
0x20AA	0xD013      	BRA         L_lineFollowNormalWorkedForLast300
0x20AC	0xBA83      	BTFSC       PORTD, 5 
0x20AE	0xD011      	BRA         L_lineFollowNormalWorkedForLast300
0x20B0	0xAC83      	BTFSS       PORTD, 6 
0x20B2	0xD00F      	BRA         L_lineFollowNormalWorkedForLast300
0x20B4	0xAE83      	BTFSS       PORTD, 7 
0x20B6	0xD00D      	BRA         L_lineFollowNormalWorkedForLast300
0x20B8	0xB481      	BTFSC       PORTB, 2 
0x20BA	0xD00B      	BRA         L_lineFollowNormalWorkedForLast300
L__lineFollowNormalWorkedForLast913:
;linefollow.h,271 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x20BC	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x20C0	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x20C4	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x20C8	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x20CC	0xF007EC61  	CALL        _moveForward, 0
0x20D0	0xD0E5      	BRA         L_lineFollowNormalWorkedForLast301
L_lineFollowNormalWorkedForLast300:
;linefollow.h,276 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x20D2	0xA883      	BTFSS       PORTD, 4 
0x20D4	0xD00F      	BRA         L_lineFollowNormalWorkedForLast304
0x20D6	0xBA83      	BTFSC       PORTD, 5 
0x20D8	0xD00D      	BRA         L_lineFollowNormalWorkedForLast304
0x20DA	0xBC83      	BTFSC       PORTD, 6 
0x20DC	0xD00B      	BRA         L_lineFollowNormalWorkedForLast304
0x20DE	0xBE83      	BTFSC       PORTD, 7 
0x20E0	0xD009      	BRA         L_lineFollowNormalWorkedForLast304
0x20E2	0xB481      	BTFSC       PORTB, 2 
0x20E4	0xD007      	BRA         L_lineFollowNormalWorkedForLast304
L__lineFollowNormalWorkedForLast912:
;linefollow.h,278 :: 		turnLeft(FAST_PWM);
0x20E6	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x20EA	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x20EE	0xF007EC92  	CALL        _turnLeft, 0
0x20F2	0xD0D4      	BRA         L_lineFollowNormalWorkedForLast305
L_lineFollowNormalWorkedForLast304:
;linefollow.h,279 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x20F4	0xA883      	BTFSS       PORTD, 4 
0x20F6	0xD00F      	BRA         L_lineFollowNormalWorkedForLast308
0x20F8	0xAA83      	BTFSS       PORTD, 5 
0x20FA	0xD00D      	BRA         L_lineFollowNormalWorkedForLast308
0x20FC	0xBC83      	BTFSC       PORTD, 6 
0x20FE	0xD00B      	BRA         L_lineFollowNormalWorkedForLast308
0x2100	0xBE83      	BTFSC       PORTD, 7 
0x2102	0xD009      	BRA         L_lineFollowNormalWorkedForLast308
0x2104	0xB481      	BTFSC       PORTB, 2 
0x2106	0xD007      	BRA         L_lineFollowNormalWorkedForLast308
L__lineFollowNormalWorkedForLast911:
;linefollow.h,281 :: 		turnLeft(FAST_PWM);
0x2108	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x210C	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2110	0xF007EC92  	CALL        _turnLeft, 0
0x2114	0xD0C3      	BRA         L_lineFollowNormalWorkedForLast309
L_lineFollowNormalWorkedForLast308:
;linefollow.h,282 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2116	0xA883      	BTFSS       PORTD, 4 
0x2118	0xD00F      	BRA         L_lineFollowNormalWorkedForLast312
0x211A	0xAA83      	BTFSS       PORTD, 5 
0x211C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast312
0x211E	0xAC83      	BTFSS       PORTD, 6 
0x2120	0xD00B      	BRA         L_lineFollowNormalWorkedForLast312
0x2122	0xBE83      	BTFSC       PORTD, 7 
0x2124	0xD009      	BRA         L_lineFollowNormalWorkedForLast312
0x2126	0xB481      	BTFSC       PORTB, 2 
0x2128	0xD007      	BRA         L_lineFollowNormalWorkedForLast312
L__lineFollowNormalWorkedForLast910:
;linefollow.h,284 :: 		turnLeft(FAST_PWM);
0x212A	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x212E	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2132	0xF007EC92  	CALL        _turnLeft, 0
0x2136	0xD0B2      	BRA         L_lineFollowNormalWorkedForLast313
L_lineFollowNormalWorkedForLast312:
;linefollow.h,285 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x2138	0xB883      	BTFSC       PORTD, 4 
0x213A	0xD00F      	BRA         L_lineFollowNormalWorkedForLast316
0x213C	0xAA83      	BTFSS       PORTD, 5 
0x213E	0xD00D      	BRA         L_lineFollowNormalWorkedForLast316
0x2140	0xBC83      	BTFSC       PORTD, 6 
0x2142	0xD00B      	BRA         L_lineFollowNormalWorkedForLast316
0x2144	0xBE83      	BTFSC       PORTD, 7 
0x2146	0xD009      	BRA         L_lineFollowNormalWorkedForLast316
0x2148	0xB481      	BTFSC       PORTB, 2 
0x214A	0xD007      	BRA         L_lineFollowNormalWorkedForLast316
L__lineFollowNormalWorkedForLast909:
;linefollow.h,287 :: 		turnLeft(FAST_PWM);
0x214C	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x2150	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2154	0xF007EC92  	CALL        _turnLeft, 0
0x2158	0xD0A1      	BRA         L_lineFollowNormalWorkedForLast317
L_lineFollowNormalWorkedForLast316:
;linefollow.h,290 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x215A	0xB883      	BTFSC       PORTD, 4 
0x215C	0xD00F      	BRA         L_lineFollowNormalWorkedForLast320
0x215E	0xBA83      	BTFSC       PORTD, 5 
0x2160	0xD00D      	BRA         L_lineFollowNormalWorkedForLast320
0x2162	0xBC83      	BTFSC       PORTD, 6 
0x2164	0xD00B      	BRA         L_lineFollowNormalWorkedForLast320
0x2166	0xAE83      	BTFSS       PORTD, 7 
0x2168	0xD009      	BRA         L_lineFollowNormalWorkedForLast320
0x216A	0xB481      	BTFSC       PORTB, 2 
0x216C	0xD007      	BRA         L_lineFollowNormalWorkedForLast320
L__lineFollowNormalWorkedForLast908:
;linefollow.h,292 :: 		turnRight(FAST_PWM);
0x216E	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2172	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x2176	0xF007ECFD  	CALL        _turnRight, 0
0x217A	0xD090      	BRA         L_lineFollowNormalWorkedForLast321
L_lineFollowNormalWorkedForLast320:
;linefollow.h,293 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x217C	0xB883      	BTFSC       PORTD, 4 
0x217E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast324
0x2180	0xBA83      	BTFSC       PORTD, 5 
0x2182	0xD00D      	BRA         L_lineFollowNormalWorkedForLast324
0x2184	0xAC83      	BTFSS       PORTD, 6 
0x2186	0xD00B      	BRA         L_lineFollowNormalWorkedForLast324
0x2188	0xAE83      	BTFSS       PORTD, 7 
0x218A	0xD009      	BRA         L_lineFollowNormalWorkedForLast324
0x218C	0xA481      	BTFSS       PORTB, 2 
0x218E	0xD007      	BRA         L_lineFollowNormalWorkedForLast324
L__lineFollowNormalWorkedForLast907:
;linefollow.h,295 :: 		turnRight(FAST_PWM);
0x2190	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2194	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x2198	0xF007ECFD  	CALL        _turnRight, 0
0x219C	0xD07F      	BRA         L_lineFollowNormalWorkedForLast325
L_lineFollowNormalWorkedForLast324:
;linefollow.h,296 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x219E	0xB883      	BTFSC       PORTD, 4 
0x21A0	0xD00F      	BRA         L_lineFollowNormalWorkedForLast328
0x21A2	0xBA83      	BTFSC       PORTD, 5 
0x21A4	0xD00D      	BRA         L_lineFollowNormalWorkedForLast328
0x21A6	0xBC83      	BTFSC       PORTD, 6 
0x21A8	0xD00B      	BRA         L_lineFollowNormalWorkedForLast328
0x21AA	0xAE83      	BTFSS       PORTD, 7 
0x21AC	0xD009      	BRA         L_lineFollowNormalWorkedForLast328
0x21AE	0xA481      	BTFSS       PORTB, 2 
0x21B0	0xD007      	BRA         L_lineFollowNormalWorkedForLast328
L__lineFollowNormalWorkedForLast906:
;linefollow.h,298 :: 		turnRight(FAST_PWM);
0x21B2	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x21B6	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x21BA	0xF007ECFD  	CALL        _turnRight, 0
0x21BE	0xD06E      	BRA         L_lineFollowNormalWorkedForLast329
L_lineFollowNormalWorkedForLast328:
;linefollow.h,299 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x21C0	0xB883      	BTFSC       PORTD, 4 
0x21C2	0xD00F      	BRA         L_lineFollowNormalWorkedForLast332
0x21C4	0xBA83      	BTFSC       PORTD, 5 
0x21C6	0xD00D      	BRA         L_lineFollowNormalWorkedForLast332
0x21C8	0xBC83      	BTFSC       PORTD, 6 
0x21CA	0xD00B      	BRA         L_lineFollowNormalWorkedForLast332
0x21CC	0xBE83      	BTFSC       PORTD, 7 
0x21CE	0xD009      	BRA         L_lineFollowNormalWorkedForLast332
0x21D0	0xA481      	BTFSS       PORTB, 2 
0x21D2	0xD007      	BRA         L_lineFollowNormalWorkedForLast332
L__lineFollowNormalWorkedForLast905:
;linefollow.h,301 :: 		turnRight(FAST_PWM);
0x21D4	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x21D8	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x21DC	0xF007ECFD  	CALL        _turnRight, 0
0x21E0	0xD05D      	BRA         L_lineFollowNormalWorkedForLast333
L_lineFollowNormalWorkedForLast332:
;linefollow.h,304 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x21E2	0xA883      	BTFSS       PORTD, 4 
0x21E4	0xD013      	BRA         L_lineFollowNormalWorkedForLast336
0x21E6	0xAA83      	BTFSS       PORTD, 5 
0x21E8	0xD011      	BRA         L_lineFollowNormalWorkedForLast336
0x21EA	0xAC83      	BTFSS       PORTD, 6 
0x21EC	0xD00F      	BRA         L_lineFollowNormalWorkedForLast336
0x21EE	0xAE83      	BTFSS       PORTD, 7 
0x21F0	0xD00D      	BRA         L_lineFollowNormalWorkedForLast336
0x21F2	0xB481      	BTFSC       PORTB, 2 
0x21F4	0xD00B      	BRA         L_lineFollowNormalWorkedForLast336
L__lineFollowNormalWorkedForLast904:
;linefollow.h,305 :: 		moveForward(FAST_PWM,FAST_PWM);
0x21F6	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x21FA	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x21FE	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2202	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2206	0xF007EC61  	CALL        _moveForward, 0
0x220A	0xD048      	BRA         L_lineFollowNormalWorkedForLast337
L_lineFollowNormalWorkedForLast336:
;linefollow.h,306 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x220C	0xB883      	BTFSC       PORTD, 4 
0x220E	0xD013      	BRA         L_lineFollowNormalWorkedForLast340
0x2210	0xAA83      	BTFSS       PORTD, 5 
0x2212	0xD011      	BRA         L_lineFollowNormalWorkedForLast340
0x2214	0xAC83      	BTFSS       PORTD, 6 
0x2216	0xD00F      	BRA         L_lineFollowNormalWorkedForLast340
0x2218	0xAE83      	BTFSS       PORTD, 7 
0x221A	0xD00D      	BRA         L_lineFollowNormalWorkedForLast340
0x221C	0xA481      	BTFSS       PORTB, 2 
0x221E	0xD00B      	BRA         L_lineFollowNormalWorkedForLast340
L__lineFollowNormalWorkedForLast903:
;linefollow.h,307 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2220	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2224	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2228	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x222C	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2230	0xF007EC61  	CALL        _moveForward, 0
0x2234	0xD033      	BRA         L_lineFollowNormalWorkedForLast341
L_lineFollowNormalWorkedForLast340:
;linefollow.h,308 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x2236	0xB881      	BTFSC       PORTB, 4 
0x2238	0xD01C      	BRA         L_lineFollowNormalWorkedForLast344
0x223A	0xB681      	BTFSC       PORTB, 3 
0x223C	0xD01A      	BRA         L_lineFollowNormalWorkedForLast344
0x223E	0xB883      	BTFSC       PORTD, 4 
0x2240	0xD018      	BRA         L_lineFollowNormalWorkedForLast344
0x2242	0xBA83      	BTFSC       PORTD, 5 
0x2244	0xD016      	BRA         L_lineFollowNormalWorkedForLast344
0x2246	0xBC83      	BTFSC       PORTD, 6 
0x2248	0xD014      	BRA         L_lineFollowNormalWorkedForLast344
0x224A	0xBE83      	BTFSC       PORTD, 7 
0x224C	0xD012      	BRA         L_lineFollowNormalWorkedForLast344
0x224E	0xB481      	BTFSC       PORTB, 2 
0x2250	0xD010      	BRA         L_lineFollowNormalWorkedForLast344
0x2252	0xBC81      	BTFSC       PORTB, 6 
0x2254	0xD00E      	BRA         L_lineFollowNormalWorkedForLast344
0x2256	0xBE81      	BTFSC       PORTB, 7 
0x2258	0xD00C      	BRA         L_lineFollowNormalWorkedForLast344
L__lineFollowNormalWorkedForLast902:
;linefollow.h,309 :: 		moveForward(255,255);
0x225A	0x0EFF      	MOVLW       255
0x225C	0x0101      	MOVLB       1
0x225E	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2260	0x0E00      	MOVLW       0
0x2262	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x2264	0x0EFF      	MOVLW       255
0x2266	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2268	0x0E00      	MOVLW       0
0x226A	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x226C	0xF007EC61  	CALL        _moveForward, 0
0x2270	0xD015      	BRA         L_lineFollowNormalWorkedForLast345
L_lineFollowNormalWorkedForLast344:
;linefollow.h,311 :: 		else if(isAllBlack()){
0x2272	0xF009ECBF  	CALL        _isAllBlack, 0
0x2276	0x5000      	MOVF        R0, 0 
0x2278	0x1001      	IORWF       R1, 0 
0x227A	0xE003      	BZ          L_lineFollowNormalWorkedForLast346
;linefollow.h,314 :: 		sendSensorStatus();
0x227C	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,315 :: 		}
0x2280	0xD00D      	BRA         L_lineFollowNormalWorkedForLast347
L_lineFollowNormalWorkedForLast346:
0x2282	0x0101      	MOVLB       1
;linefollow.h,318 :: 		moveForward(205,200);
0x2284	0x0ECD      	MOVLW       205
0x2286	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2288	0x0E00      	MOVLW       0
0x228A	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x228C	0x0EC8      	MOVLW       200
0x228E	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2290	0x0E00      	MOVLW       0
0x2292	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2294	0xF007EC61  	CALL        _moveForward, 0
;linefollow.h,319 :: 		sendSensorStatus();
0x2298	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,321 :: 		}
L_lineFollowNormalWorkedForLast347:
L_lineFollowNormalWorkedForLast345:
L_lineFollowNormalWorkedForLast341:
L_lineFollowNormalWorkedForLast337:
L_lineFollowNormalWorkedForLast333:
L_lineFollowNormalWorkedForLast329:
L_lineFollowNormalWorkedForLast325:
L_lineFollowNormalWorkedForLast321:
L_lineFollowNormalWorkedForLast317:
L_lineFollowNormalWorkedForLast313:
L_lineFollowNormalWorkedForLast309:
L_lineFollowNormalWorkedForLast305:
L_lineFollowNormalWorkedForLast301:
L_lineFollowNormalWorkedForLast297:
L_lineFollowNormalWorkedForLast293:
L_lineFollowNormalWorkedForLast289:
;linefollow.h,322 :: 		}
0x229C	0xD20A      	BRA         L_lineFollowNormalWorkedForLast348
L_lineFollowNormalWorkedForLast285:
;linefollow.h,329 :: 		if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x229E	0xA881      	BTFSS       PORTB, 4 
0x22A0	0xD018      	BRA         L_lineFollowNormalWorkedForLast351
0x22A2	0xA681      	BTFSS       PORTB, 3 
0x22A4	0xD016      	BRA         L_lineFollowNormalWorkedForLast351
0x22A6	0xA883      	BTFSS       PORTD, 4 
0x22A8	0xD014      	BRA         L_lineFollowNormalWorkedForLast351
0x22AA	0xAA83      	BTFSS       PORTD, 5 
0x22AC	0xD012      	BRA         L_lineFollowNormalWorkedForLast351
0x22AE	0xAC83      	BTFSS       PORTD, 6 
0x22B0	0xD010      	BRA         L_lineFollowNormalWorkedForLast351
0x22B2	0xBE83      	BTFSC       PORTD, 7 
0x22B4	0xD00E      	BRA         L_lineFollowNormalWorkedForLast351
0x22B6	0xB481      	BTFSC       PORTB, 2 
0x22B8	0xD00C      	BRA         L_lineFollowNormalWorkedForLast351
0x22BA	0xBC81      	BTFSC       PORTB, 6 
0x22BC	0xD00A      	BRA         L_lineFollowNormalWorkedForLast351
0x22BE	0xBE81      	BTFSC       PORTB, 7 
0x22C0	0xD008      	BRA         L_lineFollowNormalWorkedForLast351
L__lineFollowNormalWorkedForLast901:
0x22C2	0x0101      	MOVLB       1
;linefollow.h,330 :: 		rotateByDegree(-90);
0x22C4	0x0EA6      	MOVLW       166
0x22C6	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x22C8	0x0EFF      	MOVLW       255
0x22CA	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x22CC	0xF009ECE8  	CALL        _rotateByDegree, 0
0x22D0	0xD1F0      	BRA         L_lineFollowNormalWorkedForLast352
L_lineFollowNormalWorkedForLast351:
;linefollow.h,331 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x22D2	0xA881      	BTFSS       PORTB, 4 
0x22D4	0xD018      	BRA         L_lineFollowNormalWorkedForLast355
0x22D6	0xA681      	BTFSS       PORTB, 3 
0x22D8	0xD016      	BRA         L_lineFollowNormalWorkedForLast355
0x22DA	0xA883      	BTFSS       PORTD, 4 
0x22DC	0xD014      	BRA         L_lineFollowNormalWorkedForLast355
0x22DE	0xAA83      	BTFSS       PORTD, 5 
0x22E0	0xD012      	BRA         L_lineFollowNormalWorkedForLast355
0x22E2	0xAC83      	BTFSS       PORTD, 6 
0x22E4	0xD010      	BRA         L_lineFollowNormalWorkedForLast355
0x22E6	0xAE83      	BTFSS       PORTD, 7 
0x22E8	0xD00E      	BRA         L_lineFollowNormalWorkedForLast355
0x22EA	0xB481      	BTFSC       PORTB, 2 
0x22EC	0xD00C      	BRA         L_lineFollowNormalWorkedForLast355
0x22EE	0xBC81      	BTFSC       PORTB, 6 
0x22F0	0xD00A      	BRA         L_lineFollowNormalWorkedForLast355
0x22F2	0xBE81      	BTFSC       PORTB, 7 
0x22F4	0xD008      	BRA         L_lineFollowNormalWorkedForLast355
L__lineFollowNormalWorkedForLast900:
;linefollow.h,332 :: 		rotateByDegree(-90);
0x22F6	0x0EA6      	MOVLW       166
0x22F8	0x0101      	MOVLB       1
0x22FA	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x22FC	0x0EFF      	MOVLW       255
0x22FE	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2300	0xF009ECE8  	CALL        _rotateByDegree, 0
0x2304	0xD1D6      	BRA         L_lineFollowNormalWorkedForLast356
L_lineFollowNormalWorkedForLast355:
;linefollow.h,333 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==0 && Sensor9==0)
0x2306	0xA881      	BTFSS       PORTB, 4 
0x2308	0xD018      	BRA         L_lineFollowNormalWorkedForLast359
0x230A	0xA681      	BTFSS       PORTB, 3 
0x230C	0xD016      	BRA         L_lineFollowNormalWorkedForLast359
0x230E	0xA883      	BTFSS       PORTD, 4 
0x2310	0xD014      	BRA         L_lineFollowNormalWorkedForLast359
0x2312	0xAA83      	BTFSS       PORTD, 5 
0x2314	0xD012      	BRA         L_lineFollowNormalWorkedForLast359
0x2316	0xAC83      	BTFSS       PORTD, 6 
0x2318	0xD010      	BRA         L_lineFollowNormalWorkedForLast359
0x231A	0xAE83      	BTFSS       PORTD, 7 
0x231C	0xD00E      	BRA         L_lineFollowNormalWorkedForLast359
0x231E	0xA481      	BTFSS       PORTB, 2 
0x2320	0xD00C      	BRA         L_lineFollowNormalWorkedForLast359
0x2322	0xBC81      	BTFSC       PORTB, 6 
0x2324	0xD00A      	BRA         L_lineFollowNormalWorkedForLast359
0x2326	0xBE81      	BTFSC       PORTB, 7 
0x2328	0xD008      	BRA         L_lineFollowNormalWorkedForLast359
L__lineFollowNormalWorkedForLast899:
;linefollow.h,334 :: 		rotateByDegree(-90);
0x232A	0x0EA6      	MOVLW       166
0x232C	0x0101      	MOVLB       1
0x232E	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2330	0x0EFF      	MOVLW       255
0x2332	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2334	0xF009ECE8  	CALL        _rotateByDegree, 0
0x2338	0xD1BC      	BRA         L_lineFollowNormalWorkedForLast360
L_lineFollowNormalWorkedForLast359:
;linefollow.h,337 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x233A	0xB881      	BTFSC       PORTB, 4 
0x233C	0xD018      	BRA         L_lineFollowNormalWorkedForLast363
0x233E	0xB681      	BTFSC       PORTB, 3 
0x2340	0xD016      	BRA         L_lineFollowNormalWorkedForLast363
0x2342	0xA883      	BTFSS       PORTD, 4 
0x2344	0xD014      	BRA         L_lineFollowNormalWorkedForLast363
0x2346	0xAA83      	BTFSS       PORTD, 5 
0x2348	0xD012      	BRA         L_lineFollowNormalWorkedForLast363
0x234A	0xAC83      	BTFSS       PORTD, 6 
0x234C	0xD010      	BRA         L_lineFollowNormalWorkedForLast363
0x234E	0xAE83      	BTFSS       PORTD, 7 
0x2350	0xD00E      	BRA         L_lineFollowNormalWorkedForLast363
0x2352	0xA481      	BTFSS       PORTB, 2 
0x2354	0xD00C      	BRA         L_lineFollowNormalWorkedForLast363
0x2356	0xAC81      	BTFSS       PORTB, 6 
0x2358	0xD00A      	BRA         L_lineFollowNormalWorkedForLast363
0x235A	0xAE81      	BTFSS       PORTB, 7 
0x235C	0xD008      	BRA         L_lineFollowNormalWorkedForLast363
L__lineFollowNormalWorkedForLast898:
;linefollow.h,338 :: 		rotateByDegree(90);
0x235E	0x0E5A      	MOVLW       90
0x2360	0x0101      	MOVLB       1
0x2362	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2364	0x0E00      	MOVLW       0
0x2366	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2368	0xF009ECE8  	CALL        _rotateByDegree, 0
0x236C	0xD1A2      	BRA         L_lineFollowNormalWorkedForLast364
L_lineFollowNormalWorkedForLast363:
;linefollow.h,339 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x236E	0xB881      	BTFSC       PORTB, 4 
0x2370	0xD018      	BRA         L_lineFollowNormalWorkedForLast367
0x2372	0xB681      	BTFSC       PORTB, 3 
0x2374	0xD016      	BRA         L_lineFollowNormalWorkedForLast367
0x2376	0xB883      	BTFSC       PORTD, 4 
0x2378	0xD014      	BRA         L_lineFollowNormalWorkedForLast367
0x237A	0xAA83      	BTFSS       PORTD, 5 
0x237C	0xD012      	BRA         L_lineFollowNormalWorkedForLast367
0x237E	0xAC83      	BTFSS       PORTD, 6 
0x2380	0xD010      	BRA         L_lineFollowNormalWorkedForLast367
0x2382	0xAE83      	BTFSS       PORTD, 7 
0x2384	0xD00E      	BRA         L_lineFollowNormalWorkedForLast367
0x2386	0xA481      	BTFSS       PORTB, 2 
0x2388	0xD00C      	BRA         L_lineFollowNormalWorkedForLast367
0x238A	0xAC81      	BTFSS       PORTB, 6 
0x238C	0xD00A      	BRA         L_lineFollowNormalWorkedForLast367
0x238E	0xAE81      	BTFSS       PORTB, 7 
0x2390	0xD008      	BRA         L_lineFollowNormalWorkedForLast367
L__lineFollowNormalWorkedForLast897:
;linefollow.h,340 :: 		rotateByDegree(90);
0x2392	0x0E5A      	MOVLW       90
0x2394	0x0101      	MOVLB       1
0x2396	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2398	0x0E00      	MOVLW       0
0x239A	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x239C	0xF009ECE8  	CALL        _rotateByDegree, 0
0x23A0	0xD188      	BRA         L_lineFollowNormalWorkedForLast368
L_lineFollowNormalWorkedForLast367:
;linefollow.h,341 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x23A2	0xB881      	BTFSC       PORTB, 4 
0x23A4	0xD018      	BRA         L_lineFollowNormalWorkedForLast371
0x23A6	0xB681      	BTFSC       PORTB, 3 
0x23A8	0xD016      	BRA         L_lineFollowNormalWorkedForLast371
0x23AA	0xB883      	BTFSC       PORTD, 4 
0x23AC	0xD014      	BRA         L_lineFollowNormalWorkedForLast371
0x23AE	0xBA83      	BTFSC       PORTD, 5 
0x23B0	0xD012      	BRA         L_lineFollowNormalWorkedForLast371
0x23B2	0xAC83      	BTFSS       PORTD, 6 
0x23B4	0xD010      	BRA         L_lineFollowNormalWorkedForLast371
0x23B6	0xAE83      	BTFSS       PORTD, 7 
0x23B8	0xD00E      	BRA         L_lineFollowNormalWorkedForLast371
0x23BA	0xA481      	BTFSS       PORTB, 2 
0x23BC	0xD00C      	BRA         L_lineFollowNormalWorkedForLast371
0x23BE	0xAC81      	BTFSS       PORTB, 6 
0x23C0	0xD00A      	BRA         L_lineFollowNormalWorkedForLast371
0x23C2	0xAE81      	BTFSS       PORTB, 7 
0x23C4	0xD008      	BRA         L_lineFollowNormalWorkedForLast371
L__lineFollowNormalWorkedForLast896:
;linefollow.h,342 :: 		rotateByDegree(90);
0x23C6	0x0E5A      	MOVLW       90
0x23C8	0x0101      	MOVLB       1
0x23CA	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x23CC	0x0E00      	MOVLW       0
0x23CE	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x23D0	0xF009ECE8  	CALL        _rotateByDegree, 0
0x23D4	0xD16E      	BRA         L_lineFollowNormalWorkedForLast372
L_lineFollowNormalWorkedForLast371:
;linefollow.h,347 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x23D6	0xA883      	BTFSS       PORTD, 4 
0x23D8	0xD00F      	BRA         L_lineFollowNormalWorkedForLast375
0x23DA	0xBA83      	BTFSC       PORTD, 5 
0x23DC	0xD00D      	BRA         L_lineFollowNormalWorkedForLast375
0x23DE	0xBC83      	BTFSC       PORTD, 6 
0x23E0	0xD00B      	BRA         L_lineFollowNormalWorkedForLast375
0x23E2	0xBE83      	BTFSC       PORTD, 7 
0x23E4	0xD009      	BRA         L_lineFollowNormalWorkedForLast375
0x23E6	0xB481      	BTFSC       PORTB, 2 
0x23E8	0xD007      	BRA         L_lineFollowNormalWorkedForLast375
L__lineFollowNormalWorkedForLast895:
;linefollow.h,349 :: 		turnLeft(FAST_PWM);
0x23EA	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x23EE	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x23F2	0xF007EC92  	CALL        _turnLeft, 0
0x23F6	0xD15D      	BRA         L_lineFollowNormalWorkedForLast376
L_lineFollowNormalWorkedForLast375:
;linefollow.h,350 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x23F8	0xA883      	BTFSS       PORTD, 4 
0x23FA	0xD00F      	BRA         L_lineFollowNormalWorkedForLast379
0x23FC	0xAA83      	BTFSS       PORTD, 5 
0x23FE	0xD00D      	BRA         L_lineFollowNormalWorkedForLast379
0x2400	0xBC83      	BTFSC       PORTD, 6 
0x2402	0xD00B      	BRA         L_lineFollowNormalWorkedForLast379
0x2404	0xBE83      	BTFSC       PORTD, 7 
0x2406	0xD009      	BRA         L_lineFollowNormalWorkedForLast379
0x2408	0xB481      	BTFSC       PORTB, 2 
0x240A	0xD007      	BRA         L_lineFollowNormalWorkedForLast379
L__lineFollowNormalWorkedForLast894:
;linefollow.h,352 :: 		turnLeft(FAST_PWM);
0x240C	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x2410	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2414	0xF007EC92  	CALL        _turnLeft, 0
0x2418	0xD14C      	BRA         L_lineFollowNormalWorkedForLast380
L_lineFollowNormalWorkedForLast379:
;linefollow.h,353 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x241A	0xA883      	BTFSS       PORTD, 4 
0x241C	0xD00F      	BRA         L_lineFollowNormalWorkedForLast383
0x241E	0xAA83      	BTFSS       PORTD, 5 
0x2420	0xD00D      	BRA         L_lineFollowNormalWorkedForLast383
0x2422	0xAC83      	BTFSS       PORTD, 6 
0x2424	0xD00B      	BRA         L_lineFollowNormalWorkedForLast383
0x2426	0xBE83      	BTFSC       PORTD, 7 
0x2428	0xD009      	BRA         L_lineFollowNormalWorkedForLast383
0x242A	0xB481      	BTFSC       PORTB, 2 
0x242C	0xD007      	BRA         L_lineFollowNormalWorkedForLast383
L__lineFollowNormalWorkedForLast893:
;linefollow.h,355 :: 		turnLeft(FAST_PWM);
0x242E	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x2432	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2436	0xF007EC92  	CALL        _turnLeft, 0
0x243A	0xD13B      	BRA         L_lineFollowNormalWorkedForLast384
L_lineFollowNormalWorkedForLast383:
;linefollow.h,356 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x243C	0xB883      	BTFSC       PORTD, 4 
0x243E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast387
0x2440	0xAA83      	BTFSS       PORTD, 5 
0x2442	0xD00D      	BRA         L_lineFollowNormalWorkedForLast387
0x2444	0xBC83      	BTFSC       PORTD, 6 
0x2446	0xD00B      	BRA         L_lineFollowNormalWorkedForLast387
0x2448	0xBE83      	BTFSC       PORTD, 7 
0x244A	0xD009      	BRA         L_lineFollowNormalWorkedForLast387
0x244C	0xB481      	BTFSC       PORTB, 2 
0x244E	0xD007      	BRA         L_lineFollowNormalWorkedForLast387
L__lineFollowNormalWorkedForLast892:
;linefollow.h,358 :: 		turnLeft(FAST_PWM);
0x2450	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x2454	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x2458	0xF007EC92  	CALL        _turnLeft, 0
0x245C	0xD12A      	BRA         L_lineFollowNormalWorkedForLast388
L_lineFollowNormalWorkedForLast387:
;linefollow.h,361 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x245E	0xB883      	BTFSC       PORTD, 4 
0x2460	0xD00F      	BRA         L_lineFollowNormalWorkedForLast391
0x2462	0xBA83      	BTFSC       PORTD, 5 
0x2464	0xD00D      	BRA         L_lineFollowNormalWorkedForLast391
0x2466	0xBC83      	BTFSC       PORTD, 6 
0x2468	0xD00B      	BRA         L_lineFollowNormalWorkedForLast391
0x246A	0xAE83      	BTFSS       PORTD, 7 
0x246C	0xD009      	BRA         L_lineFollowNormalWorkedForLast391
0x246E	0xB481      	BTFSC       PORTB, 2 
0x2470	0xD007      	BRA         L_lineFollowNormalWorkedForLast391
L__lineFollowNormalWorkedForLast891:
;linefollow.h,363 :: 		turnRight(FAST_PWM);
0x2472	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2476	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x247A	0xF007ECFD  	CALL        _turnRight, 0
0x247E	0xD119      	BRA         L_lineFollowNormalWorkedForLast392
L_lineFollowNormalWorkedForLast391:
;linefollow.h,364 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x2480	0xB883      	BTFSC       PORTD, 4 
0x2482	0xD00F      	BRA         L_lineFollowNormalWorkedForLast395
0x2484	0xBA83      	BTFSC       PORTD, 5 
0x2486	0xD00D      	BRA         L_lineFollowNormalWorkedForLast395
0x2488	0xAC83      	BTFSS       PORTD, 6 
0x248A	0xD00B      	BRA         L_lineFollowNormalWorkedForLast395
0x248C	0xAE83      	BTFSS       PORTD, 7 
0x248E	0xD009      	BRA         L_lineFollowNormalWorkedForLast395
0x2490	0xA481      	BTFSS       PORTB, 2 
0x2492	0xD007      	BRA         L_lineFollowNormalWorkedForLast395
L__lineFollowNormalWorkedForLast890:
;linefollow.h,366 :: 		turnRight(FAST_PWM);
0x2494	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x2498	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x249C	0xF007ECFD  	CALL        _turnRight, 0
0x24A0	0xD108      	BRA         L_lineFollowNormalWorkedForLast396
L_lineFollowNormalWorkedForLast395:
;linefollow.h,367 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x24A2	0xB883      	BTFSC       PORTD, 4 
0x24A4	0xD00F      	BRA         L_lineFollowNormalWorkedForLast399
0x24A6	0xBA83      	BTFSC       PORTD, 5 
0x24A8	0xD00D      	BRA         L_lineFollowNormalWorkedForLast399
0x24AA	0xBC83      	BTFSC       PORTD, 6 
0x24AC	0xD00B      	BRA         L_lineFollowNormalWorkedForLast399
0x24AE	0xAE83      	BTFSS       PORTD, 7 
0x24B0	0xD009      	BRA         L_lineFollowNormalWorkedForLast399
0x24B2	0xA481      	BTFSS       PORTB, 2 
0x24B4	0xD007      	BRA         L_lineFollowNormalWorkedForLast399
L__lineFollowNormalWorkedForLast889:
;linefollow.h,369 :: 		turnRight(FAST_PWM);
0x24B6	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x24BA	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x24BE	0xF007ECFD  	CALL        _turnRight, 0
0x24C2	0xD0F7      	BRA         L_lineFollowNormalWorkedForLast400
L_lineFollowNormalWorkedForLast399:
;linefollow.h,370 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x24C4	0xB883      	BTFSC       PORTD, 4 
0x24C6	0xD00F      	BRA         L_lineFollowNormalWorkedForLast403
0x24C8	0xBA83      	BTFSC       PORTD, 5 
0x24CA	0xD00D      	BRA         L_lineFollowNormalWorkedForLast403
0x24CC	0xBC83      	BTFSC       PORTD, 6 
0x24CE	0xD00B      	BRA         L_lineFollowNormalWorkedForLast403
0x24D0	0xBE83      	BTFSC       PORTD, 7 
0x24D2	0xD009      	BRA         L_lineFollowNormalWorkedForLast403
0x24D4	0xA481      	BTFSS       PORTB, 2 
0x24D6	0xD007      	BRA         L_lineFollowNormalWorkedForLast403
L__lineFollowNormalWorkedForLast888:
;linefollow.h,372 :: 		turnRight(FAST_PWM);
0x24D8	0xF196C14A  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x24DC	0xF197C14B  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x24E0	0xF007ECFD  	CALL        _turnRight, 0
0x24E4	0xD0E6      	BRA         L_lineFollowNormalWorkedForLast404
L_lineFollowNormalWorkedForLast403:
;linefollow.h,375 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x24E6	0xA883      	BTFSS       PORTD, 4 
0x24E8	0xD013      	BRA         L_lineFollowNormalWorkedForLast407
0x24EA	0xAA83      	BTFSS       PORTD, 5 
0x24EC	0xD011      	BRA         L_lineFollowNormalWorkedForLast407
0x24EE	0xAC83      	BTFSS       PORTD, 6 
0x24F0	0xD00F      	BRA         L_lineFollowNormalWorkedForLast407
0x24F2	0xAE83      	BTFSS       PORTD, 7 
0x24F4	0xD00D      	BRA         L_lineFollowNormalWorkedForLast407
0x24F6	0xB481      	BTFSC       PORTB, 2 
0x24F8	0xD00B      	BRA         L_lineFollowNormalWorkedForLast407
L__lineFollowNormalWorkedForLast887:
;linefollow.h,376 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x24FA	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x24FE	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x2502	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2506	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x250A	0xF007EC61  	CALL        _moveForward, 0
0x250E	0xD0D1      	BRA         L_lineFollowNormalWorkedForLast408
L_lineFollowNormalWorkedForLast407:
;linefollow.h,377 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x2510	0xB883      	BTFSC       PORTD, 4 
0x2512	0xD013      	BRA         L_lineFollowNormalWorkedForLast411
0x2514	0xAA83      	BTFSS       PORTD, 5 
0x2516	0xD011      	BRA         L_lineFollowNormalWorkedForLast411
0x2518	0xAC83      	BTFSS       PORTD, 6 
0x251A	0xD00F      	BRA         L_lineFollowNormalWorkedForLast411
0x251C	0xAE83      	BTFSS       PORTD, 7 
0x251E	0xD00D      	BRA         L_lineFollowNormalWorkedForLast411
0x2520	0xA481      	BTFSS       PORTB, 2 
0x2522	0xD00B      	BRA         L_lineFollowNormalWorkedForLast411
L__lineFollowNormalWorkedForLast886:
;linefollow.h,378 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x2524	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2528	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x252C	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x2530	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x2534	0xF007EC61  	CALL        _moveForward, 0
0x2538	0xD0BC      	BRA         L_lineFollowNormalWorkedForLast412
L_lineFollowNormalWorkedForLast411:
;linefollow.h,379 :: 		else if( Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==1 && Sensor7==1 && Sensor8==1)
0x253A	0xA681      	BTFSS       PORTB, 3 
0x253C	0xD017      	BRA         L_lineFollowNormalWorkedForLast415
0x253E	0xA883      	BTFSS       PORTD, 4 
0x2540	0xD015      	BRA         L_lineFollowNormalWorkedForLast415
0x2542	0xAA83      	BTFSS       PORTD, 5 
0x2544	0xD013      	BRA         L_lineFollowNormalWorkedForLast415
0x2546	0xBC83      	BTFSC       PORTD, 6 
0x2548	0xD011      	BRA         L_lineFollowNormalWorkedForLast415
0x254A	0xAE83      	BTFSS       PORTD, 7 
0x254C	0xD00F      	BRA         L_lineFollowNormalWorkedForLast415
0x254E	0xA481      	BTFSS       PORTB, 2 
0x2550	0xD00D      	BRA         L_lineFollowNormalWorkedForLast415
0x2552	0xAC81      	BTFSS       PORTB, 6 
0x2554	0xD00B      	BRA         L_lineFollowNormalWorkedForLast415
L__lineFollowNormalWorkedForLast885:
;linefollow.h,380 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast416:
0x2556	0xBA81      	BTFSC       PORTB, 5 
0x2558	0xD008      	BRA         L_lineFollowNormalWorkedForLast417
;linefollow.h,381 :: 		rotateAntiClockwise(255);
0x255A	0x0EFF      	MOVLW       255
0x255C	0x0101      	MOVLB       1
0x255E	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x2560	0x0E00      	MOVLW       0
0x2562	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x2564	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x2568	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast416
L_lineFollowNormalWorkedForLast417:
0x256A	0xD0A3      	BRA         L_lineFollowNormalWorkedForLast418
L_lineFollowNormalWorkedForLast415:
;linefollow.h,382 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==1 && Sensor9==1)
0x256C	0xB881      	BTFSC       PORTB, 4 
0x256E	0xD01B      	BRA         L_lineFollowNormalWorkedForLast421
0x2570	0xB681      	BTFSC       PORTB, 3 
0x2572	0xD019      	BRA         L_lineFollowNormalWorkedForLast421
0x2574	0xB883      	BTFSC       PORTD, 4 
0x2576	0xD017      	BRA         L_lineFollowNormalWorkedForLast421
0x2578	0xBA83      	BTFSC       PORTD, 5 
0x257A	0xD015      	BRA         L_lineFollowNormalWorkedForLast421
0x257C	0xBC83      	BTFSC       PORTD, 6 
0x257E	0xD013      	BRA         L_lineFollowNormalWorkedForLast421
0x2580	0xBE83      	BTFSC       PORTD, 7 
0x2582	0xD011      	BRA         L_lineFollowNormalWorkedForLast421
0x2584	0xB481      	BTFSC       PORTB, 2 
0x2586	0xD00F      	BRA         L_lineFollowNormalWorkedForLast421
0x2588	0xAC81      	BTFSS       PORTB, 6 
0x258A	0xD00D      	BRA         L_lineFollowNormalWorkedForLast421
0x258C	0xAE81      	BTFSS       PORTB, 7 
0x258E	0xD00B      	BRA         L_lineFollowNormalWorkedForLast421
L__lineFollowNormalWorkedForLast884:
;linefollow.h,383 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast422:
0x2590	0xBA81      	BTFSC       PORTB, 5 
0x2592	0xD008      	BRA         L_lineFollowNormalWorkedForLast423
;linefollow.h,384 :: 		rotateClockwise(255);
0x2594	0x0EFF      	MOVLW       255
0x2596	0x0101      	MOVLB       1
0x2598	0x6F9A      	MOVWF       FARG_rotateClockwise_pwm, 1
0x259A	0x0E00      	MOVLW       0
0x259C	0x6F9B      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x259E	0xF007EC6E  	CALL        _rotateClockwise, 0
0x25A2	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast422
L_lineFollowNormalWorkedForLast423:
0x25A4	0xD086      	BRA         L_lineFollowNormalWorkedForLast424
L_lineFollowNormalWorkedForLast421:
;linefollow.h,385 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x25A6	0xA881      	BTFSS       PORTB, 4 
0x25A8	0xD01B      	BRA         L_lineFollowNormalWorkedForLast427
0x25AA	0xA681      	BTFSS       PORTB, 3 
0x25AC	0xD019      	BRA         L_lineFollowNormalWorkedForLast427
0x25AE	0xB883      	BTFSC       PORTD, 4 
0x25B0	0xD017      	BRA         L_lineFollowNormalWorkedForLast427
0x25B2	0xBA83      	BTFSC       PORTD, 5 
0x25B4	0xD015      	BRA         L_lineFollowNormalWorkedForLast427
0x25B6	0xBC83      	BTFSC       PORTD, 6 
0x25B8	0xD013      	BRA         L_lineFollowNormalWorkedForLast427
0x25BA	0xBE83      	BTFSC       PORTD, 7 
0x25BC	0xD011      	BRA         L_lineFollowNormalWorkedForLast427
0x25BE	0xB481      	BTFSC       PORTB, 2 
0x25C0	0xD00F      	BRA         L_lineFollowNormalWorkedForLast427
0x25C2	0xBC81      	BTFSC       PORTB, 6 
0x25C4	0xD00D      	BRA         L_lineFollowNormalWorkedForLast427
0x25C6	0xBE81      	BTFSC       PORTB, 7 
0x25C8	0xD00B      	BRA         L_lineFollowNormalWorkedForLast427
L__lineFollowNormalWorkedForLast883:
;linefollow.h,386 :: 		while(Scout==0)
L_lineFollowNormalWorkedForLast428:
0x25CA	0xBA81      	BTFSC       PORTB, 5 
0x25CC	0xD008      	BRA         L_lineFollowNormalWorkedForLast429
;linefollow.h,387 :: 		rotateAntiClockwise(255);
0x25CE	0x0EFF      	MOVLW       255
0x25D0	0x0101      	MOVLB       1
0x25D2	0x6F9A      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x25D4	0x0E00      	MOVLW       0
0x25D6	0x6F9B      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x25D8	0xF007EC7B  	CALL        _rotateAntiClockwise, 0
0x25DC	0xD7F6      	BRA         L_lineFollowNormalWorkedForLast428
L_lineFollowNormalWorkedForLast429:
0x25DE	0xD069      	BRA         L_lineFollowNormalWorkedForLast430
L_lineFollowNormalWorkedForLast427:
;linefollow.h,390 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x25E0	0xB883      	BTFSC       PORTD, 4 
0x25E2	0xD013      	BRA         L_lineFollowNormalWorkedForLast433
0x25E4	0xAA83      	BTFSS       PORTD, 5 
0x25E6	0xD011      	BRA         L_lineFollowNormalWorkedForLast433
0x25E8	0xAC83      	BTFSS       PORTD, 6 
0x25EA	0xD00F      	BRA         L_lineFollowNormalWorkedForLast433
0x25EC	0xBE83      	BTFSC       PORTD, 7 
0x25EE	0xD00D      	BRA         L_lineFollowNormalWorkedForLast433
0x25F0	0xB481      	BTFSC       PORTB, 2 
0x25F2	0xD00B      	BRA         L_lineFollowNormalWorkedForLast433
L__lineFollowNormalWorkedForLast882:
;linefollow.h,391 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x25F4	0xF19AC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x25F8	0xF19BC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x25FC	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2600	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2604	0xF007EC61  	CALL        _moveForward, 0
0x2608	0xD054      	BRA         L_lineFollowNormalWorkedForLast434
L_lineFollowNormalWorkedForLast433:
;linefollow.h,392 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x260A	0xB883      	BTFSC       PORTD, 4 
0x260C	0xD013      	BRA         L_lineFollowNormalWorkedForLast437
0x260E	0xAA83      	BTFSS       PORTD, 5 
0x2610	0xD011      	BRA         L_lineFollowNormalWorkedForLast437
0x2612	0xAC83      	BTFSS       PORTD, 6 
0x2614	0xD00F      	BRA         L_lineFollowNormalWorkedForLast437
0x2616	0xAE83      	BTFSS       PORTD, 7 
0x2618	0xD00D      	BRA         L_lineFollowNormalWorkedForLast437
0x261A	0xB481      	BTFSC       PORTB, 2 
0x261C	0xD00B      	BRA         L_lineFollowNormalWorkedForLast437
L__lineFollowNormalWorkedForLast881:
;linefollow.h,393 :: 		moveForward(FAST_PWM,FAST_PWM);
0x261E	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2622	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2626	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x262A	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x262E	0xF007EC61  	CALL        _moveForward, 0
0x2632	0xD03F      	BRA         L_lineFollowNormalWorkedForLast438
L_lineFollowNormalWorkedForLast437:
;linefollow.h,394 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2634	0xB883      	BTFSC       PORTD, 4 
0x2636	0xD013      	BRA         L_lineFollowNormalWorkedForLast441
0x2638	0xBA83      	BTFSC       PORTD, 5 
0x263A	0xD011      	BRA         L_lineFollowNormalWorkedForLast441
0x263C	0xAC83      	BTFSS       PORTD, 6 
0x263E	0xD00F      	BRA         L_lineFollowNormalWorkedForLast441
0x2640	0xBE83      	BTFSC       PORTD, 7 
0x2642	0xD00D      	BRA         L_lineFollowNormalWorkedForLast441
0x2644	0xB481      	BTFSC       PORTB, 2 
0x2646	0xD00B      	BRA         L_lineFollowNormalWorkedForLast441
L__lineFollowNormalWorkedForLast880:
;linefollow.h,395 :: 		moveForward(FAST_PWM,FAST_PWM);
0x2648	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x264C	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x2650	0xF19CC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x2654	0xF19DC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x2658	0xF007EC61  	CALL        _moveForward, 0
0x265C	0xD02A      	BRA         L_lineFollowNormalWorkedForLast442
L_lineFollowNormalWorkedForLast441:
;linefollow.h,396 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x265E	0xB883      	BTFSC       PORTD, 4 
0x2660	0xD013      	BRA         L_lineFollowNormalWorkedForLast445
0x2662	0xBA83      	BTFSC       PORTD, 5 
0x2664	0xD011      	BRA         L_lineFollowNormalWorkedForLast445
0x2666	0xAC83      	BTFSS       PORTD, 6 
0x2668	0xD00F      	BRA         L_lineFollowNormalWorkedForLast445
0x266A	0xAE83      	BTFSS       PORTD, 7 
0x266C	0xD00D      	BRA         L_lineFollowNormalWorkedForLast445
0x266E	0xB481      	BTFSC       PORTB, 2 
0x2670	0xD00B      	BRA         L_lineFollowNormalWorkedForLast445
L__lineFollowNormalWorkedForLast879:
;linefollow.h,397 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x2672	0xF19AC14A  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x2676	0xF19BC14B  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x267A	0xF19CC14E  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x267E	0xF19DC14F  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x2682	0xF007EC61  	CALL        _moveForward, 0
0x2686	0xD015      	BRA         L_lineFollowNormalWorkedForLast446
L_lineFollowNormalWorkedForLast445:
;linefollow.h,400 :: 		else if(isAllWhite()){
0x2688	0xF008EC85  	CALL        _isAllWhite, 0
0x268C	0x5000      	MOVF        R0, 0 
0x268E	0x1001      	IORWF       R1, 0 
0x2690	0xE003      	BZ          L_lineFollowNormalWorkedForLast447
;linefollow.h,403 :: 		sendSensorStatus();
0x2692	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,404 :: 		}
0x2696	0xD00D      	BRA         L_lineFollowNormalWorkedForLast448
L_lineFollowNormalWorkedForLast447:
0x2698	0x0101      	MOVLB       1
;linefollow.h,407 :: 		moveForward(205,200);
0x269A	0x0ECD      	MOVLW       205
0x269C	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x269E	0x0E00      	MOVLW       0
0x26A0	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x26A2	0x0EC8      	MOVLW       200
0x26A4	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x26A6	0x0E00      	MOVLW       0
0x26A8	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x26AA	0xF007EC61  	CALL        _moveForward, 0
;linefollow.h,408 :: 		sendSensorStatus();
0x26AE	0xF008ECC2  	CALL        _sendSensorStatus, 0
;linefollow.h,410 :: 		}
L_lineFollowNormalWorkedForLast448:
L_lineFollowNormalWorkedForLast446:
L_lineFollowNormalWorkedForLast442:
L_lineFollowNormalWorkedForLast438:
L_lineFollowNormalWorkedForLast434:
L_lineFollowNormalWorkedForLast430:
L_lineFollowNormalWorkedForLast424:
L_lineFollowNormalWorkedForLast418:
L_lineFollowNormalWorkedForLast412:
L_lineFollowNormalWorkedForLast408:
L_lineFollowNormalWorkedForLast404:
L_lineFollowNormalWorkedForLast400:
L_lineFollowNormalWorkedForLast396:
L_lineFollowNormalWorkedForLast392:
L_lineFollowNormalWorkedForLast388:
L_lineFollowNormalWorkedForLast384:
L_lineFollowNormalWorkedForLast380:
L_lineFollowNormalWorkedForLast376:
L_lineFollowNormalWorkedForLast372:
L_lineFollowNormalWorkedForLast368:
L_lineFollowNormalWorkedForLast364:
L_lineFollowNormalWorkedForLast360:
L_lineFollowNormalWorkedForLast356:
L_lineFollowNormalWorkedForLast352:
;linefollow.h,411 :: 		}
L_lineFollowNormalWorkedForLast348:
;linefollow.h,412 :: 		}
0x26B2	0x0012      	RETURN      0
; end of _lineFollowNormalWorkedForLast
_setPID:
;linefollow.h,19 :: 		void setPID(){
;linefollow.h,20 :: 		MIN_RPM = 215;       //155
0x26B4	0x0ED7      	MOVLW       215
0x26B6	0x0101      	MOVLB       1
0x26B8	0x6F68      	MOVWF       _MIN_RPM, 1
0x26BA	0x0E00      	MOVLW       0
0x26BC	0x6F69      	MOVWF       _MIN_RPM+1, 1
;linefollow.h,21 :: 		MID_RPM = 235;
0x26BE	0x0EEB      	MOVLW       235
0x26C0	0x6F64      	MOVWF       _MID_RPM, 1
0x26C2	0x0E00      	MOVLW       0
0x26C4	0x6F65      	MOVWF       _MID_RPM+1, 1
;linefollow.h,22 :: 		MAX_RPM = 255;
0x26C6	0x0EFF      	MOVLW       255
0x26C8	0x6F66      	MOVWF       _MAX_RPM, 1
0x26CA	0x0E00      	MOVLW       0
0x26CC	0x6F67      	MOVWF       _MAX_RPM+1, 1
;linefollow.h,23 :: 		TEST_RPM = 200;
0x26CE	0x0EC8      	MOVLW       200
0x26D0	0x6F4C      	MOVWF       _TEST_RPM, 1
0x26D2	0x0E00      	MOVLW       0
0x26D4	0x6F4D      	MOVWF       _TEST_RPM+1, 1
;linefollow.h,26 :: 		SLOW_PWM = 255;
0x26D6	0x0EFF      	MOVLW       255
0x26D8	0x6F4E      	MOVWF       _SLOW_PWM, 1
0x26DA	0x0E00      	MOVLW       0
0x26DC	0x6F4F      	MOVWF       _SLOW_PWM+1, 1
;linefollow.h,27 :: 		MID_PWM = 200;
0x26DE	0x0EC8      	MOVLW       200
0x26E0	0x6F48      	MOVWF       _MID_PWM, 1
0x26E2	0x0E00      	MOVLW       0
0x26E4	0x6F49      	MOVWF       _MID_PWM+1, 1
;linefollow.h,28 :: 		FAST_PWM = 255;
0x26E6	0x0EFF      	MOVLW       255
0x26E8	0x6F4A      	MOVWF       _FAST_PWM, 1
0x26EA	0x0E00      	MOVLW       0
0x26EC	0x6F4B      	MOVWF       _FAST_PWM+1, 1
;linefollow.h,30 :: 		Kp = 2;
0x26EE	0x0E00      	MOVLW       0
0x26F0	0x6F50      	MOVWF       _Kp, 1
0x26F2	0x0E00      	MOVLW       0
0x26F4	0x6F51      	MOVWF       _Kp+1, 1
0x26F6	0x0E00      	MOVLW       0
0x26F8	0x6F52      	MOVWF       _Kp+2, 1
0x26FA	0x0E80      	MOVLW       128
0x26FC	0x6F53      	MOVWF       _Kp+3, 1
;linefollow.h,31 :: 		Ki = 0;
0x26FE	0x6B5A      	CLRF        _Ki, 1
0x2700	0x6B5B      	CLRF        _Ki+1, 1
0x2702	0x6B5C      	CLRF        _Ki+2, 1
0x2704	0x6B5D      	CLRF        _Ki+3, 1
;linefollow.h,32 :: 		Kd = 0;
0x2706	0x6B5E      	CLRF        _Kd, 1
0x2708	0x6B5F      	CLRF        _Kd+1, 1
0x270A	0x6B60      	CLRF        _Kd+2, 1
0x270C	0x6B61      	CLRF        _Kd+3, 1
;linefollow.h,34 :: 		totalError = 0;
0x270E	0x6B54      	CLRF        _totalError, 1
0x2710	0x6B55      	CLRF        _totalError+1, 1
0x2712	0x6B56      	CLRF        _totalError+2, 1
0x2714	0x6B57      	CLRF        _totalError+3, 1
;linefollow.h,35 :: 		previousDeviation = 0;
0x2716	0x6B58      	CLRF        _previousDeviation, 1
0x2718	0x6B59      	CLRF        _previousDeviation+1, 1
;linefollow.h,36 :: 		PID_LeftRPM = 0;
0x271A	0x6B84      	CLRF        _PID_LeftRPM, 1
0x271C	0x6B85      	CLRF        _PID_LeftRPM+1, 1
;linefollow.h,37 :: 		PID_RightRPM = 0;
0x271E	0x6B86      	CLRF        _PID_RightRPM, 1
0x2720	0x6B87      	CLRF        _PID_RightRPM+1, 1
;linefollow.h,39 :: 		Pwm1_Set_Duty(MID_RPM);
0x2722	0x0EEB      	MOVLW       235
0x2724	0x6FA3      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0x2726	0xF000ECCD  	CALL        _PWM1_Set_Duty, 0
;linefollow.h,40 :: 		Pwm2_Set_Duty(MID_RPM);
0x272A	0xF1A3C164  	MOVFF       _MID_RPM, FARG_PWM2_Set_Duty_new_duty
0x272E	0xF000EC52  	CALL        _PWM2_Set_Duty, 0
;linefollow.h,41 :: 		}
0x2732	0x0012      	RETURN      0
; end of _setPID
_moveStraightSlow:
;Main 7.0V.c,173 :: 		void moveStraightSlow(){
;Main 7.0V.c,174 :: 		moveForward(205,200);
0x2734	0x0ECD      	MOVLW       205
0x2736	0x0101      	MOVLB       1
0x2738	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x273A	0x0E00      	MOVLW       0
0x273C	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x273E	0x0EC8      	MOVLW       200
0x2740	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2742	0x0E00      	MOVLW       0
0x2744	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2746	0xF007EC61  	CALL        _moveForward, 0
;Main 7.0V.c,175 :: 		}
0x274A	0x0012      	RETURN      0
; end of _moveStraightSlow
_lineFollowPID:
;linefollow.h,43 :: 		void lineFollowPID(){
;linefollow.h,66 :: 		if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x274C	0xA883      	BTFSS       PORTD, 4 
0x274E	0xD00D      	BRA         L_lineFollowPID87
0x2750	0xBA83      	BTFSC       PORTD, 5 
0x2752	0xD00B      	BRA         L_lineFollowPID87
0x2754	0xBC83      	BTFSC       PORTD, 6 
0x2756	0xD009      	BRA         L_lineFollowPID87
0x2758	0xBE83      	BTFSC       PORTD, 7 
0x275A	0xD007      	BRA         L_lineFollowPID87
0x275C	0xB481      	BTFSC       PORTB, 2 
0x275E	0xD005      	BRA         L_lineFollowPID87
L__lineFollowPID840:
;linefollow.h,67 :: 		deviation = 15;
0x2760	0x0E0F      	MOVLW       15
0x2762	0x0101      	MOVLB       1
0x2764	0x6F6A      	MOVWF       _deviation, 1
0x2766	0x0E00      	MOVLW       0
0x2768	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID87:
;linefollow.h,68 :: 		if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x276A	0xA883      	BTFSS       PORTD, 4 
0x276C	0xD00D      	BRA         L_lineFollowPID90
0x276E	0xAA83      	BTFSS       PORTD, 5 
0x2770	0xD00B      	BRA         L_lineFollowPID90
0x2772	0xBC83      	BTFSC       PORTD, 6 
0x2774	0xD009      	BRA         L_lineFollowPID90
0x2776	0xBE83      	BTFSC       PORTD, 7 
0x2778	0xD007      	BRA         L_lineFollowPID90
0x277A	0xB481      	BTFSC       PORTB, 2 
0x277C	0xD005      	BRA         L_lineFollowPID90
L__lineFollowPID839:
0x277E	0x0101      	MOVLB       1
;linefollow.h,69 :: 		deviation = 10;
0x2780	0x0E0A      	MOVLW       10
0x2782	0x6F6A      	MOVWF       _deviation, 1
0x2784	0x0E00      	MOVLW       0
0x2786	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID90:
;linefollow.h,70 :: 		if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x2788	0xA883      	BTFSS       PORTD, 4 
0x278A	0xD00D      	BRA         L_lineFollowPID93
0x278C	0xAA83      	BTFSS       PORTD, 5 
0x278E	0xD00B      	BRA         L_lineFollowPID93
0x2790	0xAC83      	BTFSS       PORTD, 6 
0x2792	0xD009      	BRA         L_lineFollowPID93
0x2794	0xBE83      	BTFSC       PORTD, 7 
0x2796	0xD007      	BRA         L_lineFollowPID93
0x2798	0xB481      	BTFSC       PORTB, 2 
0x279A	0xD005      	BRA         L_lineFollowPID93
L__lineFollowPID838:
0x279C	0x0101      	MOVLB       1
;linefollow.h,71 :: 		deviation = 4;
0x279E	0x0E04      	MOVLW       4
0x27A0	0x6F6A      	MOVWF       _deviation, 1
0x27A2	0x0E00      	MOVLW       0
0x27A4	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID93:
;linefollow.h,72 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x27A6	0xB883      	BTFSC       PORTD, 4 
0x27A8	0xD00D      	BRA         L_lineFollowPID96
0x27AA	0xAA83      	BTFSS       PORTD, 5 
0x27AC	0xD00B      	BRA         L_lineFollowPID96
0x27AE	0xBC83      	BTFSC       PORTD, 6 
0x27B0	0xD009      	BRA         L_lineFollowPID96
0x27B2	0xBE83      	BTFSC       PORTD, 7 
0x27B4	0xD007      	BRA         L_lineFollowPID96
0x27B6	0xB481      	BTFSC       PORTB, 2 
0x27B8	0xD005      	BRA         L_lineFollowPID96
L__lineFollowPID837:
0x27BA	0x0101      	MOVLB       1
;linefollow.h,73 :: 		deviation = 1;
0x27BC	0x0E01      	MOVLW       1
0x27BE	0x6F6A      	MOVWF       _deviation, 1
0x27C0	0x0E00      	MOVLW       0
0x27C2	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID96:
;linefollow.h,75 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x27C4	0xB883      	BTFSC       PORTD, 4 
0x27C6	0xD00B      	BRA         L_lineFollowPID99
0x27C8	0xAA83      	BTFSS       PORTD, 5 
0x27CA	0xD009      	BRA         L_lineFollowPID99
0x27CC	0xAC83      	BTFSS       PORTD, 6 
0x27CE	0xD007      	BRA         L_lineFollowPID99
0x27D0	0xBE83      	BTFSC       PORTD, 7 
0x27D2	0xD005      	BRA         L_lineFollowPID99
0x27D4	0xB481      	BTFSC       PORTB, 2 
0x27D6	0xD003      	BRA         L_lineFollowPID99
L__lineFollowPID836:
0x27D8	0x0101      	MOVLB       1
;linefollow.h,76 :: 		deviation = 0;
0x27DA	0x6B6A      	CLRF        _deviation, 1
0x27DC	0x6B6B      	CLRF        _deviation+1, 1
L_lineFollowPID99:
;linefollow.h,77 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x27DE	0xB883      	BTFSC       PORTD, 4 
0x27E0	0xD00B      	BRA         L_lineFollowPID102
0x27E2	0xAA83      	BTFSS       PORTD, 5 
0x27E4	0xD009      	BRA         L_lineFollowPID102
0x27E6	0xAC83      	BTFSS       PORTD, 6 
0x27E8	0xD007      	BRA         L_lineFollowPID102
0x27EA	0xAE83      	BTFSS       PORTD, 7 
0x27EC	0xD005      	BRA         L_lineFollowPID102
0x27EE	0xB481      	BTFSC       PORTB, 2 
0x27F0	0xD003      	BRA         L_lineFollowPID102
L__lineFollowPID835:
0x27F2	0x0101      	MOVLB       1
;linefollow.h,78 :: 		deviation = 0;
0x27F4	0x6B6A      	CLRF        _deviation, 1
0x27F6	0x6B6B      	CLRF        _deviation+1, 1
L_lineFollowPID102:
;linefollow.h,79 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x27F8	0xB883      	BTFSC       PORTD, 4 
0x27FA	0xD00B      	BRA         L_lineFollowPID105
0x27FC	0xBA83      	BTFSC       PORTD, 5 
0x27FE	0xD009      	BRA         L_lineFollowPID105
0x2800	0xAC83      	BTFSS       PORTD, 6 
0x2802	0xD007      	BRA         L_lineFollowPID105
0x2804	0xBE83      	BTFSC       PORTD, 7 
0x2806	0xD005      	BRA         L_lineFollowPID105
0x2808	0xB481      	BTFSC       PORTB, 2 
0x280A	0xD003      	BRA         L_lineFollowPID105
L__lineFollowPID834:
0x280C	0x0101      	MOVLB       1
;linefollow.h,80 :: 		deviation = 0;
0x280E	0x6B6A      	CLRF        _deviation, 1
0x2810	0x6B6B      	CLRF        _deviation+1, 1
L_lineFollowPID105:
;linefollow.h,81 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x2812	0xB883      	BTFSC       PORTD, 4 
0x2814	0xD00B      	BRA         L_lineFollowPID108
0x2816	0xBA83      	BTFSC       PORTD, 5 
0x2818	0xD009      	BRA         L_lineFollowPID108
0x281A	0xAC83      	BTFSS       PORTD, 6 
0x281C	0xD007      	BRA         L_lineFollowPID108
0x281E	0xAE83      	BTFSS       PORTD, 7 
0x2820	0xD005      	BRA         L_lineFollowPID108
0x2822	0xB481      	BTFSC       PORTB, 2 
0x2824	0xD003      	BRA         L_lineFollowPID108
L__lineFollowPID833:
0x2826	0x0101      	MOVLB       1
;linefollow.h,82 :: 		deviation = 0;
0x2828	0x6B6A      	CLRF        _deviation, 1
0x282A	0x6B6B      	CLRF        _deviation+1, 1
L_lineFollowPID108:
;linefollow.h,84 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x282C	0xB883      	BTFSC       PORTD, 4 
0x282E	0xD00D      	BRA         L_lineFollowPID111
0x2830	0xBA83      	BTFSC       PORTD, 5 
0x2832	0xD00B      	BRA         L_lineFollowPID111
0x2834	0xBC83      	BTFSC       PORTD, 6 
0x2836	0xD009      	BRA         L_lineFollowPID111
0x2838	0xAE83      	BTFSS       PORTD, 7 
0x283A	0xD007      	BRA         L_lineFollowPID111
0x283C	0xB481      	BTFSC       PORTB, 2 
0x283E	0xD005      	BRA         L_lineFollowPID111
L__lineFollowPID832:
0x2840	0x0101      	MOVLB       1
;linefollow.h,85 :: 		deviation = -1;
0x2842	0x0EFF      	MOVLW       255
0x2844	0x6F6A      	MOVWF       _deviation, 1
0x2846	0x0EFF      	MOVLW       255
0x2848	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID111:
;linefollow.h,86 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x284A	0xB883      	BTFSC       PORTD, 4 
0x284C	0xD00D      	BRA         L_lineFollowPID114
0x284E	0xBA83      	BTFSC       PORTD, 5 
0x2850	0xD00B      	BRA         L_lineFollowPID114
0x2852	0xAC83      	BTFSS       PORTD, 6 
0x2854	0xD009      	BRA         L_lineFollowPID114
0x2856	0xAE83      	BTFSS       PORTD, 7 
0x2858	0xD007      	BRA         L_lineFollowPID114
0x285A	0xA481      	BTFSS       PORTB, 2 
0x285C	0xD005      	BRA         L_lineFollowPID114
L__lineFollowPID831:
0x285E	0x0101      	MOVLB       1
;linefollow.h,87 :: 		deviation = -4;
0x2860	0x0EFC      	MOVLW       252
0x2862	0x6F6A      	MOVWF       _deviation, 1
0x2864	0x0EFF      	MOVLW       255
0x2866	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID114:
;linefollow.h,88 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x2868	0xB883      	BTFSC       PORTD, 4 
0x286A	0xD00D      	BRA         L_lineFollowPID117
0x286C	0xBA83      	BTFSC       PORTD, 5 
0x286E	0xD00B      	BRA         L_lineFollowPID117
0x2870	0xBC83      	BTFSC       PORTD, 6 
0x2872	0xD009      	BRA         L_lineFollowPID117
0x2874	0xAE83      	BTFSS       PORTD, 7 
0x2876	0xD007      	BRA         L_lineFollowPID117
0x2878	0xA481      	BTFSS       PORTB, 2 
0x287A	0xD005      	BRA         L_lineFollowPID117
L__lineFollowPID830:
0x287C	0x0101      	MOVLB       1
;linefollow.h,89 :: 		deviation = -10;
0x287E	0x0EF6      	MOVLW       246
0x2880	0x6F6A      	MOVWF       _deviation, 1
0x2882	0x0EFF      	MOVLW       255
0x2884	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID117:
;linefollow.h,90 :: 		if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x2886	0xB883      	BTFSC       PORTD, 4 
0x2888	0xD00D      	BRA         L_lineFollowPID120
0x288A	0xBA83      	BTFSC       PORTD, 5 
0x288C	0xD00B      	BRA         L_lineFollowPID120
0x288E	0xBC83      	BTFSC       PORTD, 6 
0x2890	0xD009      	BRA         L_lineFollowPID120
0x2892	0xBE83      	BTFSC       PORTD, 7 
0x2894	0xD007      	BRA         L_lineFollowPID120
0x2896	0xA481      	BTFSS       PORTB, 2 
0x2898	0xD005      	BRA         L_lineFollowPID120
L__lineFollowPID829:
0x289A	0x0101      	MOVLB       1
;linefollow.h,91 :: 		deviation = -15;
0x289C	0x0EF1      	MOVLW       241
0x289E	0x6F6A      	MOVWF       _deviation, 1
0x28A0	0x0EFF      	MOVLW       255
0x28A2	0x6F6B      	MOVWF       _deviation+1, 1
L_lineFollowPID120:
0x28A4	0x0101      	MOVLB       1
;linefollow.h,93 :: 		correction =  Kp*deviation + Ki*totalError + Kd*(deviation-previousDeviation);
0x28A6	0xF000C16A  	MOVFF       _deviation, R0
0x28AA	0xF001C16B  	MOVFF       _deviation+1, R1
0x28AE	0xF007ECDC  	CALL        _Int2Double, 0
0x28B2	0xF004C150  	MOVFF       _Kp, R4
0x28B6	0xF005C151  	MOVFF       _Kp+1, R5
0x28BA	0xF006C152  	MOVFF       _Kp+2, R6
0x28BE	0xF007C153  	MOVFF       _Kp+3, R7
0x28C2	0xF001EC5E  	CALL        _Mul_32x32_FP, 0
0x28C6	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x28CA	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x28CE	0xF18CC002  	MOVFF       R2, FLOC__lineFollowPID+2
0x28D2	0xF18DC003  	MOVFF       R3, FLOC__lineFollowPID+3
0x28D6	0xF000C15A  	MOVFF       _Ki, R0
0x28DA	0xF001C15B  	MOVFF       _Ki+1, R1
0x28DE	0xF002C15C  	MOVFF       _Ki+2, R2
0x28E2	0xF003C15D  	MOVFF       _Ki+3, R3
0x28E6	0xF004C154  	MOVFF       _totalError, R4
0x28EA	0xF005C155  	MOVFF       _totalError+1, R5
0x28EE	0xF006C156  	MOVFF       _totalError+2, R6
0x28F2	0xF007C157  	MOVFF       _totalError+3, R7
0x28F6	0xF001EC5E  	CALL        _Mul_32x32_FP, 0
0x28FA	0xF004C18A  	MOVFF       FLOC__lineFollowPID, R4
0x28FE	0xF005C18B  	MOVFF       FLOC__lineFollowPID+1, R5
0x2902	0xF006C18C  	MOVFF       FLOC__lineFollowPID+2, R6
0x2906	0xF007C18D  	MOVFF       FLOC__lineFollowPID+3, R7
0x290A	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x290E	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x2912	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x2916	0xF18CC002  	MOVFF       R2, FLOC__lineFollowPID+2
0x291A	0xF18DC003  	MOVFF       R3, FLOC__lineFollowPID+3
0x291E	0x5158      	MOVF        _previousDeviation, 0, 1
0x2920	0x5D6A      	SUBWF       _deviation, 0, 1
0x2922	0x6E00      	MOVWF       R0 
0x2924	0x5159      	MOVF        _previousDeviation+1, 0, 1
0x2926	0x596B      	SUBWFB      _deviation+1, 0, 1
0x2928	0x6E01      	MOVWF       R1 
0x292A	0xF007ECDC  	CALL        _Int2Double, 0
0x292E	0xF004C15E  	MOVFF       _Kd, R4
0x2932	0xF005C15F  	MOVFF       _Kd+1, R5
0x2936	0xF006C160  	MOVFF       _Kd+2, R6
0x293A	0xF007C161  	MOVFF       _Kd+3, R7
0x293E	0xF001EC5E  	CALL        _Mul_32x32_FP, 0
0x2942	0xF004C18A  	MOVFF       FLOC__lineFollowPID, R4
0x2946	0xF005C18B  	MOVFF       FLOC__lineFollowPID+1, R5
0x294A	0xF006C18C  	MOVFF       FLOC__lineFollowPID+2, R6
0x294E	0xF007C18D  	MOVFF       FLOC__lineFollowPID+3, R7
0x2952	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x2956	0xF192C000  	MOVFF       R0, FLOC__lineFollowPID+8
0x295A	0xF193C001  	MOVFF       R1, FLOC__lineFollowPID+9
0x295E	0xF194C002  	MOVFF       R2, FLOC__lineFollowPID+10
0x2962	0xF195C003  	MOVFF       R3, FLOC__lineFollowPID+11
0x2966	0xF16EC192  	MOVFF       FLOC__lineFollowPID+8, _correction
0x296A	0xF16FC193  	MOVFF       FLOC__lineFollowPID+9, _correction+1
0x296E	0xF170C194  	MOVFF       FLOC__lineFollowPID+10, _correction+2
0x2972	0xF171C195  	MOVFF       FLOC__lineFollowPID+11, _correction+3
;linefollow.h,94 :: 		totalError += correction;
0x2976	0xF000C154  	MOVFF       _totalError, R0
0x297A	0xF001C155  	MOVFF       _totalError+1, R1
0x297E	0xF002C156  	MOVFF       _totalError+2, R2
0x2982	0xF003C157  	MOVFF       _totalError+3, R3
0x2986	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x298A	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x298E	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x2992	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x2996	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x299A	0xF154C000  	MOVFF       R0, _totalError
0x299E	0xF155C001  	MOVFF       R1, _totalError+1
0x29A2	0xF156C002  	MOVFF       R2, _totalError+2
0x29A6	0xF157C003  	MOVFF       R3, _totalError+3
;linefollow.h,95 :: 		previousDeviation = deviation;
0x29AA	0xF158C16A  	MOVFF       _deviation, _previousDeviation
0x29AE	0xF159C16B  	MOVFF       _deviation+1, _previousDeviation+1
;linefollow.h,97 :: 		PID_LeftRPM = MID_RPM + correction;
0x29B2	0xF000C164  	MOVFF       _MID_RPM, R0
0x29B6	0xF001C165  	MOVFF       _MID_RPM+1, R1
0x29BA	0xF007ECDC  	CALL        _Int2Double, 0
0x29BE	0xF18EC000  	MOVFF       R0, FLOC__lineFollowPID+4
0x29C2	0xF18FC001  	MOVFF       R1, FLOC__lineFollowPID+5
0x29C6	0xF190C002  	MOVFF       R2, FLOC__lineFollowPID+6
0x29CA	0xF191C003  	MOVFF       R3, FLOC__lineFollowPID+7
0x29CE	0xF000C18E  	MOVFF       FLOC__lineFollowPID+4, R0
0x29D2	0xF001C18F  	MOVFF       FLOC__lineFollowPID+5, R1
0x29D6	0xF002C190  	MOVFF       FLOC__lineFollowPID+6, R2
0x29DA	0xF003C191  	MOVFF       FLOC__lineFollowPID+7, R3
0x29DE	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x29E2	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x29E6	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x29EA	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x29EE	0xF005EC42  	CALL        _Add_32x32_FP, 0
0x29F2	0xF002ECA8  	CALL        _Double2Int, 0
0x29F6	0xF18AC000  	MOVFF       R0, FLOC__lineFollowPID
0x29FA	0xF18BC001  	MOVFF       R1, FLOC__lineFollowPID+1
0x29FE	0xF184C18A  	MOVFF       FLOC__lineFollowPID, _PID_LeftRPM
0x2A02	0xF185C18B  	MOVFF       FLOC__lineFollowPID+1, _PID_LeftRPM+1
;linefollow.h,98 :: 		PID_RightRPM = MID_RPM - correction;
0x2A06	0xF004C192  	MOVFF       FLOC__lineFollowPID+8, R4
0x2A0A	0xF005C193  	MOVFF       FLOC__lineFollowPID+9, R5
0x2A0E	0xF006C194  	MOVFF       FLOC__lineFollowPID+10, R6
0x2A12	0xF007C195  	MOVFF       FLOC__lineFollowPID+11, R7
0x2A16	0xF000C18E  	MOVFF       FLOC__lineFollowPID+4, R0
0x2A1A	0xF001C18F  	MOVFF       FLOC__lineFollowPID+5, R1
0x2A1E	0xF002C190  	MOVFF       FLOC__lineFollowPID+6, R2
0x2A22	0xF003C191  	MOVFF       FLOC__lineFollowPID+7, R3
0x2A26	0xF007ECD9  	CALL        _Sub_32x32_FP, 0
0x2A2A	0xF002ECA8  	CALL        _Double2Int, 0
0x2A2E	0xF186C000  	MOVFF       R0, _PID_RightRPM
0x2A32	0xF187C001  	MOVFF       R1, _PID_RightRPM+1
;linefollow.h,100 :: 		moveForward(PID_LeftRPM, PID_RightRPM);
0x2A36	0xF19AC18A  	MOVFF       FLOC__lineFollowPID, FARG_moveForward_pwmLeft
0x2A3A	0xF19BC18B  	MOVFF       FLOC__lineFollowPID+1, FARG_moveForward_pwmLeft+1
0x2A3E	0xF19CC000  	MOVFF       R0, FARG_moveForward_pwmRight
0x2A42	0xF19DC001  	MOVFF       R1, FARG_moveForward_pwmRight+1
0x2A46	0xF007EC61  	CALL        _moveForward, 0
;linefollow.h,106 :: 		}
0x2A4A	0x0012      	RETURN      0
; end of _lineFollowPID
_main:
0x2A4C	0xF017EC0C  	CALL        11800, 0
;Main 7.0V.c,37 :: 		void main() {
;Main 7.0V.c,38 :: 		configure();
0x2A50	0xF00BEC6A  	CALL        _configure, 0
;Main 7.0V.c,39 :: 		setPID();
0x2A54	0xDE2F      	RCALL       _setPID
;Main 7.0V.c,40 :: 		sendText("Starting...");
0x2A56	0x0E7E      	MOVLW       ?lstr32_Main_327.0V
0x2A58	0x0101      	MOVLB       1
0x2A5A	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2A5C	0x0E00      	MOVLW       hi_addr(?lstr32_Main_327.0V)
0x2A5E	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2A60	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,44 :: 		LEVEL1_STATE = NOT_REACHED;
0x2A64	0x6B82      	CLRF        _LEVEL1_STATE, 1
0x2A66	0x6B83      	CLRF        _LEVEL1_STATE+1, 1
;Main 7.0V.c,45 :: 		sendText("Starting Block  ");
0x2A68	0x0E8A      	MOVLW       ?lstr33_Main_327.0V
0x2A6A	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2A6C	0x0E00      	MOVLW       hi_addr(?lstr33_Main_327.0V)
0x2A6E	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2A70	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,46 :: 		LEVEL = 0;
0x2A74	0x6B88      	CLRF        _LEVEL, 1
0x2A76	0x6B89      	CLRF        _LEVEL+1, 1
;Main 7.0V.c,48 :: 		while(isAllWhite())
L_main661:
0x2A78	0xF008EC85  	CALL        _isAllWhite, 0
0x2A7C	0x5000      	MOVF        R0, 0 
0x2A7E	0x1001      	IORWF       R1, 0 
0x2A80	0xE002      	BZ          L_main662
;Main 7.0V.c,49 :: 		moveStraightSlow();
0x2A82	0xDE58      	RCALL       _moveStraightSlow
0x2A84	0xD7F9      	BRA         L_main661
L_main662:
;Main 7.0V.c,50 :: 		delay_ms(10);
0x2A86	0x0E41      	MOVLW       65
0x2A88	0x6E0C      	MOVWF       R12, 0
0x2A8A	0x0EEE      	MOVLW       238
0x2A8C	0x6E0D      	MOVWF       R13, 0
L_main663:
0x2A8E	0x2E0D      	DECFSZ      R13, 1, 0
0x2A90	0xD7FE      	BRA         L_main663
0x2A92	0x2E0C      	DECFSZ      R12, 1, 0
0x2A94	0xD7FC      	BRA         L_main663
0x2A96	0x0000      	NOP
;Main 7.0V.c,51 :: 		LEVEL = 1;
0x2A98	0x0E01      	MOVLW       1
0x2A9A	0x0101      	MOVLB       1
0x2A9C	0x6F88      	MOVWF       _LEVEL, 1
0x2A9E	0x0E00      	MOVLW       0
0x2AA0	0x6F89      	MOVWF       _LEVEL+1, 1
;Main 7.0V.c,52 :: 		sendText("Level 1 Starting  ");
0x2AA2	0x0EE5      	MOVLW       ?lstr34_Main_327.0V
0x2AA4	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2AA6	0x0E00      	MOVLW       hi_addr(?lstr34_Main_327.0V)
0x2AA8	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2AAA	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,53 :: 		LEVEL1_STATE = REACHED;
0x2AAE	0x0E01      	MOVLW       1
0x2AB0	0x6F82      	MOVWF       _LEVEL1_STATE, 1
0x2AB2	0x0E00      	MOVLW       0
0x2AB4	0x6F83      	MOVWF       _LEVEL1_STATE+1, 1
;Main 7.0V.c,54 :: 		stop();
0x2AB6	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,58 :: 		moveForward(205,200);
0x2ABA	0x0ECD      	MOVLW       205
0x2ABC	0x6F9A      	MOVWF       FARG_moveForward_pwmLeft, 1
0x2ABE	0x0E00      	MOVLW       0
0x2AC0	0x6F9B      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x2AC2	0x0EC8      	MOVLW       200
0x2AC4	0x6F9C      	MOVWF       FARG_moveForward_pwmRight, 1
0x2AC6	0x0E00      	MOVLW       0
0x2AC8	0x6F9D      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x2ACA	0xF007EC61  	CALL        _moveForward, 0
;Main 7.0V.c,59 :: 		delay_ms(100);
0x2ACE	0x0E03      	MOVLW       3
0x2AD0	0x6E0B      	MOVWF       R11, 0
0x2AD2	0x0E8A      	MOVLW       138
0x2AD4	0x6E0C      	MOVWF       R12, 0
0x2AD6	0x0E55      	MOVLW       85
0x2AD8	0x6E0D      	MOVWF       R13, 0
L_main664:
0x2ADA	0x2E0D      	DECFSZ      R13, 1, 0
0x2ADC	0xD7FE      	BRA         L_main664
0x2ADE	0x2E0C      	DECFSZ      R12, 1, 0
0x2AE0	0xD7FC      	BRA         L_main664
0x2AE2	0x2E0B      	DECFSZ      R11, 1, 0
0x2AE4	0xD7FA      	BRA         L_main664
0x2AE6	0x0000      	NOP
0x2AE8	0x0000      	NOP
;Main 7.0V.c,60 :: 		while(!isAllBlack()){
L_main665:
0x2AEA	0xF009ECBF  	CALL        _isAllBlack, 0
0x2AEE	0x5000      	MOVF        R0, 0 
0x2AF0	0x1001      	IORWF       R1, 0 
0x2AF2	0xE11A      	BNZ         L_main666
;Main 7.0V.c,62 :: 		if( Scout==1 &&(Sensor3==1 || Sensor4==1 || Sensor5==1 || Sensor6==1 || Sensor7==1) && Sensor1==0 && Sensor2==0 && Sensor8==0 && Sensor9==0)
0x2AF4	0xAA81      	BTFSS       PORTB, 5 
0x2AF6	0xD015      	BRA         L_main671
0x2AF8	0xB883      	BTFSC       PORTD, 4 
0x2AFA	0xD009      	BRA         L__main964
0x2AFC	0xBA83      	BTFSC       PORTD, 5 
0x2AFE	0xD007      	BRA         L__main964
0x2B00	0xBC83      	BTFSC       PORTD, 6 
0x2B02	0xD005      	BRA         L__main964
0x2B04	0xBE83      	BTFSC       PORTD, 7 
0x2B06	0xD003      	BRA         L__main964
0x2B08	0xB481      	BTFSC       PORTB, 2 
0x2B0A	0xD001      	BRA         L__main964
0x2B0C	0xD00A      	BRA         L_main671
L__main964:
0x2B0E	0xB881      	BTFSC       PORTB, 4 
0x2B10	0xD008      	BRA         L_main671
0x2B12	0xB681      	BTFSC       PORTB, 3 
0x2B14	0xD006      	BRA         L_main671
0x2B16	0xBC81      	BTFSC       PORTB, 6 
0x2B18	0xD004      	BRA         L_main671
0x2B1A	0xBE81      	BTFSC       PORTB, 7 
0x2B1C	0xD002      	BRA         L_main671
L__main963:
;Main 7.0V.c,63 :: 		lineFollowPID();
0x2B1E	0xDE16      	RCALL       _lineFollowPID
0x2B20	0xD002      	BRA         L_main672
L_main671:
;Main 7.0V.c,65 :: 		lineFollowNormalWorked();
0x2B22	0xF00BEC9F  	CALL        _lineFollowNormalWorked, 0
L_main672:
;Main 7.0V.c,66 :: 		}
0x2B26	0xD7E1      	BRA         L_main665
L_main666:
;Main 7.0V.c,67 :: 		stop();
0x2B28	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,68 :: 		sendText("  End of Level 1. Level 2 Starting  ");
0x2B2C	0x0E9B      	MOVLW       ?lstr35_Main_327.0V
0x2B2E	0x0101      	MOVLB       1
0x2B30	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2B32	0x0E00      	MOVLW       hi_addr(?lstr35_Main_327.0V)
0x2B34	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2B36	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,69 :: 		LEVEL1_STATE = COMPLETED;
0x2B3A	0x0E02      	MOVLW       2
0x2B3C	0x6F82      	MOVWF       _LEVEL1_STATE, 1
0x2B3E	0x0E00      	MOVLW       0
0x2B40	0x6F83      	MOVWF       _LEVEL1_STATE+1, 1
;Main 7.0V.c,70 :: 		LEVEL2_STATE = REACHED;
0x2B42	0x0E01      	MOVLW       1
0x2B44	0x6F62      	MOVWF       _LEVEL2_STATE, 1
0x2B46	0x0E00      	MOVLW       0
0x2B48	0x6F63      	MOVWF       _LEVEL2_STATE+1, 1
;Main 7.0V.c,71 :: 		LEVEL = 2;
0x2B4A	0x0E02      	MOVLW       2
0x2B4C	0x6F88      	MOVWF       _LEVEL, 1
0x2B4E	0x0E00      	MOVLW       0
0x2B50	0x6F89      	MOVWF       _LEVEL+1, 1
;Main 7.0V.c,75 :: 		while(!isAllWhite() && LEVEL2_STATE != COMPLETED){
L_main673:
0x2B52	0xF008EC85  	CALL        _isAllWhite, 0
0x2B56	0x5000      	MOVF        R0, 0 
0x2B58	0x1001      	IORWF       R1, 0 
0x2B5A	0xE10A      	BNZ         L_main674
0x2B5C	0x0E00      	MOVLW       0
0x2B5E	0x0101      	MOVLB       1
0x2B60	0x1963      	XORWF       _LEVEL2_STATE+1, 0, 1
0x2B62	0xE102      	BNZ         L__main1039
0x2B64	0x0E02      	MOVLW       2
0x2B66	0x1962      	XORWF       _LEVEL2_STATE, 0, 1
L__main1039:
0x2B68	0xE003      	BZ          L_main674
L__main962:
;Main 7.0V.c,76 :: 		goThroughObstaclesJay();
0x2B6A	0xF00FEC39  	CALL        _goThroughObstaclesJay, 0
;Main 7.0V.c,77 :: 		}
0x2B6E	0xD7F1      	BRA         L_main673
L_main674:
;Main 7.0V.c,79 :: 		stop();
0x2B70	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,80 :: 		sendText("  End of Level 2. Level 3 Starting  ");
0x2B74	0x0EC0      	MOVLW       ?lstr36_Main_327.0V
0x2B76	0x0101      	MOVLB       1
0x2B78	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2B7A	0x0E00      	MOVLW       hi_addr(?lstr36_Main_327.0V)
0x2B7C	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2B7E	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,81 :: 		LEVEL2_STATE = COMPLETED;
0x2B82	0x0E02      	MOVLW       2
0x2B84	0x6F62      	MOVWF       _LEVEL2_STATE, 1
0x2B86	0x0E00      	MOVLW       0
0x2B88	0x6F63      	MOVWF       _LEVEL2_STATE+1, 1
;Main 7.0V.c,82 :: 		LEVEL3_STATE = REACHED;
0x2B8A	0x0E01      	MOVLW       1
0x2B8C	0x6F6C      	MOVWF       _LEVEL3_STATE, 1
0x2B8E	0x0E00      	MOVLW       0
0x2B90	0x6F6D      	MOVWF       _LEVEL3_STATE+1, 1
;Main 7.0V.c,83 :: 		LEVEL = 3;
0x2B92	0x0E03      	MOVLW       3
0x2B94	0x6F88      	MOVWF       _LEVEL, 1
0x2B96	0x0E00      	MOVLW       0
0x2B98	0x6F89      	MOVWF       _LEVEL+1, 1
;Main 7.0V.c,87 :: 		level3Aligning();
0x2B9A	0xF00EECDE  	CALL        _level3Aligning, 0
;Main 7.0V.c,90 :: 		while(getDistanceSonar2('M') > 30){
L_main677:
0x2B9E	0x0E4D      	MOVLW       77
0x2BA0	0x0101      	MOVLB       1
0x2BA2	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x2BA4	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x2BA8	0x5000      	MOVF        R0, 0 
0x2BAA	0x081E      	SUBLW       30
0x2BAC	0xE20B      	BC          L_main678
;Main 7.0V.c,91 :: 		moveStraightFast();
0x2BAE	0xF007EC87  	CALL        _moveStraightFast, 0
;Main 7.0V.c,92 :: 		delay_ms(1);
0x2BB2	0x0E07      	MOVLW       7
0x2BB4	0x6E0C      	MOVWF       R12, 0
0x2BB6	0x0E7D      	MOVLW       125
0x2BB8	0x6E0D      	MOVWF       R13, 0
L_main679:
0x2BBA	0x2E0D      	DECFSZ      R13, 1, 0
0x2BBC	0xD7FE      	BRA         L_main679
0x2BBE	0x2E0C      	DECFSZ      R12, 1, 0
0x2BC0	0xD7FC      	BRA         L_main679
;Main 7.0V.c,93 :: 		}
0x2BC2	0xD7ED      	BRA         L_main677
L_main678:
;Main 7.0V.c,94 :: 		rotateByDegree(-90);
0x2BC4	0x0EA6      	MOVLW       166
0x2BC6	0x0101      	MOVLB       1
0x2BC8	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2BCA	0x0EFF      	MOVLW       255
0x2BCC	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2BCE	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,95 :: 		delay_ms(100);
0x2BD2	0x0E03      	MOVLW       3
0x2BD4	0x6E0B      	MOVWF       R11, 0
0x2BD6	0x0E8A      	MOVLW       138
0x2BD8	0x6E0C      	MOVWF       R12, 0
0x2BDA	0x0E55      	MOVLW       85
0x2BDC	0x6E0D      	MOVWF       R13, 0
L_main680:
0x2BDE	0x2E0D      	DECFSZ      R13, 1, 0
0x2BE0	0xD7FE      	BRA         L_main680
0x2BE2	0x2E0C      	DECFSZ      R12, 1, 0
0x2BE4	0xD7FC      	BRA         L_main680
0x2BE6	0x2E0B      	DECFSZ      R11, 1, 0
0x2BE8	0xD7FA      	BRA         L_main680
0x2BEA	0x0000      	NOP
0x2BEC	0x0000      	NOP
;Main 7.0V.c,96 :: 		while(!isAllBlack()){
L_main681:
0x2BEE	0xF009ECBF  	CALL        _isAllBlack, 0
0x2BF2	0x5000      	MOVF        R0, 0 
0x2BF4	0x1001      	IORWF       R1, 0 
0x2BF6	0xA4D8      	BTFSS       STATUS, 2 
0x2BF8	0xD072      	BRA         L_main682
;Main 7.0V.c,98 :: 		if(!isAllWhite()){
0x2BFA	0xF008EC85  	CALL        _isAllWhite, 0
0x2BFE	0x5000      	MOVF        R0, 0 
0x2C00	0x1001      	IORWF       R1, 0 
0x2C02	0xE129      	BNZ         L_main683
;Main 7.0V.c,99 :: 		sendText("got a arrow..  ");
0x2C04	0x0E6E      	MOVLW       ?lstr37_Main_327.0V
0x2C06	0x0101      	MOVLB       1
0x2C08	0x6F9A      	MOVWF       FARG_sendText_aText, 1
0x2C0A	0x0E00      	MOVLW       hi_addr(?lstr37_Main_327.0V)
0x2C0C	0x6F9B      	MOVWF       FARG_sendText_aText+1, 1
0x2C0E	0xF007EC5A  	CALL        _sendText, 0
;Main 7.0V.c,100 :: 		lineFollowNormalWorkedForLast();
0x2C12	0xF010EC13  	CALL        _lineFollowNormalWorkedForLast, 0
;Main 7.0V.c,101 :: 		sendSensorStatus();
0x2C16	0xF008ECC2  	CALL        _sendSensorStatus, 0
;Main 7.0V.c,102 :: 		if(( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)){
0x2C1A	0xB881      	BTFSC       PORTB, 4 
0x2C1C	0xD01B      	BRA         L_main686
0x2C1E	0xB681      	BTFSC       PORTB, 3 
0x2C20	0xD019      	BRA         L_main686
0x2C22	0xB883      	BTFSC       PORTD, 4 
0x2C24	0xD017      	BRA         L_main686
0x2C26	0xBA83      	BTFSC       PORTD, 5 
0x2C28	0xD015      	BRA         L_main686
0x2C2A	0xAC83      	BTFSS       PORTD, 6 
0x2C2C	0xD013      	BRA         L_main686
0x2C2E	0xBE83      	BTFSC       PORTD, 7 
0x2C30	0xD011      	BRA         L_main686
0x2C32	0xB481      	BTFSC       PORTB, 2 
0x2C34	0xD00F      	BRA         L_main686
0x2C36	0xBC81      	BTFSC       PORTB, 6 
0x2C38	0xD00D      	BRA         L_main686
0x2C3A	0xBE81      	BTFSC       PORTB, 7 
0x2C3C	0xD00B      	BRA         L_main686
L__main961:
;Main 7.0V.c,103 :: 		while(Sensor5==1)
L_main687:
0x2C3E	0xAC83      	BTFSS       PORTD, 6 
0x2C40	0xD002      	BRA         L_main688
;Main 7.0V.c,104 :: 		moveStraightSlow();
0x2C42	0xDD78      	RCALL       _moveStraightSlow
0x2C44	0xD7FC      	BRA         L_main687
L_main688:
;Main 7.0V.c,105 :: 		while(isAllWhite())
L_main689:
0x2C46	0xF008EC85  	CALL        _isAllWhite, 0
0x2C4A	0x5000      	MOVF        R0, 0 
0x2C4C	0x1001      	IORWF       R1, 0 
0x2C4E	0xE002      	BZ          L_main690
;Main 7.0V.c,106 :: 		moveStraightSlow();
0x2C50	0xDD71      	RCALL       _moveStraightSlow
0x2C52	0xD7F9      	BRA         L_main689
L_main690:
;Main 7.0V.c,107 :: 		}
L_main686:
;Main 7.0V.c,108 :: 		}
0x2C54	0xD001      	BRA         L_main691
L_main683:
;Main 7.0V.c,110 :: 		moveStraightSlow();
0x2C56	0xDD6E      	RCALL       _moveStraightSlow
L_main691:
;Main 7.0V.c,112 :: 		if(getDistanceSonar2('M') < 5){
0x2C58	0x0E4D      	MOVLW       77
0x2C5A	0x0101      	MOVLB       1
0x2C5C	0x6F9A      	MOVWF       FARG_getDistanceSonar2_Sensor, 1
0x2C5E	0xF004EC08  	CALL        _getDistanceSonar2, 0
0x2C62	0x0E05      	MOVLW       5
0x2C64	0x5C00      	SUBWF       R0, 0 
0x2C66	0xE232      	BC          L_main692
;Main 7.0V.c,113 :: 		rotateByDegree(90);
0x2C68	0x0E5A      	MOVLW       90
0x2C6A	0x0101      	MOVLB       1
0x2C6C	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2C6E	0x0E00      	MOVLW       0
0x2C70	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2C72	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,114 :: 		delay_ms(100);
0x2C76	0x0E03      	MOVLW       3
0x2C78	0x6E0B      	MOVWF       R11, 0
0x2C7A	0x0E8A      	MOVLW       138
0x2C7C	0x6E0C      	MOVWF       R12, 0
0x2C7E	0x0E55      	MOVLW       85
0x2C80	0x6E0D      	MOVWF       R13, 0
L_main693:
0x2C82	0x2E0D      	DECFSZ      R13, 1, 0
0x2C84	0xD7FE      	BRA         L_main693
0x2C86	0x2E0C      	DECFSZ      R12, 1, 0
0x2C88	0xD7FC      	BRA         L_main693
0x2C8A	0x2E0B      	DECFSZ      R11, 1, 0
0x2C8C	0xD7FA      	BRA         L_main693
0x2C8E	0x0000      	NOP
0x2C90	0x0000      	NOP
;Main 7.0V.c,115 :: 		rotateByDegree(90);
0x2C92	0x0E5A      	MOVLW       90
0x2C94	0x0101      	MOVLB       1
0x2C96	0x6F96      	MOVWF       FARG_rotateByDegree_degree, 1
0x2C98	0x0E00      	MOVLW       0
0x2C9A	0x6F97      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x2C9C	0xF009ECE8  	CALL        _rotateByDegree, 0
;Main 7.0V.c,116 :: 		delay_ms(100);
0x2CA0	0x0E03      	MOVLW       3
0x2CA2	0x6E0B      	MOVWF       R11, 0
0x2CA4	0x0E8A      	MOVLW       138
0x2CA6	0x6E0C      	MOVWF       R12, 0
0x2CA8	0x0E55      	MOVLW       85
0x2CAA	0x6E0D      	MOVWF       R13, 0
L_main694:
0x2CAC	0x2E0D      	DECFSZ      R13, 1, 0
0x2CAE	0xD7FE      	BRA         L_main694
0x2CB0	0x2E0C      	DECFSZ      R12, 1, 0
0x2CB2	0xD7FC      	BRA         L_main694
0x2CB4	0x2E0B      	DECFSZ      R11, 1, 0
0x2CB6	0xD7FA      	BRA         L_main694
0x2CB8	0x0000      	NOP
0x2CBA	0x0000      	NOP
;Main 7.0V.c,117 :: 		delay_ms(1);
0x2CBC	0x0E07      	MOVLW       7
0x2CBE	0x6E0C      	MOVWF       R12, 0
0x2CC0	0x0E7D      	MOVLW       125
0x2CC2	0x6E0D      	MOVWF       R13, 0
L_main695:
0x2CC4	0x2E0D      	DECFSZ      R13, 1, 0
0x2CC6	0xD7FE      	BRA         L_main695
0x2CC8	0x2E0C      	DECFSZ      R12, 1, 0
0x2CCA	0xD7FC      	BRA         L_main695
;Main 7.0V.c,118 :: 		}
L_main692:
;Main 7.0V.c,119 :: 		delay_ms(1);
0x2CCC	0x0E07      	MOVLW       7
0x2CCE	0x6E0C      	MOVWF       R12, 0
0x2CD0	0x0E7D      	MOVLW       125
0x2CD2	0x6E0D      	MOVWF       R13, 0
L_main696:
0x2CD4	0x2E0D      	DECFSZ      R13, 1, 0
0x2CD6	0xD7FE      	BRA         L_main696
0x2CD8	0x2E0C      	DECFSZ      R12, 1, 0
0x2CDA	0xD7FC      	BRA         L_main696
;Main 7.0V.c,120 :: 		}
0x2CDC	0xD788      	BRA         L_main681
L_main682:
;Main 7.0V.c,122 :: 		stop();
0x2CDE	0xF007EC55  	CALL        _stop, 0
;Main 7.0V.c,125 :: 		}
0x2CE2	0xD7FF      	BRA         $+0
; end of _main
0x2E18	0xF015EE10  	LFSR        1, 21
0x2E1C	0x0E33      	MOVLW       51
0x2E1E	0x6E00      	MOVWF       R0 
0x2E20	0x0E02      	MOVLW       2
0x2E22	0x6E01      	MOVWF       R1 
0x2E24	0x0EE4      	MOVLW       228
0x2E26	0x6EF6      	MOVWF       4086 
0x2E28	0x0E2C      	MOVLW       44
0x2E2A	0x6EF7      	MOVWF       TBLPTRH 
0x2E2C	0x0E00      	MOVLW       0
0x2E2E	0x6EF8      	MOVWF       TBLPTRU 
0x2E30	0xF00BEC62  	CALL        5828, 0
0x2E34	0x0012      	RETURN      0
;Main 7.0V.c,0 :: ?ICS?lstr39_Main_327.0V
0x2CE4	0x7257 ;?ICS?lstr39_Main_327.0V+0
0x2CE6	0x6E6F ;?ICS?lstr39_Main_327.0V+2
0x2CE8	0x2067 ;?ICS?lstr39_Main_327.0V+4
0x2CEA	0x6944 ;?ICS?lstr39_Main_327.0V+6
0x2CEC	0x6572 ;?ICS?lstr39_Main_327.0V+8
0x2CEE	0x7463 ;?ICS?lstr39_Main_327.0V+10
0x2CF0	0x6F69 ;?ICS?lstr39_Main_327.0V+12
0x2CF2	0x206E ;?ICS?lstr39_Main_327.0V+14
0x2CF4	0x2121 ;?ICS?lstr39_Main_327.0V+16
0x2CF6	0x0021 ;?ICS?lstr39_Main_327.0V+18
; end of ?ICS?lstr39_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr40_Main_327.0V
0x2CF8	0x6F43 ;?ICS?lstr40_Main_327.0V+0
0x2CFA	0x7272 ;?ICS?lstr40_Main_327.0V+2
0x2CFC	0x6E65 ;?ICS?lstr40_Main_327.0V+4
0x2CFE	0x2074 ;?ICS?lstr40_Main_327.0V+6
0x2D00	0x6944 ;?ICS?lstr40_Main_327.0V+8
0x2D02	0x6572 ;?ICS?lstr40_Main_327.0V+10
0x2D04	0x7463 ;?ICS?lstr40_Main_327.0V+12
0x2D06	0x6F69 ;?ICS?lstr40_Main_327.0V+14
0x2D08	0x206E ;?ICS?lstr40_Main_327.0V+16
0x2D0A	0x2121 ;?ICS?lstr40_Main_327.0V+18
0x2D0C	0x0021 ;?ICS?lstr40_Main_327.0V+20
; end of ?ICS?lstr40_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr22_Main_327.0V
0x2D0E	0x3020 ;?ICS?lstr22_Main_327.0V+0
0x2D10	0x203B ;?ICS?lstr22_Main_327.0V+2
0x2D12	0x00 ;?ICS?lstr22_Main_327.0V+4
; end of ?ICS?lstr22_Main_327.0V
;Main 7.0V.c,0 :: ?ICS_DIRECTION
0x2D13	0x0000 ;?ICS_DIRECTION+0
; end of ?ICS_DIRECTION
;Main 7.0V.c,0 :: ?ICS?lstr45_Main_327.0V
0x2D15	0x6553 ;?ICS?lstr45_Main_327.0V+0
0x2D17	0x736E ;?ICS?lstr45_Main_327.0V+2
0x2D19	0x726F ;?ICS?lstr45_Main_327.0V+4
0x2D1B	0x2035 ;?ICS?lstr45_Main_327.0V+6
0x2D1D	0x7461 ;?ICS?lstr45_Main_327.0V+8
0x2D1F	0x4C20 ;?ICS?lstr45_Main_327.0V+10
0x2D21	0x5645 ;?ICS?lstr45_Main_327.0V+12
0x2D23	0x4C45 ;?ICS?lstr45_Main_327.0V+14
0x2D25	0x3220 ;?ICS?lstr45_Main_327.0V+16
0x2D27	0x0020 ;?ICS?lstr45_Main_327.0V+18
; end of ?ICS?lstr45_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr44_Main_327.0V
0x2D29	0x6553 ;?ICS?lstr44_Main_327.0V+0
0x2D2B	0x736E ;?ICS?lstr44_Main_327.0V+2
0x2D2D	0x726F ;?ICS?lstr44_Main_327.0V+4
0x2D2F	0x2035 ;?ICS?lstr44_Main_327.0V+6
0x2D31	0x7461 ;?ICS?lstr44_Main_327.0V+8
0x2D33	0x4C20 ;?ICS?lstr44_Main_327.0V+10
0x2D35	0x5645 ;?ICS?lstr44_Main_327.0V+12
0x2D37	0x4C45 ;?ICS?lstr44_Main_327.0V+14
0x2D39	0x3220 ;?ICS?lstr44_Main_327.0V+16
0x2D3B	0x0020 ;?ICS?lstr44_Main_327.0V+18
; end of ?ICS?lstr44_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr37_Main_327.0V
0x2D3D	0x6F67 ;?ICS?lstr37_Main_327.0V+0
0x2D3F	0x2074 ;?ICS?lstr37_Main_327.0V+2
0x2D41	0x2061 ;?ICS?lstr37_Main_327.0V+4
0x2D43	0x7261 ;?ICS?lstr37_Main_327.0V+6
0x2D45	0x6F72 ;?ICS?lstr37_Main_327.0V+8
0x2D47	0x2E77 ;?ICS?lstr37_Main_327.0V+10
0x2D49	0x202E ;?ICS?lstr37_Main_327.0V+12
0x2D4B	0x0020 ;?ICS?lstr37_Main_327.0V+14
; end of ?ICS?lstr37_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr32_Main_327.0V
0x2D4D	0x7453 ;?ICS?lstr32_Main_327.0V+0
0x2D4F	0x7261 ;?ICS?lstr32_Main_327.0V+2
0x2D51	0x6974 ;?ICS?lstr32_Main_327.0V+4
0x2D53	0x676E ;?ICS?lstr32_Main_327.0V+6
0x2D55	0x2E2E ;?ICS?lstr32_Main_327.0V+8
0x2D57	0x002E ;?ICS?lstr32_Main_327.0V+10
; end of ?ICS?lstr32_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr33_Main_327.0V
0x2D59	0x7453 ;?ICS?lstr33_Main_327.0V+0
0x2D5B	0x7261 ;?ICS?lstr33_Main_327.0V+2
0x2D5D	0x6974 ;?ICS?lstr33_Main_327.0V+4
0x2D5F	0x676E ;?ICS?lstr33_Main_327.0V+6
0x2D61	0x4220 ;?ICS?lstr33_Main_327.0V+8
0x2D63	0x6F6C ;?ICS?lstr33_Main_327.0V+10
0x2D65	0x6B63 ;?ICS?lstr33_Main_327.0V+12
0x2D67	0x2020 ;?ICS?lstr33_Main_327.0V+14
0x2D69	0x00 ;?ICS?lstr33_Main_327.0V+16
; end of ?ICS?lstr33_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr35_Main_327.0V
0x2D6A	0x2020 ;?ICS?lstr35_Main_327.0V+0
0x2D6C	0x6E45 ;?ICS?lstr35_Main_327.0V+2
0x2D6E	0x2064 ;?ICS?lstr35_Main_327.0V+4
0x2D70	0x666F ;?ICS?lstr35_Main_327.0V+6
0x2D72	0x4C20 ;?ICS?lstr35_Main_327.0V+8
0x2D74	0x7665 ;?ICS?lstr35_Main_327.0V+10
0x2D76	0x6C65 ;?ICS?lstr35_Main_327.0V+12
0x2D78	0x3120 ;?ICS?lstr35_Main_327.0V+14
0x2D7A	0x202E ;?ICS?lstr35_Main_327.0V+16
0x2D7C	0x654C ;?ICS?lstr35_Main_327.0V+18
0x2D7E	0x6576 ;?ICS?lstr35_Main_327.0V+20
0x2D80	0x206C ;?ICS?lstr35_Main_327.0V+22
0x2D82	0x2032 ;?ICS?lstr35_Main_327.0V+24
0x2D84	0x7453 ;?ICS?lstr35_Main_327.0V+26
0x2D86	0x7261 ;?ICS?lstr35_Main_327.0V+28
0x2D88	0x6974 ;?ICS?lstr35_Main_327.0V+30
0x2D8A	0x676E ;?ICS?lstr35_Main_327.0V+32
0x2D8C	0x2020 ;?ICS?lstr35_Main_327.0V+34
0x2D8E	0x00 ;?ICS?lstr35_Main_327.0V+36
; end of ?ICS?lstr35_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr36_Main_327.0V
0x2D8F	0x2020 ;?ICS?lstr36_Main_327.0V+0
0x2D91	0x6E45 ;?ICS?lstr36_Main_327.0V+2
0x2D93	0x2064 ;?ICS?lstr36_Main_327.0V+4
0x2D95	0x666F ;?ICS?lstr36_Main_327.0V+6
0x2D97	0x4C20 ;?ICS?lstr36_Main_327.0V+8
0x2D99	0x7665 ;?ICS?lstr36_Main_327.0V+10
0x2D9B	0x6C65 ;?ICS?lstr36_Main_327.0V+12
0x2D9D	0x3220 ;?ICS?lstr36_Main_327.0V+14
0x2D9F	0x202E ;?ICS?lstr36_Main_327.0V+16
0x2DA1	0x654C ;?ICS?lstr36_Main_327.0V+18
0x2DA3	0x6576 ;?ICS?lstr36_Main_327.0V+20
0x2DA5	0x206C ;?ICS?lstr36_Main_327.0V+22
0x2DA7	0x2033 ;?ICS?lstr36_Main_327.0V+24
0x2DA9	0x7453 ;?ICS?lstr36_Main_327.0V+26
0x2DAB	0x7261 ;?ICS?lstr36_Main_327.0V+28
0x2DAD	0x6974 ;?ICS?lstr36_Main_327.0V+30
0x2DAF	0x676E ;?ICS?lstr36_Main_327.0V+32
0x2DB1	0x2020 ;?ICS?lstr36_Main_327.0V+34
0x2DB3	0x00 ;?ICS?lstr36_Main_327.0V+36
; end of ?ICS?lstr36_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr34_Main_327.0V
0x2DB4	0x654C ;?ICS?lstr34_Main_327.0V+0
0x2DB6	0x6576 ;?ICS?lstr34_Main_327.0V+2
0x2DB8	0x206C ;?ICS?lstr34_Main_327.0V+4
0x2DBA	0x2031 ;?ICS?lstr34_Main_327.0V+6
0x2DBC	0x7453 ;?ICS?lstr34_Main_327.0V+8
0x2DBE	0x7261 ;?ICS?lstr34_Main_327.0V+10
0x2DC0	0x6974 ;?ICS?lstr34_Main_327.0V+12
0x2DC2	0x676E ;?ICS?lstr34_Main_327.0V+14
0x2DC4	0x2020 ;?ICS?lstr34_Main_327.0V+16
0x2DC6	0x00 ;?ICS?lstr34_Main_327.0V+18
; end of ?ICS?lstr34_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr9_Main_327.0V
0x2DC7	0x0031 ;?ICS?lstr9_Main_327.0V+0
; end of ?ICS?lstr9_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr8_Main_327.0V
0x2DC9	0x0030 ;?ICS?lstr8_Main_327.0V+0
; end of ?ICS?lstr8_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr7_Main_327.0V
0x2DCB	0x0031 ;?ICS?lstr7_Main_327.0V+0
; end of ?ICS?lstr7_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr12_Main_327.0V
0x2DCD	0x0030 ;?ICS?lstr12_Main_327.0V+0
; end of ?ICS?lstr12_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr11_Main_327.0V
0x2DCF	0x0031 ;?ICS?lstr11_Main_327.0V+0
; end of ?ICS?lstr11_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr10_Main_327.0V
0x2DD1	0x0030 ;?ICS?lstr10_Main_327.0V+0
; end of ?ICS?lstr10_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr6_Main_327.0V
0x2DD3	0x0030 ;?ICS?lstr6_Main_327.0V+0
; end of ?ICS?lstr6_Main_327.0V
;Main 7.0V.c,0 :: ?ICS_debugText
0x2DD5	0x0120 ;?ICS_debugText+0
; end of ?ICS_debugText
;Main 7.0V.c,0 :: ?ICS?lstr1_Main_327.0V
0x2DD7	0x6F43 ;?ICS?lstr1_Main_327.0V+0
0x2DD9	0x6E6E ;?ICS?lstr1_Main_327.0V+2
0x2DDB	0x6365 ;?ICS?lstr1_Main_327.0V+4
0x2DDD	0x6974 ;?ICS?lstr1_Main_327.0V+6
0x2DDF	0x6E6F ;?ICS?lstr1_Main_327.0V+8
0x2DE1	0x4520 ;?ICS?lstr1_Main_327.0V+10
0x2DE3	0x7473 ;?ICS?lstr1_Main_327.0V+12
0x2DE5	0x6261 ;?ICS?lstr1_Main_327.0V+14
0x2DE7	0x696C ;?ICS?lstr1_Main_327.0V+16
0x2DE9	0x6873 ;?ICS?lstr1_Main_327.0V+18
0x2DEB	0x6465 ;?ICS?lstr1_Main_327.0V+20
0x2DED	0x0021 ;?ICS?lstr1_Main_327.0V+22
; end of ?ICS?lstr1_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr2_Main_327.0V
0x2DEF	0x6F6D ;?ICS?lstr2_Main_327.0V+0
0x2DF1	0x6576 ;?ICS?lstr2_Main_327.0V+2
0x2DF3	0x6620 ;?ICS?lstr2_Main_327.0V+4
0x2DF5	0x726F ;?ICS?lstr2_Main_327.0V+6
0x2DF7	0x6177 ;?ICS?lstr2_Main_327.0V+8
0x2DF9	0x6472 ;?ICS?lstr2_Main_327.0V+10
0x2DFB	0x00 ;?ICS?lstr2_Main_327.0V+12
; end of ?ICS?lstr2_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr5_Main_327.0V
0x2DFC	0x0031 ;?ICS?lstr5_Main_327.0V+0
; end of ?ICS?lstr5_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr4_Main_327.0V
0x2DFE	0x0030 ;?ICS?lstr4_Main_327.0V+0
; end of ?ICS?lstr4_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr3_Main_327.0V
0x2E00	0x0031 ;?ICS?lstr3_Main_327.0V+0
; end of ?ICS?lstr3_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr13_Main_327.0V
0x2E02	0x0031 ;?ICS?lstr13_Main_327.0V+0
; end of ?ICS?lstr13_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr18_Main_327.0V
0x2E04	0x0030 ;?ICS?lstr18_Main_327.0V+0
; end of ?ICS?lstr18_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr17_Main_327.0V
0x2E06	0x0031 ;?ICS?lstr17_Main_327.0V+0
; end of ?ICS?lstr17_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr19_Main_327.0V
0x2E08	0x0031 ;?ICS?lstr19_Main_327.0V+0
; end of ?ICS?lstr19_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr21_Main_327.0V
0x2E0A	0x3120 ;?ICS?lstr21_Main_327.0V+0
0x2E0C	0x203B ;?ICS?lstr21_Main_327.0V+2
0x2E0E	0x00 ;?ICS?lstr21_Main_327.0V+4
; end of ?ICS?lstr21_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr20_Main_327.0V
0x2E0F	0x0030 ;?ICS?lstr20_Main_327.0V+0
; end of ?ICS?lstr20_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr14_Main_327.0V
0x2E11	0x0030 ;?ICS?lstr14_Main_327.0V+0
; end of ?ICS?lstr14_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr15_Main_327.0V
0x2E13	0x0031 ;?ICS?lstr15_Main_327.0V+0
; end of ?ICS?lstr15_Main_327.0V
;Main 7.0V.c,0 :: ?ICS?lstr16_Main_327.0V
0x2E15	0x0030 ;?ICS?lstr16_Main_327.0V+0
; end of ?ICS?lstr16_Main_327.0V
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [26]    _SETFUN32
0x0036      [14]    _RES032
0x0044      [80]    _Mul_16x16_U
0x0094       [8]    _FIXSIGN32
0x009C       [8]    _SETFDZ32
0x00A4     [108]    _PWM2_Set_Duty
0x0110      [24]    _SETFOV32
0x0128     [114]    _NRM3232
0x019A     [108]    _PWM1_Set_Duty
0x0206      [28]    _SETIOV3224
0x0222      [14]    _UART1_Write
0x0230      [52]    _UART1_Write_Text
0x0264      [12]    _motorRight_foward
0x0270      [40]    _Word2Double
0x0298      [12]    _motorLeft_foward
0x02A4       [6]    _motorRight_stop
0x02AA       [6]    _motorLeft_stop
0x02B0      [12]    _motorRight_reverse
0x02BC     [288]    _Mul_32x32_FP
0x03DC     [372]    _Div_32x32_FP
0x0550     [210]    _Double2Int
0x0622     [482]    _NRM4032
0x0804      [12]    _motorLeft_reverse
0x0810     [628]    _getDistanceSonar2
0x0A84    [1062]    _Add_32x32_FP
0x0EAA      [10]    _stop
0x0EB4      [14]    _sendText
0x0EC2      [26]    _moveForward
0x0EDC      [26]    _rotateClockwise
0x0EF6      [24]    _rotateAntiClockwise
0x0F0E      [22]    _moveStraightFast
0x0F24      [18]    _turnLeft
0x0F36       [8]    _PWM2_Init
0x0F3E       [8]    _PWM1_Init
0x0F46      [10]    _PWM2_Start
0x0F50      [88]    _UART1_Init
0x0FA8      [10]    _PWM1_Start
0x0FB2       [6]    _Sub_32x32_FP
0x0FB8      [66]    _Int2Double
0x0FFA      [18]    _turnRight
0x100C     [208]    _level2Aligning
0x10DC      [46]    _abs
0x110A      [56]    _isAllWhite
0x1142      [66]    _isPathClear
0x1184     [506]    _sendSensorStatus
0x137E      [56]    _isAllBlack
0x13B6      [26]    _reverse
0x13D0     [756]    _rotateByDegree
0x16C4      [16]    ___CC2DW
0x16D4     [106]    _configure
0x173E    [1662]    _lineFollowNormalWorked
0x1DBC     [182]    _level3Aligning
0x1E72     [436]    _goThroughObstaclesJay
0x2026    [1678]    _lineFollowNormalWorkedForLast
0x26B4     [128]    _setPID
0x2734      [24]    _moveStraightSlow
0x274C     [768]    _lineFollowPID
0x2A4C     [664]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_xCnt_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0006       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_yCnt_L0
0x0007       [2]    __Lib_TFT__TFT_Write_Char_Return_Pos_y_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x0009       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_mask_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [20]    ?lstr39_Main_327.0V
0x0029      [22]    ?lstr40_Main_327.0V
0x003F       [5]    ?lstr22_Main_327.0V
0x0044       [2]    _DIRECTION
0x0046      [20]    ?lstr45_Main_327.0V
0x005A      [20]    ?lstr44_Main_327.0V
0x006E      [16]    ?lstr37_Main_327.0V
0x007E      [12]    ?lstr32_Main_327.0V
0x008A      [17]    ?lstr33_Main_327.0V
0x009B      [37]    ?lstr35_Main_327.0V
0x00C0      [37]    ?lstr36_Main_327.0V
0x00E5      [19]    ?lstr34_Main_327.0V
0x00F8       [2]    ?lstr9_Main_327.0V
0x00FA       [2]    ?lstr8_Main_327.0V
0x00FC       [2]    ?lstr7_Main_327.0V
0x00FE       [2]    ?lstr12_Main_327.0V
0x0100       [2]    ?lstr11_Main_327.0V
0x0102       [2]    ?lstr10_Main_327.0V
0x0104       [2]    ?lstr6_Main_327.0V
0x0106       [2]    _debugText
0x0108      [24]    ?lstr1_Main_327.0V
0x0120      [13]    ?lstr2_Main_327.0V
0x012D       [2]    ?lstr5_Main_327.0V
0x012F       [2]    ?lstr4_Main_327.0V
0x0131       [2]    ?lstr3_Main_327.0V
0x0133       [2]    ?lstr13_Main_327.0V
0x0135       [2]    ?lstr18_Main_327.0V
0x0137       [2]    ?lstr17_Main_327.0V
0x0139       [2]    ?lstr19_Main_327.0V
0x013B       [5]    ?lstr21_Main_327.0V
0x0140       [2]    ?lstr20_Main_327.0V
0x0142       [2]    ?lstr14_Main_327.0V
0x0144       [2]    ?lstr15_Main_327.0V
0x0146       [2]    ?lstr16_Main_327.0V
0x0148       [2]    _MID_PWM
0x014A       [2]    _FAST_PWM
0x014C       [2]    _TEST_RPM
0x014E       [2]    _SLOW_PWM
0x0150       [4]    _Kp
0x0154       [4]    _totalError
0x0158       [2]    _previousDeviation
0x015A       [4]    _Ki
0x015E       [4]    _Kd
0x0162       [2]    _LEVEL2_STATE
0x0164       [2]    _MID_RPM
0x0166       [2]    _MAX_RPM
0x0168       [2]    _MIN_RPM
0x016A       [2]    _deviation
0x016C       [2]    _LEVEL3_STATE
0x016E       [4]    _correction
0x0172       [4]    _UART_Rdy_Ptr
0x0176       [4]    _UART_Tx_Idle_Ptr
0x017A       [4]    _UART_Wr_Ptr
0x017E       [4]    _UART_Rd_Ptr
0x0182       [2]    _LEVEL1_STATE
0x0184       [2]    _PID_LeftRPM
0x0186       [2]    _PID_RightRPM
0x0188       [2]    _LEVEL
0x018A       [2]    goThroughObstaclesJay_ROTATION_ANGLE_L0
0x018A      [12]    FLOC__lineFollowPID
0x0196       [4]    FARG_PWM2_Init_PWM_Freq
0x0196       [4]    FARG_PWM1_Init_PWM_Freq
0x0196       [2]    FARG_reverse_pwmLeft
0x0196       [2]    FARG_turnRight_pwmLeft
0x0196       [2]    FARG_turnLeft_pwmRight
0x0196       [2]    FARG_abs_a
0x0196       [2]    FARG_rotateByDegree_degree
0x0198       [2]    FARG_reverse_pwmRight
0x019A       [2]    FARG_rotateClockwise_pwm
0x019A       [2]    FARG_sendText_aText
0x019A       [2]    FARG_rotateAntiClockwise_pwm
0x019A       [1]    FARG_getDistanceSonar2_Sensor
0x019A       [2]    FARG_moveForward_pwmLeft
0x019B       [2]    getDistanceSonar2_L_L0
0x019C       [2]    FARG_moveForward_pwmRight
0x019D       [2]    getDistanceSonar2_H_L0
0x019F       [2]    FARG_motorLeft_reverse_pwm
0x019F       [2]    FARG_UART1_Write_Text_uart_text
0x019F       [2]    FARG_motorRight_reverse_pwm
0x019F       [2]    FARG_motorLeft_foward_pwm
0x019F       [2]    FARG_motorRight_foward_pwm
0x01A1       [1]    UART1_Write_Text_data__L0
0x01A2       [1]    UART1_Write_Text_counter_L0
0x01A3       [1]    FARG_PWM2_Set_Duty_new_duty
0x01A3       [1]    FARG_PWM1_Set_Duty_new_duty
0x01A3       [1]    FARG_UART1_Write_data_
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA3_bit
0x0F80       [1]    PORTA
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB5_bit
0x0F81       [1]    PORTB
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC2_bit
0x0F82       [1]    PORTC
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD2_bit
0x0F83       [1]    PORTD
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE2_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE0_bit
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA6_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA2_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB7_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC1_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD7_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE0_bit
0x0F8D       [0]    LATE1_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC3_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD4_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [1]    TRISE
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    IBF_bit
0x0F96       [0]    OBF_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [1]    PIE1
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [1]    PIR1
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [1]    IPR1
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    RD_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    WRERR_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    RCD8_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RC8_9_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    RD16_T3CON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    ADCS2_bit
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG0_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    ADCS1_bit
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    GCEN_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    SSPEN_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    P_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    S_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    R_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    RD16_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    RI_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL1_bit
0x0FD3       [0]    SCS_bit
0x0FD3       [1]    OSCCON
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    Z_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    N_bit
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1PTR
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0PTR
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2IP_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIE_bit
0x0FF2       [1]    INTCON1
0x0FF2       [0]    GIEH_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU0_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [1]    STKPTR
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2CE4      [20]    ?ICS?lstr39_Main_327.0V
0x2CF8      [22]    ?ICS?lstr40_Main_327.0V
0x2D0E       [5]    ?ICS?lstr22_Main_327.0V
0x2D13       [2]    ?ICS_DIRECTION
0x2D15      [20]    ?ICS?lstr45_Main_327.0V
0x2D29      [20]    ?ICS?lstr44_Main_327.0V
0x2D3D      [16]    ?ICS?lstr37_Main_327.0V
0x2D4D      [12]    ?ICS?lstr32_Main_327.0V
0x2D59      [17]    ?ICS?lstr33_Main_327.0V
0x2D6A      [37]    ?ICS?lstr35_Main_327.0V
0x2D8F      [37]    ?ICS?lstr36_Main_327.0V
0x2DB4      [19]    ?ICS?lstr34_Main_327.0V
0x2DC7       [2]    ?ICS?lstr9_Main_327.0V
0x2DC9       [2]    ?ICS?lstr8_Main_327.0V
0x2DCB       [2]    ?ICS?lstr7_Main_327.0V
0x2DCD       [2]    ?ICS?lstr12_Main_327.0V
0x2DCF       [2]    ?ICS?lstr11_Main_327.0V
0x2DD1       [2]    ?ICS?lstr10_Main_327.0V
0x2DD3       [2]    ?ICS?lstr6_Main_327.0V
0x2DD5       [2]    ?ICS_debugText
0x2DD7      [24]    ?ICS?lstr1_Main_327.0V
0x2DEF      [13]    ?ICS?lstr2_Main_327.0V
0x2DFC       [2]    ?ICS?lstr5_Main_327.0V
0x2DFE       [2]    ?ICS?lstr4_Main_327.0V
0x2E00       [2]    ?ICS?lstr3_Main_327.0V
0x2E02       [2]    ?ICS?lstr13_Main_327.0V
0x2E04       [2]    ?ICS?lstr18_Main_327.0V
0x2E06       [2]    ?ICS?lstr17_Main_327.0V
0x2E08       [2]    ?ICS?lstr19_Main_327.0V
0x2E0A       [5]    ?ICS?lstr21_Main_327.0V
0x2E0F       [2]    ?ICS?lstr20_Main_327.0V
0x2E11       [2]    ?ICS?lstr14_Main_327.0V
0x2E13       [2]    ?ICS?lstr15_Main_327.0V
0x2E15       [2]    ?ICS?lstr16_Main_327.0V
//** Label List: ** 
//----------------------------------------------
  L_isAllBlack0
  L_isAllBlack1
  L_isAllBlack2
  L_isAllBlack3
  L_isAllWhite4
  L_isAllWhite5
  L_isAllWhite6
  L_isAllWhite7
  L_rotateByDegree8
  L_rotateByDegree9
  L_rotateByDegree10
  L_rotateByDegree11
  L_rotateByDegree12
  L_rotateByDegree13
  L_rotateByDegree14
  L_rotateByDegree15
  L_rotateByDegree16
  L_rotateByDegree17
  L_rotateByDegree18
  L_rotateByDegree19
  L_rotateByDegree20
  L_rotateByDegree21
  L_rotateByDegree22
  L_rotateByDegree23
  L_rotateByDegree24
  L_rotateByDegree25
  L_rotateByDegree26
  L_rotateByDegree27
  L_rotateByDegree28
  L_rotateByDegree29
  L_rotateByDegree30
  L_rotateByDegree31
  L_rotateByDegree32
  L_rotateByDegree33
  L_rotateByDegree34
  L_rotateByDegree35
  L_rotateByDegree36
  L_rotateByDegree37
  L_rotateByDegree38
  L_rotateByDegree39
  L_rotateByDegree40
  L_rotateByDegree41
  L_rotateByDegree42
  L_rotateByDegree43
  L_rotateByDegree44
  L_testMotion45
  L_testMotion46
  L_testMotion47
  L_sendSensorStatus48
  L_sendSensorStatus49
  L_sendSensorStatus50
  L_sendSensorStatus51
  L_sendSensorStatus52
  L_sendSensorStatus53
  L_sendSensorStatus54
  L_sendSensorStatus55
  L_sendSensorStatus56
  L_sendSensorStatus57
  L_sendSensorStatus58
  L_sendSensorStatus59
  L_sendSensorStatus60
  L_sendSensorStatus61
  L_sendSensorStatus62
  L_sendSensorStatus63
  L_sendSensorStatus64
  L_sendSensorStatus65
  L_sendSensorStatus66
  L_sendSensorStatus67
  L_sendSensorStatus68
  L_sendSensorStatus69
  L_sendSensorStatus70
  L_sendSensorStatus71
  L_sendSensorStatus72
  L_sendSensorStatus73
  L_sendSensorStatus74
  L_sendSensorStatus75
  L_sendSensorStatus76
  L_sendSensorStatus77
  L_testPIC78
  L_testPIC79
  L_testPIC80
  L_testPIC81
  L_testPIC82
  L_testPIC83
  L_testPIC84
  L_lineFollowPID85
  L_lineFollowPID86
  L_lineFollowPID87
  L_lineFollowPID88
  L_lineFollowPID89
  L_lineFollowPID90
  L_lineFollowPID91
  L_lineFollowPID92
  L_lineFollowPID93
  L_lineFollowPID94
  L_lineFollowPID95
  L_lineFollowPID96
  L_lineFollowPID97
  L_lineFollowPID98
  L_lineFollowPID99
  L_lineFollowPID100
  L_lineFollowPID101
  L_lineFollowPID102
  L_lineFollowPID103
  L_lineFollowPID104
  L_lineFollowPID105
  L_lineFollowPID106
  L_lineFollowPID107
  L_lineFollowPID108
  L_lineFollowPID109
  L_lineFollowPID110
  L_lineFollowPID111
  L_lineFollowPID112
  L_lineFollowPID113
  L_lineFollowPID114
  L_lineFollowPID115
  L_lineFollowPID116
  L_lineFollowPID117
  L_lineFollowPID118
  L_lineFollowPID119
  L_lineFollowPID120
  L_lineFollowNormalWorked121
  L_lineFollowNormalWorked122
  L_lineFollowNormalWorked123
  L_lineFollowNormalWorked124
  L_lineFollowNormalWorked125
  L_lineFollowNormalWorked126
  L_lineFollowNormalWorked127
  L_lineFollowNormalWorked128
  L_lineFollowNormalWorked129
  L_lineFollowNormalWorked130
  L_lineFollowNormalWorked131
  L_lineFollowNormalWorked132
  L_lineFollowNormalWorked133
  L_lineFollowNormalWorked134
  L_lineFollowNormalWorked135
  L_lineFollowNormalWorked136
  L_lineFollowNormalWorked137
  L_lineFollowNormalWorked138
  L_lineFollowNormalWorked139
  L_lineFollowNormalWorked140
  L_lineFollowNormalWorked141
  L_lineFollowNormalWorked142
  L_lineFollowNormalWorked143
  L_lineFollowNormalWorked144
  L_lineFollowNormalWorked145
  L_lineFollowNormalWorked146
  L_lineFollowNormalWorked147
  L_lineFollowNormalWorked148
  L_lineFollowNormalWorked149
  L_lineFollowNormalWorked150
  L_lineFollowNormalWorked151
  L_lineFollowNormalWorked152
  L_lineFollowNormalWorked153
  L_lineFollowNormalWorked154
  L_lineFollowNormalWorked155
  L_lineFollowNormalWorked156
  L_lineFollowNormalWorked157
  L_lineFollowNormalWorked158
  L_lineFollowNormalWorked159
  L_lineFollowNormalWorked160
  L_lineFollowNormalWorked161
  L_lineFollowNormalWorked162
  L_lineFollowNormalWorked163
  L_lineFollowNormalWorked164
  L_lineFollowNormalWorked165
  L_lineFollowNormalWorked166
  L_lineFollowNormalWorked167
  L_lineFollowNormalWorked168
  L_lineFollowNormalWorked169
  L_lineFollowNormalWorked170
  L_lineFollowNormalWorked171
  L_lineFollowNormalWorked172
  L_lineFollowNormalWorked173
  L_lineFollowNormalWorked174
  L_lineFollowNormalWorked175
  L_lineFollowNormalWorked176
  L_lineFollowNormalWorked177
  L_lineFollowNormalWorked178
  L_lineFollowNormalWorked179
  L_lineFollowNormalWorked180
  L_lineFollowNormalWorked181
  L_lineFollowNormalWorked182
  L_lineFollowNormalWorked183
  L_lineFollowNormalWorked184
  L_lineFollowNormalWorked185
  L_lineFollowNormalWorked186
  L_lineFollowNormalWorked187
  L_lineFollowNormalWorked188
  L_lineFollowNormalWorked189
  L_lineFollowNormalWorked190
  L_lineFollowNormalWorked191
  L_lineFollowNormalWorked192
  L_lineFollowNormalWorked193
  L_lineFollowNormalWorked194
  L_lineFollowNormalWorked195
  L_lineFollowNormalWorked196
  L_lineFollowNormalWorked197
  L_lineFollowNormalWorked198
  L_lineFollowNormalWorked199
  L_lineFollowNormalWorked200
  L_lineFollowNormalWorked201
  L_lineFollowNormalWorked202
  L_lineFollowNormalWorked203
  L_lineFollowNormalWorked204
  L_lineFollowNormalWorked205
  L_lineFollowNormalWorked206
  L_lineFollowNormalWorked207
  L_lineFollowNormalWorked208
  L_lineFollowNormalWorked209
  L_lineFollowNormalWorked210
  L_lineFollowNormalWorked211
  L_lineFollowNormalWorked212
  L_lineFollowNormalWorked213
  L_lineFollowNormalWorked214
  L_lineFollowNormalWorked215
  L_lineFollowNormalWorked216
  L_lineFollowNormalWorked217
  L_lineFollowNormalWorked218
  L_lineFollowNormalWorked219
  L_lineFollowNormalWorked220
  L_lineFollowNormalWorked221
  L_lineFollowNormalWorked222
  L_lineFollowNormalWorked223
  L_lineFollowNormalWorked224
  L_lineFollowNormalWorked225
  L_lineFollowNormalWorked226
  L_lineFollowNormalWorked227
  L_lineFollowNormalWorked228
  L_lineFollowNormalWorked229
  L_lineFollowNormalWorked230
  L_lineFollowNormalWorked231
  L_lineFollowNormalWorked232
  L_lineFollowNormalWorked233
  L_lineFollowNormalWorked234
  L_lineFollowNormalWorked235
  L_lineFollowNormalWorked236
  L_lineFollowNormalWorked237
  L_lineFollowNormalWorked238
  L_lineFollowNormalWorked239
  L_lineFollowNormalWorked240
  L_lineFollowNormalWorked241
  L_lineFollowNormalWorked242
  L_lineFollowNormalWorked243
  L_lineFollowNormalWorked244
  L_lineFollowNormalWorked245
  L_lineFollowNormalWorked246
  L_lineFollowNormalWorked247
  L_lineFollowNormalWorked248
  L_lineFollowNormalWorked249
  L_lineFollowNormalWorked250
  L_lineFollowNormalWorked251
  L_lineFollowNormalWorked252
  L_lineFollowNormalWorked253
  L_lineFollowNormalWorked254
  L_lineFollowNormalWorked255
  L_lineFollowNormalWorked256
  L_lineFollowNormalWorked257
  L_lineFollowNormalWorked258
  L_lineFollowNormalWorked259
  L_lineFollowNormalWorked260
  L_lineFollowNormalWorked261
  L_lineFollowNormalWorked262
  L_lineFollowNormalWorked263
  L_lineFollowNormalWorked264
  L_lineFollowNormalWorked265
  L_lineFollowNormalWorked266
  L_lineFollowNormalWorked267
  L_lineFollowNormalWorked268
  L_lineFollowNormalWorked269
  L_lineFollowNormalWorked270
  L_lineFollowNormalWorked271
  L_lineFollowNormalWorked272
  L_lineFollowNormalWorked273
  L_lineFollowNormalWorked274
  L_lineFollowNormalWorked275
  L_lineFollowNormalWorked276
  L_lineFollowNormalWorked277
  L_lineFollowNormalWorked278
  L_lineFollowNormalWorked279
  L_lineFollowNormalWorked280
  L_lineFollowNormalWorked281
  L_lineFollowNormalWorked282
  L_lineFollowNormalWorked283
  L_lineFollowNormalWorked284
  L_lineFollowNormalWorkedForLast285
  L_lineFollowNormalWorkedForLast286
  L_lineFollowNormalWorkedForLast287
  L_lineFollowNormalWorkedForLast288
  L_lineFollowNormalWorkedForLast289
  L_lineFollowNormalWorkedForLast290
  L_lineFollowNormalWorkedForLast291
  L_lineFollowNormalWorkedForLast292
  L_lineFollowNormalWorkedForLast293
  L_lineFollowNormalWorkedForLast294
  L_lineFollowNormalWorkedForLast295
  L_lineFollowNormalWorkedForLast296
  L_lineFollowNormalWorkedForLast297
  L_lineFollowNormalWorkedForLast298
  L_lineFollowNormalWorkedForLast299
  L_lineFollowNormalWorkedForLast300
  L_lineFollowNormalWorkedForLast301
  L_lineFollowNormalWorkedForLast302
  L_lineFollowNormalWorkedForLast303
  L_lineFollowNormalWorkedForLast304
  L_lineFollowNormalWorkedForLast305
  L_lineFollowNormalWorkedForLast306
  L_lineFollowNormalWorkedForLast307
  L_lineFollowNormalWorkedForLast308
  L_lineFollowNormalWorkedForLast309
  L_lineFollowNormalWorkedForLast310
  L_lineFollowNormalWorkedForLast311
  L_lineFollowNormalWorkedForLast312
  L_lineFollowNormalWorkedForLast313
  L_lineFollowNormalWorkedForLast314
  L_lineFollowNormalWorkedForLast315
  L_lineFollowNormalWorkedForLast316
  L_lineFollowNormalWorkedForLast317
  L_lineFollowNormalWorkedForLast318
  L_lineFollowNormalWorkedForLast319
  L_lineFollowNormalWorkedForLast320
  L_lineFollowNormalWorkedForLast321
  L_lineFollowNormalWorkedForLast322
  L_lineFollowNormalWorkedForLast323
  L_lineFollowNormalWorkedForLast324
  L_lineFollowNormalWorkedForLast325
  L_lineFollowNormalWorkedForLast326
  L_lineFollowNormalWorkedForLast327
  L_lineFollowNormalWorkedForLast328
  L_lineFollowNormalWorkedForLast329
  L_lineFollowNormalWorkedForLast330
  L_lineFollowNormalWorkedForLast331
  L_lineFollowNormalWorkedForLast332
  L_lineFollowNormalWorkedForLast333
  L_lineFollowNormalWorkedForLast334
  L_lineFollowNormalWorkedForLast335
  L_lineFollowNormalWorkedForLast336
  L_lineFollowNormalWorkedForLast337
  L_lineFollowNormalWorkedForLast338
  L_lineFollowNormalWorkedForLast339
  L_lineFollowNormalWorkedForLast340
  L_lineFollowNormalWorkedForLast341
  L_lineFollowNormalWorkedForLast342
  L_lineFollowNormalWorkedForLast343
  L_lineFollowNormalWorkedForLast344
  L_lineFollowNormalWorkedForLast345
  L_lineFollowNormalWorkedForLast346
  L_lineFollowNormalWorkedForLast347
  L_lineFollowNormalWorkedForLast348
  L_lineFollowNormalWorkedForLast349
  L_lineFollowNormalWorkedForLast350
  L_lineFollowNormalWorkedForLast351
  L_lineFollowNormalWorkedForLast352
  L_lineFollowNormalWorkedForLast353
  L_lineFollowNormalWorkedForLast354
  L_lineFollowNormalWorkedForLast355
  L_lineFollowNormalWorkedForLast356
  L_lineFollowNormalWorkedForLast357
  L_lineFollowNormalWorkedForLast358
  L_lineFollowNormalWorkedForLast359
  L_lineFollowNormalWorkedForLast360
  L_lineFollowNormalWorkedForLast361
  L_lineFollowNormalWorkedForLast362
  L_lineFollowNormalWorkedForLast363
  L_lineFollowNormalWorkedForLast364
  L_lineFollowNormalWorkedForLast365
  L_lineFollowNormalWorkedForLast366
  L_lineFollowNormalWorkedForLast367
  L_lineFollowNormalWorkedForLast368
  L_lineFollowNormalWorkedForLast369
  L_lineFollowNormalWorkedForLast370
  L_lineFollowNormalWorkedForLast371
  L_lineFollowNormalWorkedForLast372
  L_lineFollowNormalWorkedForLast373
  L_lineFollowNormalWorkedForLast374
  L_lineFollowNormalWorkedForLast375
  L_lineFollowNormalWorkedForLast376
  L_lineFollowNormalWorkedForLast377
  L_lineFollowNormalWorkedForLast378
  L_lineFollowNormalWorkedForLast379
  L_lineFollowNormalWorkedForLast380
  L_lineFollowNormalWorkedForLast381
  L_lineFollowNormalWorkedForLast382
  L_lineFollowNormalWorkedForLast383
  L_lineFollowNormalWorkedForLast384
  L_lineFollowNormalWorkedForLast385
  L_lineFollowNormalWorkedForLast386
  L_lineFollowNormalWorkedForLast387
  L_lineFollowNormalWorkedForLast388
  L_lineFollowNormalWorkedForLast389
  L_lineFollowNormalWorkedForLast390
  L_lineFollowNormalWorkedForLast391
  L_lineFollowNormalWorkedForLast392
  L_lineFollowNormalWorkedForLast393
  L_lineFollowNormalWorkedForLast394
  L_lineFollowNormalWorkedForLast395
  L_lineFollowNormalWorkedForLast396
  L_lineFollowNormalWorkedForLast397
  L_lineFollowNormalWorkedForLast398
  L_lineFollowNormalWorkedForLast399
  L_lineFollowNormalWorkedForLast400
  L_lineFollowNormalWorkedForLast401
  L_lineFollowNormalWorkedForLast402
  L_lineFollowNormalWorkedForLast403
  L_lineFollowNormalWorkedForLast404
  L_lineFollowNormalWorkedForLast405
  L_lineFollowNormalWorkedForLast406
  L_lineFollowNormalWorkedForLast407
  L_lineFollowNormalWorkedForLast408
  L_lineFollowNormalWorkedForLast409
  L_lineFollowNormalWorkedForLast410
  L_lineFollowNormalWorkedForLast411
  L_lineFollowNormalWorkedForLast412
  L_lineFollowNormalWorkedForLast413
  L_lineFollowNormalWorkedForLast414
  L_lineFollowNormalWorkedForLast415
  L_lineFollowNormalWorkedForLast416
  L_lineFollowNormalWorkedForLast417
  L_lineFollowNormalWorkedForLast418
  L_lineFollowNormalWorkedForLast419
  L_lineFollowNormalWorkedForLast420
  L_lineFollowNormalWorkedForLast421
  L_lineFollowNormalWorkedForLast422
  L_lineFollowNormalWorkedForLast423
  L_lineFollowNormalWorkedForLast424
  L_lineFollowNormalWorkedForLast425
  L_lineFollowNormalWorkedForLast426
  L_lineFollowNormalWorkedForLast427
  L_lineFollowNormalWorkedForLast428
  L_lineFollowNormalWorkedForLast429
  L_lineFollowNormalWorkedForLast430
  L_lineFollowNormalWorkedForLast431
  L_lineFollowNormalWorkedForLast432
  L_lineFollowNormalWorkedForLast433
  L_lineFollowNormalWorkedForLast434
  L_lineFollowNormalWorkedForLast435
  L_lineFollowNormalWorkedForLast436
  L_lineFollowNormalWorkedForLast437
  L_lineFollowNormalWorkedForLast438
  L_lineFollowNormalWorkedForLast439
  L_lineFollowNormalWorkedForLast440
  L_lineFollowNormalWorkedForLast441
  L_lineFollowNormalWorkedForLast442
  L_lineFollowNormalWorkedForLast443
  L_lineFollowNormalWorkedForLast444
  L_lineFollowNormalWorkedForLast445
  L_lineFollowNormalWorkedForLast446
  L_lineFollowNormalWorkedForLast447
  L_lineFollowNormalWorkedForLast448
  L_isOnThePath449
  L_isOnThePath450
  L_isOnThePath451
  L_isOnThePath452
  L_isOnThePath453
  L_isOnThePath454
  L_isOnThePath455
  L_isOnThePath456
  L_isOnThePath457
  L_isOnThePath458
  L_isOnThePath459
  L_isOnThePath460
  L_isOnThePath461
  L_isOnThePath462
  L_lineFollow463
  L_lineFollow464
  L_lineFollow465
  L_lineFollow466
  L_lineFollow467
  L_lineFollow468
  L_lineFollow469
  L_lineFollow470
  L_lineFollow471
  L_lineFollow472
  L_lineFollow473
  L_lineFollow474
  L_lineFollow475
  L_lineFollow476
  L_lineFollow477
  L_lineFollow478
  L_lineFollow479
  L_lineFollow480
  L_lineFollow481
  L_lineFollow482
  L_lineFollow483
  L_lineFollow484
  L_lineFollow485
  L_lineFollowNormal486
  L_lineFollowNormal487
  L_lineFollowNormal488
  L_lineFollowNormal489
  L_lineFollowNormal490
  L_lineFollowNormal491
  L_lineFollowNormal492
  L_lineFollowNormal493
  L_lineFollowNormal494
  L_lineFollowNormal495
  L_lineFollowNormal496
  L_lineFollowNormal497
  L_lineFollowNormal498
  L_lineFollowNormal499
  L_lineFollowNormal500
  L_lineFollowNormal501
  L_lineFollowNormal502
  L_lineFollowNormal503
  L_lineFollowNormal504
  L_lineFollowNormal505
  L_lineFollowNormal506
  L_lineFollowNormal507
  L_lineFollowNormal508
  L_lineFollowNormal509
  L_lineFollowNormal510
  L_lineFollowNormal511
  L_lineFollowNormal512
  L_lineFollowNormal513
  L_lineFollowNormal514
  L_lineFollowNormal515
  L_lineFollowNormal516
  L_lineFollowNormal517
  L_lineFollowNormal518
  L_lineFollowNormal519
  L_lineFollowNormal520
  L_lineFollowNormal521
  L_lineFollowNormal522
  L_lineFollowNormal523
  L_lineFollowNormal524
  L_lineFollowNormal525
  L_lineFollowNormal526
  L_lineFollowNormal527
  L_lineFollowNormal528
  L_lineFollowNormal529
  L_lineFollowNormal530
  L_lineFollowNormal531
  L_lineFollowNormal532
  L_lineFollowNormal533
  L_lineFollowNormal534
  L_lineFollowNormal535
  L_lineFollowNormal536
  L_lineFollowNormal537
  L_lineFollowNormal538
  L_lineFollowNormal539
  L_lineFollowNormal540
  L_lineFollowNormal541
  L_lineFollowNormal542
  L_getDistanceIR_GP2D120543
  L_getDistanceIR_GP2D120544
  L_getDistanceIR_GP2D120545
  L_getDistanceIR_GP2D120546
  L_getDistanceIR_GP2D120547
  L_getDistanceIR_GP2D120548
  L_getDistanceIR_GP2D120549
  L_getDistanceIR_GP2D120550
  L_getDistanceIR_GP2D120551
  L_getDistanceIR_GP2D120552
  L_getDistanceIR_GP2D120553
  L_getDistanceIR_GP2D120554
  L_getDistanceIR_GP2D120555
  L_getDistanceIR_GP2D120556
  L_getDistanceIR_GP2D120557
  L_getDistanceIR_GP2D120558
  L_getDistanceIR_GP2D120559
  L_getDistanceIR_GP2D120560
  L_getDistanceIR_GP2D120561
  L_getDistanceIR_GP2D120562
  L_getDistanceIR_GP2D120563
  L_getDistanceIR_GP2D120564
  L_getDistanceIR_GP2D120565
  L_getDistanceIR_GP2D120566
  L_getDistanceIR_GP2D120567
  L_getDistanceIR_GP2D120568
  L_getDistanceIR_GP2D120569
  L_getDistanceIR_GP2D120570
  L_getDistanceIR_GP2D120571
  L_getDistanceIR_GP2D120572
  L_getDistanceIR_GP2D120573
  L_getDistanceIR_GP2D120574
  L_getDistanceIR_GP2D120575
  L_getDistanceIR_GP2D120576
  L_getDistanceIR_GP2D120577
  L_getDistanceIR_GP2D120578
  L_getDistanceIR_GP2D120579
  L_getDistanceIR_GP2D120580
  L_getDistanceIR_GP2D120581
  L_getDistanceIR_GP2D120582
  L_getDistanceIR_GP2D120583
  L_getDistanceIR_GP2D120584
  L_getDistanceIR_GP2D120585
  L_getDistanceIR_GP2D120586
  L_getDistanceIR_GP2D120587
  L_getDistanceIR_GP2D120588
  L_getDistanceIR_GP2D120589
  L_getDistanceIR_GP2D120590
  L_getDistanceIR_GP2D120591
  L_getDistanceIR_GP2D120592
  L_getDistanceIR_GP2D120593
  L_getDistanceIR_GP2D120594
  L_getDistanceIR_GP2D120595
  L_getDistanceIR_GP2D120596
  L_getDistanceIR_GP2D120597
  L_getDistanceIR_GP2D120598
  L_getDistanceIR_GP2D120599
  L_getDistanceIR_GP2D120600
  L_getDistanceIR_GP2D120601
  L_getDistanceIR_GP2D120602
  L_getDistanceIR_GP2D120603
  L_getDistanceIR_GP2D120604
  L_getDistanceIR_GP2D120605
  L_getDistanceIR_GP2D120606
  L_getDistanceIR_GP2D120607
  L_getDistanceIR_GP2D120608
  L_getDistanceIR_GP2D120609
  L_getDistanceIR_GP2D120610
  L_getDistanceIR_GP2D120611
  L_getDistanceIR_GP2D120612
  L_getDistanceIR_GP2D120613
  L_getDistanceIR_GP2D120614
  L_getDistanceIR_GP2D120615
  L_getDistanceIR_GP2D120616
  L_isRightSafe617
  L_isRightSafe618
  L_isRightSafe619
  L_isMiddleSafe620
  L_isMiddleSafe621
  L_isMiddleSafe622
  L_isLeftSafe623
  L_isLeftSafe624
  L_isLeftSafe625
  L_getSonarDistance626
  L_getSonarDistance627
  L_getSonarDistance628
  L_getSonarDistance629
  L_getSonarDistance630
  L_getSonarDistance631
  L_getDistanceSonar2632
  L_getDistanceSonar2633
  L_getDistanceSonar2634
  L_getDistanceSonar2635
  L_getDistanceSonar2636
  L_getDistanceSonar2637
  L_getDistanceSonar2638
  L_getDistanceSonar2639
  L_getDistanceSonar2640
  L_getDistanceSonar2641
  L_getDistanceSonar2642
  L_getDistanceSonar2643
  L_getDistanceSonar2644
  L_getDistanceSonar2645
  L_getDistanceSonar2646
  L_getDistanceSonar2647
  L_getDistanceSonar2648
  L_getDistanceSonar2649
  L_getDistanceSonar2650
  L_getDistanceSonar2651
  L_getDistanceSonar2652
  L_getDistanceSonar2653
  L_getDistanceSonar2654
  L_getDistanceSonar2655
  L_getDistanceSonar2656
  L_getDistanceSonar2657
  L_getDistanceSonar2658
  L_getDistanceSonar2659
  L_getDistanceSonar2660
  L_main661
  L_main662
  L_main663
  L_main664
  L_main665
  L_main666
  L_main667
  L_main668
  L_main669
  L_main670
  L_main671
  L_main672
  L_main673
  L_main674
  L_main675
  L_main676
  L_main677
  L_main678
  L_main679
  L_main680
  L_main681
  L_main682
  L_main683
  L_main684
  L_main685
  L_main686
  L_main687
  L_main688
  L_main689
  L_main690
  L_main691
  L_main692
  L_main693
  L_main694
  L_main695
  L_main696
  L_alignOnTheArrow697
  L_alignOnTheArrow698
  L_alignOnTheArrow699
  L_alignOnTheArrow700
  L_alignOnTheArrow701
  L_alignOnTheArrow702
  L_alignOnTheArrow703
  L_alignOnTheArrow704
  L_alignOnTheArrow705
  L_alignOnTheArrow706
  L_alignOnTheArrow707
  L_alignOnTheArrow708
  L_alignOnTheArrow709
  L_alignOnTheArrow710
  L_alignOnTheArrow711
  L_alignOnTheArrow712
  L_alignOnTheArrow713
  L_alignOnTheArrow714
  L_alignOnTheArrow715
  L_alignOnTheArrow716
  L_alignOnTheArrow717
  L_alignOnTheArrow718
  L_alignOnTheArrow719
  L_alignOnTheArrow720
  L_alignOnTheArrow721
  L_alignOnTheArrow722
  L_alignOnTheArrow723
  L_alignOnTheArrow724
  L_alignOnTheArrow725
  L_alignOnTheArrow726
  L_alignOnTheArrow727
  L_alignOnTheArrow728
  L_alignOnTheArrow729
  L_alignOnTheArrow730
  L_alignOnTheArrow731
  L_alignOnTheArrow732
  L_alignOnTheArrow733
  L_alignOnTheArrow734
  L_alignOnTheArrow735
  L_isArrowFound736
  L_isArrowFound737
  L_goThroughObstaclesWorking738
  L_goThroughObstaclesWorking739
  L_goThroughObstaclesWorking740
  L_goThroughObstaclesWorking741
  L_goThroughObstaclesWorking742
  L_goThroughObstaclesWorking743
  L_goThroughObstaclesWorking744
  L_goThroughObstaclesWorking745
  L_goThroughObstaclesWorking746
  L_goThroughObstaclesWorking747
  L_goThroughObstaclesWorking748
  L_goThroughObstaclesWorking749
  L_goThroughObstaclesWorking750
  L_goThroughObstaclesWorking751
  L_goThroughObstacles752
  L_goThroughObstacles753
  L_goThroughObstacles754
  L_goThroughObstacles755
  L_goThroughObstacles756
  L_goThroughObstacles757
  L_goThroughObstacles758
  L_goThroughObstaclesJay759
  L_goThroughObstaclesJay760
  L_goThroughObstaclesJay761
  L_goThroughObstaclesJay762
  L_goThroughObstaclesJay763
  L_goThroughObstaclesJay764
  L_goThroughObstaclesJay765
  L_goThroughObstaclesJay766
  L_goThroughObstaclesJay767
  L_goThroughObstaclesJay768
  L_isPathClear769
  L_isPathClear770
  L_isPathClear771
  L_isPathClear772
  L_checkSonar773
  L_checkSonar774
  L_checkSonar775
  L_checkSonar776
  L_checkSonar777
  L_checkSonar778
  L_checkSonar779
  L_checkSonar780
  L_checkSonar781
  L_level3Aligning782
  L_level3Aligning783
  L_level3Aligning784
  L_level3Aligning785
  L_level3Aligning786
  L_level3Aligning787
  L_level3Aligning788
  L_level3Aligning789
  L_level3Aligning790
  L_level3Aligning791
  L_level3Aligning792
  L_level3Aligning793
  L_level3Aligning794
  L_level2Aligning795
  L_level2Aligning796
  L_level2Aligning797
  L_level2Aligning798
  L_level2Aligning799
  L_level2Aligning800
  L_level2Aligning801
  L_level2Aligning802
  L_level2Aligning803
  L_level2Aligning804
  L_level2Aligning805
  L_level2Aligning806
  L_level2Aligning807
  L_level2Aligning808
  L_level2Aligning809
  L_level2Aligning810
  L_level2Aligning811
  L_sendSensorStatusBack812
  L_sendSensorStatusBack813
  L_sendSensorStatusBack814
  L_sendSensorStatusBack815
  L_sendSensorStatusBack816
  L_sendSensorStatusBack817
  L_sendSensorStatusBack818
  L_sendSensorStatusBack819
  L_sendSensorStatusBack820
  L_sendSensorStatusBack821
  L_sendSensorStatusBack822
  L_sendSensorStatusBack823
  L_sendSensorStatusBack824
  L_sendSensorStatusBack825
  L_sendSensorStatusBack826
  L__isAllBlack827
  L__isAllWhite828
  L__lineFollowPID829
  L__lineFollowPID830
  L__lineFollowPID831
  L__lineFollowPID832
  L__lineFollowPID833
  L__lineFollowPID834
  L__lineFollowPID835
  L__lineFollowPID836
  L__lineFollowPID837
  L__lineFollowPID838
  L__lineFollowPID839
  L__lineFollowPID840
  L__lineFollowNormalWorked841
  L__lineFollowNormalWorked842
  L__lineFollowNormalWorked843
  L__lineFollowNormalWorked844
  L__lineFollowNormalWorked845
  L__lineFollowNormalWorked846
  L__lineFollowNormalWorked847
  L__lineFollowNormalWorked848
  L__lineFollowNormalWorked849
  L__lineFollowNormalWorked850
  L__lineFollowNormalWorked851
  L__lineFollowNormalWorked852
  L__lineFollowNormalWorked853
  L__lineFollowNormalWorked854
  L__lineFollowNormalWorked855
  L__lineFollowNormalWorked856
  L__lineFollowNormalWorked857
  L__lineFollowNormalWorked858
  L__lineFollowNormalWorked859
  L__lineFollowNormalWorked860
  L__lineFollowNormalWorked861
  L__lineFollowNormalWorked862
  L__lineFollowNormalWorked863
  L__lineFollowNormalWorked864
  L__lineFollowNormalWorked865
  L__lineFollowNormalWorked866
  L__lineFollowNormalWorked867
  L__lineFollowNormalWorked868
  L__lineFollowNormalWorked869
  L__lineFollowNormalWorked870
  L__lineFollowNormalWorked871
  L__lineFollowNormalWorked872
  L__lineFollowNormalWorked873
  L__lineFollowNormalWorked874
  L__lineFollowNormalWorked875
  L__lineFollowNormalWorked876
  L__lineFollowNormalWorked877
  L__lineFollowNormalWorked878
  L__lineFollowNormalWorkedForLast879
  L__lineFollowNormalWorkedForLast880
  L__lineFollowNormalWorkedForLast881
  L__lineFollowNormalWorkedForLast882
  L__lineFollowNormalWorkedForLast883
  L__lineFollowNormalWorkedForLast884
  L__lineFollowNormalWorkedForLast885
  L__lineFollowNormalWorkedForLast886
  L__lineFollowNormalWorkedForLast887
  L__lineFollowNormalWorkedForLast888
  L__lineFollowNormalWorkedForLast889
  L__lineFollowNormalWorkedForLast890
  L__lineFollowNormalWorkedForLast891
  L__lineFollowNormalWorkedForLast892
  L__lineFollowNormalWorkedForLast893
  L__lineFollowNormalWorkedForLast894
  L__lineFollowNormalWorkedForLast895
  L__lineFollowNormalWorkedForLast896
  L__lineFollowNormalWorkedForLast897
  L__lineFollowNormalWorkedForLast898
  L__lineFollowNormalWorkedForLast899
  L__lineFollowNormalWorkedForLast900
  L__lineFollowNormalWorkedForLast901
  L__lineFollowNormalWorkedForLast902
  L__lineFollowNormalWorkedForLast903
  L__lineFollowNormalWorkedForLast904
  L__lineFollowNormalWorkedForLast905
  L__lineFollowNormalWorkedForLast906
  L__lineFollowNormalWorkedForLast907
  L__lineFollowNormalWorkedForLast908
  L__lineFollowNormalWorkedForLast909
  L__lineFollowNormalWorkedForLast910
  L__lineFollowNormalWorkedForLast911
  L__lineFollowNormalWorkedForLast912
  L__lineFollowNormalWorkedForLast913
  L__lineFollowNormalWorkedForLast914
  L__lineFollowNormalWorkedForLast915
  L__lineFollowNormalWorkedForLast916
  L__isOnThePath917
  L__isOnThePath918
  L__isOnThePath919
  L__isOnThePath920
  L__isOnThePath921
  L__isOnThePath922
  L__lineFollow923
  L__lineFollow924
  L__lineFollow925
  L__lineFollow926
  L__lineFollow927
  L__lineFollowNormal928
  L__lineFollowNormal929
  L__lineFollowNormal930
  L__lineFollowNormal931
  L__lineFollowNormal932
  L__lineFollowNormal933
  L__lineFollowNormal934
  L__lineFollowNormal935
  L__lineFollowNormal936
  L__lineFollowNormal937
  L__lineFollowNormal938
  L__lineFollowNormal939
  L__lineFollowNormal940
  L__getDistanceIR_GP2D120941
  L__getDistanceIR_GP2D120942
  L__getDistanceIR_GP2D120943
  L__getDistanceIR_GP2D120944
  L__getDistanceIR_GP2D120945
  L__getDistanceIR_GP2D120946
  L__getDistanceIR_GP2D120947
  L__getDistanceIR_GP2D120948
  L__getDistanceIR_GP2D120949
  L__getDistanceIR_GP2D120950
  L__getDistanceIR_GP2D120951
  L__getDistanceIR_GP2D120952
  L__getDistanceIR_GP2D120953
  L__getDistanceIR_GP2D120954
  L__getDistanceIR_GP2D120955
  L__getDistanceIR_GP2D120956
  L__getDistanceIR_GP2D120957
  L__isRightSafe958
  L__isMiddleSafe959
  L__isLeftSafe960
  L__main961
  L__main962
  L__main963
  L__main964
  L__alignOnTheArrow965
  L__alignOnTheArrow966
  L__alignOnTheArrow967
  L__alignOnTheArrow968
  L__alignOnTheArrow969
  L__alignOnTheArrow970
  L__alignOnTheArrow971
  L__alignOnTheArrow972
  L__alignOnTheArrow973
  L__alignOnTheArrow974
  L__isPathClear975
  L__level3Aligning976
  L__level3Aligning977
  L__level2Aligning978
  L__level2Aligning979
  L__level2Aligning980
  L__level2Aligning981
  _isAllBlack
  _isAllWhite
  _motorLeft_foward
  _motorRight_foward
  _motorLeft_reverse
  _motorRight_reverse
  _motorLeft_stop
  _motorRight_stop
  _moveForward
  _reverse
  _turnRight
  _turnLeft
  _rotateClockwise
  _rotateAntiClockwise
  _stop
  _rotateByDegree
  L__rotateByDegree982
  L__rotateByDegree983
  L__rotateByDegree984
  L__rotateByDegree985
  L__rotateByDegree986
  L__rotateByDegree987
  L__rotateByDegree988
  L__rotateByDegree989
  L__rotateByDegree990
  L__rotateByDegree991
  _testMotion
  _sendSensorStatus
  _sendText
  _testPIC
  L__testPIC992
  _setPID
  _lineFollowPID
  _lineFollowNormalWorked
  _lineFollowNormalWorkedForLast
  _isOnThePath
  _lineFollow
  _lineFollowNormal
  _configure
  _getDistanceIR_GP2D120
  L__getDistanceIR_GP2D120993
  L__getDistanceIR_GP2D120994
  L__getDistanceIR_GP2D120995
  L__getDistanceIR_GP2D120996
  L__getDistanceIR_GP2D120997
  L__getDistanceIR_GP2D120998
  L__getDistanceIR_GP2D120999
  L__getDistanceIR_GP2D1201000
  L__getDistanceIR_GP2D1201001
  L__getDistanceIR_GP2D1201002
  L__getDistanceIR_GP2D1201003
  L__getDistanceIR_GP2D1201004
  L__getDistanceIR_GP2D1201005
  L__getDistanceIR_GP2D1201006
  L__getDistanceIR_GP2D1201007
  L__getDistanceIR_GP2D1201008
  L__getDistanceIR_GP2D1201009
  L__getDistanceIR_GP2D1201010
  L__getDistanceIR_GP2D1201011
  L__getDistanceIR_GP2D1201012
  L__getDistanceIR_GP2D1201013
  L__getDistanceIR_GP2D1201014
  L__getDistanceIR_GP2D1201015
  L__getDistanceIR_GP2D1201016
  L__getDistanceIR_GP2D1201017
  L__getDistanceIR_GP2D1201018
  L__getDistanceIR_GP2D1201019
  L__getDistanceIR_GP2D1201020
  L__getDistanceIR_GP2D1201021
  L__getDistanceIR_GP2D1201022
  L__getDistanceIR_GP2D1201023
  L__getDistanceIR_GP2D1201024
  L__getDistanceIR_GP2D1201025
  L__getDistanceIR_GP2D1201026
  _isRightSafe
  L__isRightSafe1027
  L__isRightSafe1028
  _isMiddleSafe
  L__isMiddleSafe1029
  L__isMiddleSafe1030
  _isLeftSafe
  L__isLeftSafe1031
  L__isLeftSafe1032
  _getSonarDistance
  _getDistanceSonar2
  L__getDistanceSonar21033
  L__getDistanceSonar21034
  L__getDistanceSonar21035
  L__getDistanceSonar21036
  L__getDistanceSonar21037
  L__getDistanceSonar21038
  _main
  L__main1039
  _gotoTheGoal
  _alignOnTheArrow
  _isArrowFound
  _moveStraightSlow
  _moveStraightFast
  _goThroughObstaclesWorking
  L__goThroughObstaclesWorking1040
  L__goThroughObstaclesWorking1041
  L__goThroughObstaclesWorking1042
  L__goThroughObstaclesWorking1043
  L__goThroughObstaclesWorking1044
  _goThroughObstacles
  L__goThroughObstacles1045
  _goThroughObstaclesJay
  L__goThroughObstaclesJay1046
  L__goThroughObstaclesJay1047
  L__goThroughObstaclesJay1048
  L__goThroughObstaclesJay1049
  L__goThroughObstaclesJay1050
  L__goThroughObstaclesJay1051
  L__goThroughObstaclesJay1052
  _isPathClear
  _checkSonar
  _level3Aligning
  _level2Aligning
  _sendSensorStatusBack
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  _abs
  L__abs92
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod93
  L___Lib_CStdlib_strtod94
  L___Lib_CStdlib_strtod95
  _atof
  _atoi
  L__atoi96
  L__atoi97
  L__atoi98
  L__atoi99
  _atol
  L__atol100
  L__atol101
  _div
  _ldiv
  _uldiv
  _labs
  L__labs102
  _max
  L__max103
  _min
  L__min104
  _srand
  _rand
  _xtoi
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  SETFOV32EEE
  SETFUN32EEE
  NRMRND4032
  NRM40JPSETFOV32
  NRM4032
  NRM4032A
  TNIB4032
  NORM4032
  TNORMUN4032
  NRM40JPSETFUN32
  NRM40JPFIXSIGN32
  NRM4032B
  TNIB4032A
  NORM4032A
  NRM4032C
  TNIB4032B
  NORM4032B
  NRM40JPRES032
  TNIB4032C
  NORM4032C
  NRM40EEE
  NORM3232
  JPNRES032
  JPNSETFUN32
  NORM3232A
  JMPNFIXSIGN32
  NORM32EEE
  SETIOV3224EEE
  FPA32
  USEA32
  USEB32
  BRETURN32
  BLIGNED32
  BNIB32
  BNIB32A
  BNIB32B
  BNIB32C
  ADDEOK
  BLOOP32C
  BLOOP32B
  BLOOP32A
  BLOOP32
  AOK32
  BNE032
  ALIGNED32
  ANIB32
  ANIB32A
  ANIB32B
  ANIB32C
  ALOOP32C
  ALOOP32B
  ALOOP32A
  ALOOP32
  ACOMP32
  ADDJPNRMRND4032
  ADDJPSETFOV32
  ADDJPNRM4032
  ADDEEE
  FPS32
  FPM32
  MULJPRES032
  M32BNE0
  MTUN32
  MULJPSETFOV32
  MOK32
  MULJPSETFUN32
  MROUND32
  MUL32OK
  MULEEE
  L_Div_32x32_FP11
  L_Div_32x32_FP12
  L_Div_32x32_FP13
  L_Div_32x32_FP14
  FPD32
  JPDSETFDZ32
  JPDRES032
  D32BNE0
  TALIGN32
  TS1ALIGN32
  TS2ALIGN32
  DALIGN32OK
  ALTB32
  AGEB32
  JPDSETFOV32
  DARGOK32
  JPDSETFUN32
  DLOOP32
  DS132
  DS232
  DREST32
  DOK32
  DAREST32
  DROUND32
  DIV32OK
  DIV32EEE
  INT3232U
  INT3232UEOK
  SETEXP32U
  SETIOV32U
  TSHIFT3232U
  SHIFT3232UOK
  SHIFT3232U
  INT3232UOK
  JPLSETIOV3224
  IRES032U
  INT3232UEER
  INT3232UEEE
  INT3232
  INT3232EOK
  SETIOV32
  TSHIFT3232
  SHIFT3232OK
  SHIFT3232
  INT3232OK
  JPISETIOV3224
  IRES032
  INT3232EER
  INT3232EEE
  INT3216
  IRES016
  SETIOV16
  TSHIFT3216
  SHIFT3216OK
  SHIFT3216
  INT3216OK
  JPJSETIOV3224
  INT3216EOK
  INT3216EER
  INT3216EEE
  INT3216U
  IRES016U
  SETEXP16U
  SETIOV16U
  TSHIFT3216U
  SHIFT3216UOK
  SHIFT3216U
  INT3216UOK
  JPKSETIOV3224
  INT3216UEOK
  INT3216UEER
  INT3216UEEE
  INT32U08
  IRES008
  SETEXP08
  SETIOV08
  TSHIFT3208
  SHIFT3208OK
  SHIFT3208
  INT3208OK
  D2B_JPKSETIOV3224
  INT3208EOK
  INT3208EER
  INT3208EEE
  FLO08U32
  FLO1632
  FLO1632EEE
  FLO16U32
  FLO3232
  FLO3232EEE
  FLO32U32
  EQU_FALSE
  COMPARE_EQU
  COMPARE_NOTZERO
  COMPARE_XNOTZERO
  COMPARE_YNOTZERO
  COMPARE_LT
  COMPARE_GT
  COMPARE_TESTALL
  COMPARE_C1
  GT_FALSE
  GT_TRUE
  COMPARE_C2
  COMPARE_C3
  _SETFOV32
  _SETFDZ32
  _FIXSIGN32
  _RES032
  _SETFUN32
  _NRM4032
  _NRM3232
  _SETIOV3224
  _Add_32x32_FP
  _Sub_32x32_FP
  _Mul_32x32_FP
  _Div_32x32_FP
  _Double2Longword
  _Double2Longint
  _Double2Int
  _Double2Word
  _Double2Byte
  _Byte2Double
  _Int2Double
  _Word2Double
  _Longint2Double
  _Longword2Double
  _Equals_Double
  _Compare_Double
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
