;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/12/2012 2:24:50 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF005EFE4  	GOTO        3016
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x001C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x001E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x0020	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x0022	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x0024	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x0026	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x002A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x002E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x0030	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x0032	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x0036	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x003A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x003C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x003E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x0040	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x0042	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x0044	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x0046	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x0048	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x004A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x004E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x0050	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x0052	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x0056	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x005A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x005E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x0062	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x0066	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x006A	0x0012      	RETURN      0
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x006C	0x50CB      	MOVF        PR2, 0 
0x006E	0x0F01      	ADDLW       1
0x0070	0x6E00      	MOVWF       R0 
0x0072	0x6A01      	CLRF        R1 
0x0074	0x0E00      	MOVLW       0
0x0076	0x2201      	ADDWFC      R1, 1 
0x0078	0xF004C12C  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E05      	MOVWF       R5 
0x0080	0xDFCD      	RCALL       _Mul_16x16_U
0x0082	0x0E06      	MOVLW       6
0x0084	0x6E02      	MOVWF       R2 
0x0086	0xF004C000  	MOVFF       R0, R4
0x008A	0xF005C001  	MOVFF       R1, R5
0x008E	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty4:
0x0090	0xE005      	BZ          L__PWM1_Set_Duty5
0x0092	0x3205      	RRCF        R5, 1 
0x0094	0x3204      	RRCF        R4, 1 
0x0096	0x9E05      	BCF         R5, 7 
0x0098	0x0FFF      	ADDLW       255
0x009A	0xD7FA      	BRA         L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,48 :: 		
0x009C	0x0E04      	MOVLW       4
0x009E	0x6E01      	MOVWF       R1 
0x00A0	0xF000C004  	MOVFF       R4, R0
0x00A4	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty6:
0x00A6	0xE004      	BZ          L__PWM1_Set_Duty7
0x00A8	0x3600      	RLCF        R0, 1 
0x00AA	0x9000      	BCF         R0, 0 
0x00AC	0x0FFF      	ADDLW       255
0x00AE	0xD7FB      	BRA         L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x00B0	0x0E30      	MOVLW       48
0x00B2	0x1400      	ANDWF       R0, 0 
0x00B4	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x00B6	0xF000C004  	MOVFF       R4, R0
0x00BA	0xF001C005  	MOVFF       R5, R1
0x00BE	0x3201      	RRCF        R1, 1 
0x00C0	0x3200      	RRCF        R0, 1 
0x00C2	0x9E01      	BCF         R1, 7 
0x00C4	0x3201      	RRCF        R1, 1 
0x00C6	0x3200      	RRCF        R0, 1 
0x00C8	0x9E01      	BCF         R1, 7 
0x00CA	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x00CE	0x0E0F      	MOVLW       15
0x00D0	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x00D2	0x5003      	MOVF        R3, 0 
0x00D4	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
0x00D6	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x00D8	0x50CB      	MOVF        PR2, 0 
0x00DA	0x0F01      	ADDLW       1
0x00DC	0x6E00      	MOVWF       R0 
0x00DE	0x6A01      	CLRF        R1 
0x00E0	0x0E00      	MOVLW       0
0x00E2	0x2201      	ADDWFC      R1, 1 
0x00E4	0xF004C12C  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x00E8	0x0E00      	MOVLW       0
0x00EA	0x6E05      	MOVWF       R5 
0x00EC	0xDF97      	RCALL       _Mul_16x16_U
0x00EE	0x0E06      	MOVLW       6
0x00F0	0x6E02      	MOVWF       R2 
0x00F2	0xF004C000  	MOVFF       R0, R4
0x00F6	0xF005C001  	MOVFF       R1, R5
0x00FA	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty0:
0x00FC	0xE005      	BZ          L__PWM2_Set_Duty1
0x00FE	0x3205      	RRCF        R5, 1 
0x0100	0x3204      	RRCF        R4, 1 
0x0102	0x9E05      	BCF         R5, 7 
0x0104	0x0FFF      	ADDLW       255
0x0106	0xD7FA      	BRA         L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x0108	0x0E04      	MOVLW       4
0x010A	0x6E01      	MOVWF       R1 
0x010C	0xF000C004  	MOVFF       R4, R0
0x0110	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty2:
0x0112	0xE004      	BZ          L__PWM2_Set_Duty3
0x0114	0x3600      	RLCF        R0, 1 
0x0116	0x9000      	BCF         R0, 0 
0x0118	0x0FFF      	ADDLW       255
0x011A	0xD7FB      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x011C	0x0E30      	MOVLW       48
0x011E	0x1400      	ANDWF       R0, 0 
0x0120	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x0122	0xF000C004  	MOVFF       R4, R0
0x0126	0xF001C005  	MOVFF       R5, R1
0x012A	0x3201      	RRCF        R1, 1 
0x012C	0x3200      	RRCF        R0, 1 
0x012E	0x9E01      	BCF         R1, 7 
0x0130	0x3201      	RRCF        R1, 1 
0x0132	0x3200      	RRCF        R0, 1 
0x0134	0x9E01      	BCF         R1, 7 
0x0136	0xFFBBC000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x013A	0x0E0F      	MOVLW       15
0x013C	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x013E	0x5003      	MOVF        R3, 0 
0x0140	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
0x0142	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_motorRight_reverse:
;motion.h,49 :: 		void motorRight_reverse(int pwm){
;motion.h,50 :: 		Motor_Right_Forward = 0;
0x0144	0x9882      	BCF         PORTC, 4 
;motion.h,51 :: 		Motor_Right_Reverse = 1;
0x0146	0x8A82      	BSF         PORTC, 5 
;motion.h,52 :: 		PWM1_Set_Duty(pwm);
0x0148	0xF12CC12A  	MOVFF       FARG_motorRight_reverse_pwm, FARG_PWM1_Set_Duty_new_duty
0x014C	0xDF8F      	RCALL       _PWM1_Set_Duty
;motion.h,53 :: 		}
0x014E	0x0012      	RETURN      0
; end of _motorRight_reverse
_motorRight_foward:
;motion.h,37 :: 		void motorRight_foward(int pwm){
;motion.h,38 :: 		Motor_Right_Forward = 1;
0x0150	0x8882      	BSF         PORTC, 4 
;motion.h,39 :: 		Motor_Right_Reverse = 0;
0x0152	0x9A82      	BCF         PORTC, 5 
;motion.h,40 :: 		PWM1_Set_Duty(pwm);
0x0154	0xF12CC12A  	MOVFF       FARG_motorRight_foward_pwm, FARG_PWM1_Set_Duty_new_duty
0x0158	0xDF89      	RCALL       _PWM1_Set_Duty
;motion.h,41 :: 		}
0x015A	0x0012      	RETURN      0
; end of _motorRight_foward
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x015C	0xB2AC      	BTFSC       TXSTA, 1 
0x015E	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0160	0x0000      	NOP
0x0162	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0164	0xFFADC12A  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
0x0168	0x0012      	RETURN      0
; end of _UART1_Write
_motorLeft_reverse:
;motion.h,43 :: 		void motorLeft_reverse(int pwm){
;motion.h,44 :: 		Motor_Left_Forward = 0;
0x016A	0x9483      	BCF         PORTD, 2 
;motion.h,45 :: 		Motor_Left_Reverse = 1;
0x016C	0x8683      	BSF         PORTD, 3 
;motion.h,46 :: 		PWM2_Set_Duty(pwm);
0x016E	0xF12CC12A  	MOVFF       FARG_motorLeft_reverse_pwm, FARG_PWM2_Set_Duty_new_duty
0x0172	0xDFB2      	RCALL       _PWM2_Set_Duty
;motion.h,47 :: 		}
0x0174	0x0012      	RETURN      0
; end of _motorLeft_reverse
_motorLeft_foward:
;motion.h,31 :: 		void motorLeft_foward(int pwm){
;motion.h,32 :: 		Motor_Left_Forward = 1;
0x0176	0x8483      	BSF         PORTD, 2 
;motion.h,33 :: 		Motor_Left_Reverse = 0;
0x0178	0x9683      	BCF         PORTD, 3 
;motion.h,34 :: 		PWM2_Set_Duty(pwm);
0x017A	0xF12CC12A  	MOVFF       FARG_motorLeft_foward_pwm, FARG_PWM2_Set_Duty_new_duty
0x017E	0xDFAC      	RCALL       _PWM2_Set_Duty
;motion.h,35 :: 		}
0x0180	0x0012      	RETURN      0
; end of _motorLeft_foward
_motorLeft_stop:
;motion.h,55 :: 		void motorLeft_stop(){
;motion.h,56 :: 		Motor_Left_Forward = 1;
0x0182	0x8483      	BSF         PORTD, 2 
;motion.h,57 :: 		Motor_Left_Reverse = 1;
0x0184	0x8683      	BSF         PORTD, 3 
;motion.h,58 :: 		}
0x0186	0x0012      	RETURN      0
; end of _motorLeft_stop
_motorRight_stop:
;motion.h,60 :: 		void motorRight_stop(){
;motion.h,61 :: 		Motor_Right_Forward = 1;
0x0188	0x8882      	BSF         PORTC, 4 
;motion.h,62 :: 		Motor_Right_Reverse = 1;
0x018A	0x8A82      	BSF         PORTC, 5 
;motion.h,63 :: 		}
0x018C	0x0012      	RETURN      0
; end of _motorRight_stop
_rotateClockwise:
;motion.h,80 :: 		void rotateClockwise(int pwm){
;motion.h,81 :: 		motorLeft_foward(pwm);
0x018E	0xF12AC127  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorLeft_foward_pwm
0x0192	0xF12BC128  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorLeft_foward_pwm+1
0x0196	0xDFEF      	RCALL       _motorLeft_foward
;motion.h,82 :: 		motorRight_reverse(pwm);
0x0198	0xF12AC127  	MOVFF       FARG_rotateClockwise_pwm, FARG_motorRight_reverse_pwm
0x019C	0xF12BC128  	MOVFF       FARG_rotateClockwise_pwm+1, FARG_motorRight_reverse_pwm+1
0x01A0	0xDFD1      	RCALL       _motorRight_reverse
;motion.h,83 :: 		}
0x01A2	0x0012      	RETURN      0
; end of _rotateClockwise
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x01A4	0x0101      	MOVLB       1
0x01A6	0x6B29      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x01A8	0xFFE9C127  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x01AC	0xFFEAC128  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x01B0	0xF100CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x01B4	0x5100      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x01B6	0x0A00      	XORLW       0
0x01B8	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x01BA	0xF12AC100  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x01BE	0xDFCE      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x01C0	0x0101      	MOVLB       1
0x01C2	0x2B29      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x01C4	0x5129      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x01C6	0x2527      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x01C8	0x6EE9      	MOVWF       FSR0L 
0x01CA	0x0E00      	MOVLW       0
0x01CC	0x2128      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x01CE	0x6EEA      	MOVWF       FSR0H 
0x01D0	0xF100CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x01D4	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
0x01D6	0x0012      	RETURN      0
; end of _UART1_Write_Text
_rotateAntiClockwise:
;motion.h,85 :: 		void rotateAntiClockwise(int pwm){
;motion.h,86 :: 		motorLeft_reverse(pwm);
0x01D8	0xF12AC127  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorLeft_reverse_pwm
0x01DC	0xF12BC128  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorLeft_reverse_pwm+1
0x01E0	0xDFC4      	RCALL       _motorLeft_reverse
;motion.h,87 :: 		motorRight_foward(pwm);
0x01E2	0xF12AC127  	MOVFF       FARG_rotateAntiClockwise_pwm, FARG_motorRight_foward_pwm
0x01E6	0xF12BC128  	MOVFF       FARG_rotateAntiClockwise_pwm+1, FARG_motorRight_foward_pwm+1
0x01EA	0xDFB2      	RCALL       _motorRight_foward
;motion.h,88 :: 		}
0x01EC	0x0012      	RETURN      0
; end of _rotateAntiClockwise
_stop:
;motion.h,90 :: 		void stop(){
;motion.h,91 :: 		motorLeft_stop();
0x01EE	0xDFC9      	RCALL       _motorLeft_stop
;motion.h,92 :: 		motorRight_stop();
0x01F0	0xDFCB      	RCALL       _motorRight_stop
;motion.h,93 :: 		}
0x01F2	0x0012      	RETURN      0
; end of _stop
_turnRight:
;motion.h,70 :: 		void turnRight(int pwmLeft){
;motion.h,71 :: 		motorLeft_foward(pwmLeft);
0x01F4	0xF12AC123  	MOVFF       FARG_turnRight_pwmLeft, FARG_motorLeft_foward_pwm
0x01F8	0xF12BC124  	MOVFF       FARG_turnRight_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x01FC	0xDFBC      	RCALL       _motorLeft_foward
;motion.h,72 :: 		motorRight_stop();
0x01FE	0xDFC4      	RCALL       _motorRight_stop
;motion.h,73 :: 		}
0x0200	0x0012      	RETURN      0
; end of _turnRight
_sendSensorStatus:
;debug.h,13 :: 		void sendSensorStatus(){
;debug.h,14 :: 		if( Sensor1 == 1){
0x0202	0xA881      	BTFSS       PORTB, 4 
0x0204	0xD00B      	BRA         L_sendSensorStatus16
;debug.h,15 :: 		debugText = "1";
0x0206	0x0ECE      	MOVLW       ?lstr3_Main_325.0V
0x0208	0x0100      	MOVLB       0
0x020A	0x6F94      	MOVWF       _debugText, 1
0x020C	0x0E00      	MOVLW       hi_addr(?lstr3_Main_325.0V)
0x020E	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,16 :: 		UART1_Write_Text(debugText);
0x0210	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0214	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0218	0xDFC5      	RCALL       _UART1_Write_Text
;debug.h,17 :: 		}
0x021A	0xD00C      	BRA         L_sendSensorStatus17
L_sendSensorStatus16:
;debug.h,18 :: 		else if( Sensor1 == 0){
0x021C	0xB881      	BTFSC       PORTB, 4 
0x021E	0xD00A      	BRA         L_sendSensorStatus18
;debug.h,19 :: 		debugText = "0";
0x0220	0x0EE0      	MOVLW       ?lstr4_Main_325.0V
0x0222	0x0100      	MOVLB       0
0x0224	0x6F94      	MOVWF       _debugText, 1
0x0226	0x0E00      	MOVLW       hi_addr(?lstr4_Main_325.0V)
0x0228	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,20 :: 		UART1_Write_Text(debugText);
0x022A	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x022E	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0232	0xDFB8      	RCALL       _UART1_Write_Text
;debug.h,21 :: 		}
L_sendSensorStatus18:
L_sendSensorStatus17:
;debug.h,23 :: 		if( Sensor2 == 1){
0x0234	0xA681      	BTFSS       PORTB, 3 
0x0236	0xD00B      	BRA         L_sendSensorStatus19
;debug.h,24 :: 		debugText = "1";
0x0238	0x0EDE      	MOVLW       ?lstr5_Main_325.0V
0x023A	0x0100      	MOVLB       0
0x023C	0x6F94      	MOVWF       _debugText, 1
0x023E	0x0E00      	MOVLW       hi_addr(?lstr5_Main_325.0V)
0x0240	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,25 :: 		UART1_Write_Text(debugText);
0x0242	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0246	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x024A	0xDFAC      	RCALL       _UART1_Write_Text
;debug.h,26 :: 		}
0x024C	0xD00C      	BRA         L_sendSensorStatus20
L_sendSensorStatus19:
;debug.h,27 :: 		else if( Sensor2 == 0){
0x024E	0xB681      	BTFSC       PORTB, 3 
0x0250	0xD00A      	BRA         L_sendSensorStatus21
;debug.h,28 :: 		debugText = "0";
0x0252	0x0EDC      	MOVLW       ?lstr6_Main_325.0V
0x0254	0x0100      	MOVLB       0
0x0256	0x6F94      	MOVWF       _debugText, 1
0x0258	0x0E00      	MOVLW       hi_addr(?lstr6_Main_325.0V)
0x025A	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,29 :: 		UART1_Write_Text(debugText);
0x025C	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0260	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0264	0xDF9F      	RCALL       _UART1_Write_Text
;debug.h,30 :: 		}
L_sendSensorStatus21:
L_sendSensorStatus20:
;debug.h,32 :: 		if( Sensor3 == 1){
0x0266	0xA883      	BTFSS       PORTD, 4 
0x0268	0xD00B      	BRA         L_sendSensorStatus22
;debug.h,33 :: 		debugText = "1";
0x026A	0x0EE2      	MOVLW       ?lstr7_Main_325.0V
0x026C	0x0100      	MOVLB       0
0x026E	0x6F94      	MOVWF       _debugText, 1
0x0270	0x0E00      	MOVLW       hi_addr(?lstr7_Main_325.0V)
0x0272	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,34 :: 		UART1_Write_Text(debugText);
0x0274	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0278	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x027C	0xDF93      	RCALL       _UART1_Write_Text
;debug.h,35 :: 		}
0x027E	0xD00C      	BRA         L_sendSensorStatus23
L_sendSensorStatus22:
;debug.h,36 :: 		else if( Sensor3 == 0){
0x0280	0xB883      	BTFSC       PORTD, 4 
0x0282	0xD00A      	BRA         L_sendSensorStatus24
;debug.h,37 :: 		debugText = "0";
0x0284	0x0ED4      	MOVLW       ?lstr8_Main_325.0V
0x0286	0x0100      	MOVLB       0
0x0288	0x6F94      	MOVWF       _debugText, 1
0x028A	0x0E00      	MOVLW       hi_addr(?lstr8_Main_325.0V)
0x028C	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,38 :: 		UART1_Write_Text(debugText);
0x028E	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0292	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0296	0xDF86      	RCALL       _UART1_Write_Text
;debug.h,39 :: 		}
L_sendSensorStatus24:
L_sendSensorStatus23:
;debug.h,41 :: 		if( Sensor4 == 1){
0x0298	0xAA83      	BTFSS       PORTD, 5 
0x029A	0xD00B      	BRA         L_sendSensorStatus25
;debug.h,42 :: 		debugText = "1";
0x029C	0x0ED2      	MOVLW       ?lstr9_Main_325.0V
0x029E	0x0100      	MOVLB       0
0x02A0	0x6F94      	MOVWF       _debugText, 1
0x02A2	0x0E00      	MOVLW       hi_addr(?lstr9_Main_325.0V)
0x02A4	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,43 :: 		UART1_Write_Text(debugText);
0x02A6	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02AA	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02AE	0xDF7A      	RCALL       _UART1_Write_Text
;debug.h,44 :: 		}
0x02B0	0xD00C      	BRA         L_sendSensorStatus26
L_sendSensorStatus25:
;debug.h,45 :: 		else if( Sensor4 == 0){
0x02B2	0xBA83      	BTFSC       PORTD, 5 
0x02B4	0xD00A      	BRA         L_sendSensorStatus27
;debug.h,46 :: 		debugText = "0";
0x02B6	0x0ED0      	MOVLW       ?lstr10_Main_325.0V
0x02B8	0x0100      	MOVLB       0
0x02BA	0x6F94      	MOVWF       _debugText, 1
0x02BC	0x0E00      	MOVLW       hi_addr(?lstr10_Main_325.0V)
0x02BE	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,47 :: 		UART1_Write_Text(debugText);
0x02C0	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02C4	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02C8	0xDF6D      	RCALL       _UART1_Write_Text
;debug.h,48 :: 		}
L_sendSensorStatus27:
L_sendSensorStatus26:
;debug.h,50 :: 		if( Sensor5 == 1){
0x02CA	0xAC83      	BTFSS       PORTD, 6 
0x02CC	0xD00B      	BRA         L_sendSensorStatus28
;debug.h,51 :: 		debugText = "1";
0x02CE	0x0EDA      	MOVLW       ?lstr11_Main_325.0V
0x02D0	0x0100      	MOVLB       0
0x02D2	0x6F94      	MOVWF       _debugText, 1
0x02D4	0x0E00      	MOVLW       hi_addr(?lstr11_Main_325.0V)
0x02D6	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,52 :: 		UART1_Write_Text(debugText);
0x02D8	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02DC	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02E0	0xDF61      	RCALL       _UART1_Write_Text
;debug.h,53 :: 		}
0x02E2	0xD00C      	BRA         L_sendSensorStatus29
L_sendSensorStatus28:
;debug.h,54 :: 		else if( Sensor5 == 0){
0x02E4	0xBC83      	BTFSC       PORTD, 6 
0x02E6	0xD00A      	BRA         L_sendSensorStatus30
;debug.h,55 :: 		debugText = "0";
0x02E8	0x0ED8      	MOVLW       ?lstr12_Main_325.0V
0x02EA	0x0100      	MOVLB       0
0x02EC	0x6F94      	MOVWF       _debugText, 1
0x02EE	0x0E00      	MOVLW       hi_addr(?lstr12_Main_325.0V)
0x02F0	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,56 :: 		UART1_Write_Text(debugText);
0x02F2	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x02F6	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x02FA	0xDF54      	RCALL       _UART1_Write_Text
;debug.h,57 :: 		}
L_sendSensorStatus30:
L_sendSensorStatus29:
;debug.h,59 :: 		if( Sensor6 == 1){
0x02FC	0xAE83      	BTFSS       PORTD, 7 
0x02FE	0xD00B      	BRA         L_sendSensorStatus31
;debug.h,60 :: 		debugText = "1";
0x0300	0x0ED6      	MOVLW       ?lstr13_Main_325.0V
0x0302	0x0100      	MOVLB       0
0x0304	0x6F94      	MOVWF       _debugText, 1
0x0306	0x0E00      	MOVLW       hi_addr(?lstr13_Main_325.0V)
0x0308	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,61 :: 		UART1_Write_Text(debugText);
0x030A	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x030E	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0312	0xDF48      	RCALL       _UART1_Write_Text
;debug.h,62 :: 		}
0x0314	0xD00C      	BRA         L_sendSensorStatus32
L_sendSensorStatus31:
;debug.h,63 :: 		else if( Sensor6 == 0){
0x0316	0xBE83      	BTFSC       PORTD, 7 
0x0318	0xD00A      	BRA         L_sendSensorStatus33
;debug.h,64 :: 		debugText = "0";
0x031A	0x0E48      	MOVLW       ?lstr14_Main_325.0V
0x031C	0x0100      	MOVLB       0
0x031E	0x6F94      	MOVWF       _debugText, 1
0x0320	0x0E00      	MOVLW       hi_addr(?lstr14_Main_325.0V)
0x0322	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,65 :: 		UART1_Write_Text(debugText);
0x0324	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0328	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x032C	0xDF3B      	RCALL       _UART1_Write_Text
;debug.h,66 :: 		}
L_sendSensorStatus33:
L_sendSensorStatus32:
;debug.h,68 :: 		if( Sensor7 == 1){
0x032E	0xA481      	BTFSS       PORTB, 2 
0x0330	0xD00B      	BRA         L_sendSensorStatus34
;debug.h,69 :: 		debugText = "1";
0x0332	0x0E3B      	MOVLW       ?lstr15_Main_325.0V
0x0334	0x0100      	MOVLB       0
0x0336	0x6F94      	MOVWF       _debugText, 1
0x0338	0x0E00      	MOVLW       hi_addr(?lstr15_Main_325.0V)
0x033A	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,70 :: 		UART1_Write_Text(debugText);
0x033C	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0340	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0344	0xDF2F      	RCALL       _UART1_Write_Text
;debug.h,71 :: 		}
0x0346	0xD00C      	BRA         L_sendSensorStatus35
L_sendSensorStatus34:
;debug.h,72 :: 		else if( Sensor7 == 0){
0x0348	0xB481      	BTFSC       PORTB, 2 
0x034A	0xD00A      	BRA         L_sendSensorStatus36
;debug.h,73 :: 		debugText = "0";
0x034C	0x0E39      	MOVLW       ?lstr16_Main_325.0V
0x034E	0x0100      	MOVLB       0
0x0350	0x6F94      	MOVWF       _debugText, 1
0x0352	0x0E00      	MOVLW       hi_addr(?lstr16_Main_325.0V)
0x0354	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,74 :: 		UART1_Write_Text(debugText);
0x0356	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x035A	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x035E	0xDF22      	RCALL       _UART1_Write_Text
;debug.h,75 :: 		}
L_sendSensorStatus36:
L_sendSensorStatus35:
;debug.h,77 :: 		if( Sensor8 == 1){
0x0360	0xAC81      	BTFSS       PORTB, 6 
0x0362	0xD00B      	BRA         L_sendSensorStatus37
;debug.h,78 :: 		debugText = "1";
0x0364	0x0E37      	MOVLW       ?lstr17_Main_325.0V
0x0366	0x0100      	MOVLB       0
0x0368	0x6F94      	MOVWF       _debugText, 1
0x036A	0x0E00      	MOVLW       hi_addr(?lstr17_Main_325.0V)
0x036C	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,79 :: 		UART1_Write_Text(debugText);
0x036E	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x0372	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0376	0xDF16      	RCALL       _UART1_Write_Text
;debug.h,80 :: 		}
0x0378	0xD00C      	BRA         L_sendSensorStatus38
L_sendSensorStatus37:
;debug.h,81 :: 		else if( Sensor8 == 0){
0x037A	0xBC81      	BTFSC       PORTB, 6 
0x037C	0xD00A      	BRA         L_sendSensorStatus39
;debug.h,82 :: 		debugText = "0";
0x037E	0x0E3D      	MOVLW       ?lstr18_Main_325.0V
0x0380	0x0100      	MOVLB       0
0x0382	0x6F94      	MOVWF       _debugText, 1
0x0384	0x0E00      	MOVLW       hi_addr(?lstr18_Main_325.0V)
0x0386	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,83 :: 		UART1_Write_Text(debugText);
0x0388	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x038C	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x0390	0xDF09      	RCALL       _UART1_Write_Text
;debug.h,84 :: 		}
L_sendSensorStatus39:
L_sendSensorStatus38:
;debug.h,86 :: 		if( Sensor9 == 1){
0x0392	0xAE81      	BTFSS       PORTB, 7 
0x0394	0xD00B      	BRA         L_sendSensorStatus40
;debug.h,87 :: 		debugText = "1";
0x0396	0x0E46      	MOVLW       ?lstr19_Main_325.0V
0x0398	0x0100      	MOVLB       0
0x039A	0x6F94      	MOVWF       _debugText, 1
0x039C	0x0E00      	MOVLW       hi_addr(?lstr19_Main_325.0V)
0x039E	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,88 :: 		UART1_Write_Text(debugText);
0x03A0	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03A4	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03A8	0xDEFD      	RCALL       _UART1_Write_Text
;debug.h,89 :: 		}
0x03AA	0xD00C      	BRA         L_sendSensorStatus41
L_sendSensorStatus40:
;debug.h,90 :: 		else if( Sensor9 == 0){
0x03AC	0xBE81      	BTFSC       PORTB, 7 
0x03AE	0xD00A      	BRA         L_sendSensorStatus42
;debug.h,91 :: 		debugText = "0";
0x03B0	0x0E44      	MOVLW       ?lstr20_Main_325.0V
0x03B2	0x0100      	MOVLB       0
0x03B4	0x6F94      	MOVWF       _debugText, 1
0x03B6	0x0E00      	MOVLW       hi_addr(?lstr20_Main_325.0V)
0x03B8	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,92 :: 		UART1_Write_Text(debugText);
0x03BA	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03BE	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03C2	0xDEF0      	RCALL       _UART1_Write_Text
;debug.h,93 :: 		}
L_sendSensorStatus42:
L_sendSensorStatus41:
;debug.h,95 :: 		if( Scout == 1){
0x03C4	0xAA81      	BTFSS       PORTB, 5 
0x03C6	0xD00B      	BRA         L_sendSensorStatus43
;debug.h,96 :: 		debugText = " 1; ";
0x03C8	0x0E3F      	MOVLW       ?lstr21_Main_325.0V
0x03CA	0x0100      	MOVLB       0
0x03CC	0x6F94      	MOVWF       _debugText, 1
0x03CE	0x0E00      	MOVLW       hi_addr(?lstr21_Main_325.0V)
0x03D0	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,97 :: 		UART1_Write_Text(debugText);
0x03D2	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03D6	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03DA	0xDEE4      	RCALL       _UART1_Write_Text
;debug.h,98 :: 		}
0x03DC	0xD00C      	BRA         L_sendSensorStatus44
L_sendSensorStatus43:
;debug.h,99 :: 		else if( Scout == 0){
0x03DE	0xBA81      	BTFSC       PORTB, 5 
0x03E0	0xD00A      	BRA         L_sendSensorStatus45
;debug.h,100 :: 		debugText = " 0; ";
0x03E2	0x0E32      	MOVLW       ?lstr22_Main_325.0V
0x03E4	0x0100      	MOVLB       0
0x03E6	0x6F94      	MOVWF       _debugText, 1
0x03E8	0x0E00      	MOVLW       hi_addr(?lstr22_Main_325.0V)
0x03EA	0x6F95      	MOVWF       _debugText+1, 1
;debug.h,101 :: 		UART1_Write_Text(debugText);
0x03EC	0xF127C094  	MOVFF       _debugText, FARG_UART1_Write_Text_uart_text
0x03F0	0xF128C095  	MOVFF       _debugText+1, FARG_UART1_Write_Text_uart_text+1
0x03F4	0xDED7      	RCALL       _UART1_Write_Text
;debug.h,102 :: 		}
L_sendSensorStatus45:
L_sendSensorStatus44:
;debug.h,103 :: 		}
0x03F6	0x0012      	RETURN      0
; end of _sendSensorStatus
_isAllBlack:
;sensorpanel.h,15 :: 		int isAllBlack(){
;sensorpanel.h,16 :: 		if( Scout==1 && Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1){
0x03F8	0xAA81      	BTFSS       PORTB, 5 
0x03FA	0xD017      	BRA         L_isAllBlack2
0x03FC	0xA881      	BTFSS       PORTB, 4 
0x03FE	0xD015      	BRA         L_isAllBlack2
0x0400	0xA681      	BTFSS       PORTB, 3 
0x0402	0xD013      	BRA         L_isAllBlack2
0x0404	0xA883      	BTFSS       PORTD, 4 
0x0406	0xD011      	BRA         L_isAllBlack2
0x0408	0xAA83      	BTFSS       PORTD, 5 
0x040A	0xD00F      	BRA         L_isAllBlack2
0x040C	0xAC83      	BTFSS       PORTD, 6 
0x040E	0xD00D      	BRA         L_isAllBlack2
0x0410	0xAE83      	BTFSS       PORTD, 7 
0x0412	0xD00B      	BRA         L_isAllBlack2
0x0414	0xA481      	BTFSS       PORTB, 2 
0x0416	0xD009      	BRA         L_isAllBlack2
0x0418	0xAC81      	BTFSS       PORTB, 6 
0x041A	0xD007      	BRA         L_isAllBlack2
0x041C	0xAE81      	BTFSS       PORTB, 7 
0x041E	0xD005      	BRA         L_isAllBlack2
L__isAllBlack461:
;sensorpanel.h,17 :: 		return 1;
0x0420	0x0E01      	MOVLW       1
0x0422	0x6E00      	MOVWF       R0 
0x0424	0x0E00      	MOVLW       0
0x0426	0x6E01      	MOVWF       R1 
0x0428	0x0012      	RETURN      0
;sensorpanel.h,18 :: 		}
L_isAllBlack2:
;sensorpanel.h,20 :: 		return 0;
0x042A	0x6A00      	CLRF        R0 
0x042C	0x6A01      	CLRF        R1 
;sensorpanel.h,21 :: 		}
0x042E	0x0012      	RETURN      0
; end of _isAllBlack
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x0430	0x9494      	BCF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,56 :: 		
0x0432	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x0434	0x0E0C      	MOVLW       12
0x0436	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
0x0438	0x0012      	RETURN      0
; end of _PWM1_Start
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x043A	0x9294      	BCF         TRISC1_bit, 1 
;__Lib_PWM_c21.c,21 :: 		
0x043C	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x043E	0x0E0C      	MOVLW       12
0x0440	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
0x0442	0x0012      	RETURN      0
; end of _PWM2_Start
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0444	0x6ABB      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x0446	0x98BA      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x0448	0x9ABA      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
0x044A	0x0012      	RETURN      0
; end of _PWM2_Init
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x044C	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x044E	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x0450	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
0x0452	0x0012      	RETURN      0
; end of _PWM1_Init
_moveForward:
;motion.h,65 :: 		void moveForward(int pwmLeft, int pwmRight){
;motion.h,66 :: 		motorLeft_foward(pwmLeft);
0x0454	0xF12AC123  	MOVFF       FARG_moveForward_pwmLeft, FARG_motorLeft_foward_pwm
0x0458	0xF12BC124  	MOVFF       FARG_moveForward_pwmLeft+1, FARG_motorLeft_foward_pwm+1
0x045C	0xDE8C      	RCALL       _motorLeft_foward
;motion.h,67 :: 		motorRight_foward(pwmRight);
0x045E	0xF12AC125  	MOVFF       FARG_moveForward_pwmRight, FARG_motorRight_foward_pwm
0x0462	0xF12BC126  	MOVFF       FARG_moveForward_pwmRight+1, FARG_motorRight_foward_pwm+1
0x0466	0xDE74      	RCALL       _motorRight_foward
;motion.h,68 :: 		}
0x0468	0x0012      	RETURN      0
; end of _moveForward
_rotateByDegree:
;motion.h,95 :: 		void rotateByDegree(int degree){
;motion.h,96 :: 		if( degree == -90 ){
0x046A	0x0EFF      	MOVLW       255
0x046C	0x0101      	MOVLB       1
0x046E	0x1924      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x0470	0xE102      	BNZ         L__rotateByDegree563
0x0472	0x0EA6      	MOVLW       166
0x0474	0x1923      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree563:
0x0476	0xE114      	BNZ         L_rotateByDegree8
;motion.h,97 :: 		rotateAntiClockwise(255);
0x0478	0x0EFF      	MOVLW       255
0x047A	0x6F27      	MOVWF       FARG_rotateAntiClockwise_pwm, 1
0x047C	0x0E00      	MOVLW       0
0x047E	0x6F28      	MOVWF       FARG_rotateAntiClockwise_pwm+1, 1
0x0480	0xDEAB      	RCALL       _rotateAntiClockwise
;motion.h,98 :: 		delay_ms(220);
0x0482	0x0E06      	MOVLW       6
0x0484	0x6E0B      	MOVWF       R11, 0
0x0486	0x0E95      	MOVLW       149
0x0488	0x6E0C      	MOVWF       R12, 0
0x048A	0x0E8C      	MOVLW       140
0x048C	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree9:
0x048E	0x2E0D      	DECFSZ      R13, 1, 0
0x0490	0xD7FE      	BRA         L_rotateByDegree9
0x0492	0x2E0C      	DECFSZ      R12, 1, 0
0x0494	0xD7FC      	BRA         L_rotateByDegree9
0x0496	0x2E0B      	DECFSZ      R11, 1, 0
0x0498	0xD7FA      	BRA         L_rotateByDegree9
0x049A	0x0000      	NOP
;motion.h,99 :: 		stop();
0x049C	0xDEA8      	RCALL       _stop
;motion.h,100 :: 		}
0x049E	0xD01A      	BRA         L_rotateByDegree10
L_rotateByDegree8:
;motion.h,101 :: 		else if( degree == 90 ){
0x04A0	0x0E00      	MOVLW       0
0x04A2	0x0101      	MOVLB       1
0x04A4	0x1924      	XORWF       FARG_rotateByDegree_degree+1, 0, 1
0x04A6	0xE102      	BNZ         L__rotateByDegree564
0x04A8	0x0E5A      	MOVLW       90
0x04AA	0x1923      	XORWF       FARG_rotateByDegree_degree, 0, 1
L__rotateByDegree564:
0x04AC	0xE113      	BNZ         L_rotateByDegree11
;motion.h,102 :: 		rotateClockwise(255);
0x04AE	0x0EFF      	MOVLW       255
0x04B0	0x6F27      	MOVWF       FARG_rotateClockwise_pwm, 1
0x04B2	0x0E00      	MOVLW       0
0x04B4	0x6F28      	MOVWF       FARG_rotateClockwise_pwm+1, 1
0x04B6	0xDE6B      	RCALL       _rotateClockwise
;motion.h,103 :: 		delay_ms(220);
0x04B8	0x0E06      	MOVLW       6
0x04BA	0x6E0B      	MOVWF       R11, 0
0x04BC	0x0E95      	MOVLW       149
0x04BE	0x6E0C      	MOVWF       R12, 0
0x04C0	0x0E8C      	MOVLW       140
0x04C2	0x6E0D      	MOVWF       R13, 0
L_rotateByDegree12:
0x04C4	0x2E0D      	DECFSZ      R13, 1, 0
0x04C6	0xD7FE      	BRA         L_rotateByDegree12
0x04C8	0x2E0C      	DECFSZ      R12, 1, 0
0x04CA	0xD7FC      	BRA         L_rotateByDegree12
0x04CC	0x2E0B      	DECFSZ      R11, 1, 0
0x04CE	0xD7FA      	BRA         L_rotateByDegree12
0x04D0	0x0000      	NOP
;motion.h,104 :: 		stop();
0x04D2	0xDE8D      	RCALL       _stop
;motion.h,105 :: 		}
L_rotateByDegree11:
L_rotateByDegree10:
;motion.h,106 :: 		}
0x04D4	0x0012      	RETURN      0
; end of _rotateByDegree
_turnLeft:
;motion.h,75 :: 		void turnLeft(int pwmRight){
;motion.h,76 :: 		motorRight_foward(pwmRight);
0x04D6	0xF12AC123  	MOVFF       FARG_turnLeft_pwmRight, FARG_motorRight_foward_pwm
0x04DA	0xF12BC124  	MOVFF       FARG_turnLeft_pwmRight+1, FARG_motorRight_foward_pwm+1
0x04DE	0xDE38      	RCALL       _motorRight_foward
;motion.h,77 :: 		motorLeft_stop();
0x04E0	0xDE50      	RCALL       _motorLeft_stop
;motion.h,78 :: 		}
0x04E2	0x0012      	RETURN      0
; end of _turnLeft
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x04E4	0x0E5C      	MOVLW       _UART1_Write
0x04E6	0x0101      	MOVLB       1
0x04E8	0x6F11      	MOVWF       _UART_Wr_Ptr, 1
0x04EA	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x04EC	0x6F12      	MOVWF       _UART_Wr_Ptr+1, 1
0x04EE	0x0E2A      	MOVLW       FARG_UART1_Write_data_
0x04F0	0x6F13      	MOVWF       _UART_Wr_Ptr+2, 1
0x04F2	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x04F4	0x6F14      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x04F6	0x0EFF      	MOVLW       _UART1_Read
0x04F8	0x6F19      	MOVWF       _UART_Rd_Ptr, 1
0x04FA	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x04FC	0x6F1A      	MOVWF       _UART_Rd_Ptr+1, 1
0x04FE	0x0E00      	MOVLW       0
0x0500	0x6F1B      	MOVWF       _UART_Rd_Ptr+2, 1
0x0502	0x0E00      	MOVLW       0
0x0504	0x6F1C      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0506	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0508	0x6F1D      	MOVWF       _UART_Rdy_Ptr, 1
0x050A	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x050C	0x6F1E      	MOVWF       _UART_Rdy_Ptr+1, 1
0x050E	0x0E00      	MOVLW       0
0x0510	0x6F1F      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0512	0x0E00      	MOVLW       0
0x0514	0x6F20      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0516	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0518	0x6F15      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x051A	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x051C	0x6F16      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x051E	0x0E00      	MOVLW       0
0x0520	0x6F17      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0522	0x0E00      	MOVLW       0
0x0524	0x6F18      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0526	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0528	0x0E90      	MOVLW       144
0x052A	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x052C	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x052E	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0530	0xAA9E      	BTFSS       PIR1, 5 
0x0532	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0534	0xF000CFAE  	MOVFF       RCREG, R0
0x0538	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
0x053A	0x0012      	RETURN      0
; end of _UART1_Init
_isAllWhite:
;sensorpanel.h,23 :: 		int isAllWhite(){
;sensorpanel.h,24 :: 		if( Scout==0 && Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0){
0x053C	0xBA81      	BTFSC       PORTB, 5 
0x053E	0xD017      	BRA         L_isAllWhite6
0x0540	0xB881      	BTFSC       PORTB, 4 
0x0542	0xD015      	BRA         L_isAllWhite6
0x0544	0xB681      	BTFSC       PORTB, 3 
0x0546	0xD013      	BRA         L_isAllWhite6
0x0548	0xB883      	BTFSC       PORTD, 4 
0x054A	0xD011      	BRA         L_isAllWhite6
0x054C	0xBA83      	BTFSC       PORTD, 5 
0x054E	0xD00F      	BRA         L_isAllWhite6
0x0550	0xBC83      	BTFSC       PORTD, 6 
0x0552	0xD00D      	BRA         L_isAllWhite6
0x0554	0xBE83      	BTFSC       PORTD, 7 
0x0556	0xD00B      	BRA         L_isAllWhite6
0x0558	0xB481      	BTFSC       PORTB, 2 
0x055A	0xD009      	BRA         L_isAllWhite6
0x055C	0xBC81      	BTFSC       PORTB, 6 
0x055E	0xD007      	BRA         L_isAllWhite6
0x0560	0xBE81      	BTFSC       PORTB, 7 
0x0562	0xD005      	BRA         L_isAllWhite6
L__isAllWhite462:
;sensorpanel.h,25 :: 		return 1;
0x0564	0x0E01      	MOVLW       1
0x0566	0x6E00      	MOVWF       R0 
0x0568	0x0E00      	MOVLW       0
0x056A	0x6E01      	MOVWF       R1 
0x056C	0x0012      	RETURN      0
;sensorpanel.h,26 :: 		}
L_isAllWhite6:
;sensorpanel.h,28 :: 		return 0;
0x056E	0x6A00      	CLRF        R0 
0x0570	0x6A01      	CLRF        R1 
;sensorpanel.h,29 :: 		}
0x0572	0x0012      	RETURN      0
; end of _isAllWhite
_lineFollowNormalWorked:
;linefollow.h,18 :: 		void lineFollowNormalWorked(){
;linefollow.h,19 :: 		if(Scout == 1){
0x0574	0xAA81      	BTFSS       PORTB, 5 
0x0576	0xD101      	BRA         L_lineFollowNormalWorked53
;linefollow.h,21 :: 		if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x0578	0xB883      	BTFSC       PORTD, 4 
0x057A	0xD012      	BRA         L_lineFollowNormalWorked56
0x057C	0xAA83      	BTFSS       PORTD, 5 
0x057E	0xD010      	BRA         L_lineFollowNormalWorked56
0x0580	0xAC83      	BTFSS       PORTD, 6 
0x0582	0xD00E      	BRA         L_lineFollowNormalWorked56
0x0584	0xBE83      	BTFSC       PORTD, 7 
0x0586	0xD00C      	BRA         L_lineFollowNormalWorked56
0x0588	0xB481      	BTFSC       PORTB, 2 
0x058A	0xD00A      	BRA         L_lineFollowNormalWorked56
L__lineFollowNormalWorked496:
;linefollow.h,22 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x058C	0xF123C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x0590	0xF124C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x0594	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0598	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x059C	0xDF5B      	RCALL       _moveForward
0x059E	0xD0EC      	BRA         L_lineFollowNormalWorked57
L_lineFollowNormalWorked56:
;linefollow.h,23 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x05A0	0xB883      	BTFSC       PORTD, 4 
0x05A2	0xD012      	BRA         L_lineFollowNormalWorked60
0x05A4	0xAA83      	BTFSS       PORTD, 5 
0x05A6	0xD010      	BRA         L_lineFollowNormalWorked60
0x05A8	0xAC83      	BTFSS       PORTD, 6 
0x05AA	0xD00E      	BRA         L_lineFollowNormalWorked60
0x05AC	0xAE83      	BTFSS       PORTD, 7 
0x05AE	0xD00C      	BRA         L_lineFollowNormalWorked60
0x05B0	0xB481      	BTFSC       PORTB, 2 
0x05B2	0xD00A      	BRA         L_lineFollowNormalWorked60
L__lineFollowNormalWorked495:
;linefollow.h,24 :: 		moveForward(FAST_PWM,FAST_PWM);
0x05B4	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x05B8	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x05BC	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x05C0	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x05C4	0xDF47      	RCALL       _moveForward
0x05C6	0xD0D8      	BRA         L_lineFollowNormalWorked61
L_lineFollowNormalWorked60:
;linefollow.h,25 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x05C8	0xB883      	BTFSC       PORTD, 4 
0x05CA	0xD012      	BRA         L_lineFollowNormalWorked64
0x05CC	0xBA83      	BTFSC       PORTD, 5 
0x05CE	0xD010      	BRA         L_lineFollowNormalWorked64
0x05D0	0xAC83      	BTFSS       PORTD, 6 
0x05D2	0xD00E      	BRA         L_lineFollowNormalWorked64
0x05D4	0xBE83      	BTFSC       PORTD, 7 
0x05D6	0xD00C      	BRA         L_lineFollowNormalWorked64
0x05D8	0xB481      	BTFSC       PORTB, 2 
0x05DA	0xD00A      	BRA         L_lineFollowNormalWorked64
L__lineFollowNormalWorked494:
;linefollow.h,26 :: 		moveForward(FAST_PWM,FAST_PWM);
0x05DC	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x05E0	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x05E4	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x05E8	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x05EC	0xDF33      	RCALL       _moveForward
0x05EE	0xD0C4      	BRA         L_lineFollowNormalWorked65
L_lineFollowNormalWorked64:
;linefollow.h,27 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x05F0	0xB883      	BTFSC       PORTD, 4 
0x05F2	0xD012      	BRA         L_lineFollowNormalWorked68
0x05F4	0xBA83      	BTFSC       PORTD, 5 
0x05F6	0xD010      	BRA         L_lineFollowNormalWorked68
0x05F8	0xAC83      	BTFSS       PORTD, 6 
0x05FA	0xD00E      	BRA         L_lineFollowNormalWorked68
0x05FC	0xAE83      	BTFSS       PORTD, 7 
0x05FE	0xD00C      	BRA         L_lineFollowNormalWorked68
0x0600	0xB481      	BTFSC       PORTB, 2 
0x0602	0xD00A      	BRA         L_lineFollowNormalWorked68
L__lineFollowNormalWorked493:
;linefollow.h,28 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x0604	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0608	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x060C	0xF125C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x0610	0xF126C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x0614	0xDF1F      	RCALL       _moveForward
0x0616	0xD0B0      	BRA         L_lineFollowNormalWorked69
L_lineFollowNormalWorked68:
;linefollow.h,33 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x0618	0xA883      	BTFSS       PORTD, 4 
0x061A	0xD00E      	BRA         L_lineFollowNormalWorked72
0x061C	0xBA83      	BTFSC       PORTD, 5 
0x061E	0xD00C      	BRA         L_lineFollowNormalWorked72
0x0620	0xBC83      	BTFSC       PORTD, 6 
0x0622	0xD00A      	BRA         L_lineFollowNormalWorked72
0x0624	0xBE83      	BTFSC       PORTD, 7 
0x0626	0xD008      	BRA         L_lineFollowNormalWorked72
0x0628	0xB481      	BTFSC       PORTB, 2 
0x062A	0xD006      	BRA         L_lineFollowNormalWorked72
L__lineFollowNormalWorked492:
;linefollow.h,35 :: 		turnLeft(FAST_PWM);
0x062C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x0630	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0634	0xDF50      	RCALL       _turnLeft
0x0636	0xD0A0      	BRA         L_lineFollowNormalWorked73
L_lineFollowNormalWorked72:
;linefollow.h,36 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x0638	0xA883      	BTFSS       PORTD, 4 
0x063A	0xD00E      	BRA         L_lineFollowNormalWorked76
0x063C	0xAA83      	BTFSS       PORTD, 5 
0x063E	0xD00C      	BRA         L_lineFollowNormalWorked76
0x0640	0xBC83      	BTFSC       PORTD, 6 
0x0642	0xD00A      	BRA         L_lineFollowNormalWorked76
0x0644	0xBE83      	BTFSC       PORTD, 7 
0x0646	0xD008      	BRA         L_lineFollowNormalWorked76
0x0648	0xB481      	BTFSC       PORTB, 2 
0x064A	0xD006      	BRA         L_lineFollowNormalWorked76
L__lineFollowNormalWorked491:
;linefollow.h,38 :: 		turnLeft(FAST_PWM);
0x064C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x0650	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0654	0xDF40      	RCALL       _turnLeft
0x0656	0xD090      	BRA         L_lineFollowNormalWorked77
L_lineFollowNormalWorked76:
;linefollow.h,39 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x0658	0xA883      	BTFSS       PORTD, 4 
0x065A	0xD00E      	BRA         L_lineFollowNormalWorked80
0x065C	0xAA83      	BTFSS       PORTD, 5 
0x065E	0xD00C      	BRA         L_lineFollowNormalWorked80
0x0660	0xAC83      	BTFSS       PORTD, 6 
0x0662	0xD00A      	BRA         L_lineFollowNormalWorked80
0x0664	0xBE83      	BTFSC       PORTD, 7 
0x0666	0xD008      	BRA         L_lineFollowNormalWorked80
0x0668	0xB481      	BTFSC       PORTB, 2 
0x066A	0xD006      	BRA         L_lineFollowNormalWorked80
L__lineFollowNormalWorked490:
;linefollow.h,41 :: 		turnLeft(FAST_PWM);
0x066C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x0670	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0674	0xDF30      	RCALL       _turnLeft
0x0676	0xD080      	BRA         L_lineFollowNormalWorked81
L_lineFollowNormalWorked80:
;linefollow.h,42 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x0678	0xB883      	BTFSC       PORTD, 4 
0x067A	0xD00E      	BRA         L_lineFollowNormalWorked84
0x067C	0xAA83      	BTFSS       PORTD, 5 
0x067E	0xD00C      	BRA         L_lineFollowNormalWorked84
0x0680	0xBC83      	BTFSC       PORTD, 6 
0x0682	0xD00A      	BRA         L_lineFollowNormalWorked84
0x0684	0xBE83      	BTFSC       PORTD, 7 
0x0686	0xD008      	BRA         L_lineFollowNormalWorked84
0x0688	0xB481      	BTFSC       PORTB, 2 
0x068A	0xD006      	BRA         L_lineFollowNormalWorked84
L__lineFollowNormalWorked489:
;linefollow.h,44 :: 		turnLeft(FAST_PWM);
0x068C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x0690	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0694	0xDF20      	RCALL       _turnLeft
0x0696	0xD070      	BRA         L_lineFollowNormalWorked85
L_lineFollowNormalWorked84:
;linefollow.h,47 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x0698	0xB883      	BTFSC       PORTD, 4 
0x069A	0xD00E      	BRA         L_lineFollowNormalWorked88
0x069C	0xBA83      	BTFSC       PORTD, 5 
0x069E	0xD00C      	BRA         L_lineFollowNormalWorked88
0x06A0	0xBC83      	BTFSC       PORTD, 6 
0x06A2	0xD00A      	BRA         L_lineFollowNormalWorked88
0x06A4	0xAE83      	BTFSS       PORTD, 7 
0x06A6	0xD008      	BRA         L_lineFollowNormalWorked88
0x06A8	0xB481      	BTFSC       PORTB, 2 
0x06AA	0xD006      	BRA         L_lineFollowNormalWorked88
L__lineFollowNormalWorked488:
;linefollow.h,49 :: 		turnRight(FAST_PWM);
0x06AC	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x06B0	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x06B4	0xDD9F      	RCALL       _turnRight
0x06B6	0xD060      	BRA         L_lineFollowNormalWorked89
L_lineFollowNormalWorked88:
;linefollow.h,50 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x06B8	0xB883      	BTFSC       PORTD, 4 
0x06BA	0xD00E      	BRA         L_lineFollowNormalWorked92
0x06BC	0xBA83      	BTFSC       PORTD, 5 
0x06BE	0xD00C      	BRA         L_lineFollowNormalWorked92
0x06C0	0xAC83      	BTFSS       PORTD, 6 
0x06C2	0xD00A      	BRA         L_lineFollowNormalWorked92
0x06C4	0xAE83      	BTFSS       PORTD, 7 
0x06C6	0xD008      	BRA         L_lineFollowNormalWorked92
0x06C8	0xA481      	BTFSS       PORTB, 2 
0x06CA	0xD006      	BRA         L_lineFollowNormalWorked92
L__lineFollowNormalWorked487:
;linefollow.h,52 :: 		turnRight(FAST_PWM);
0x06CC	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x06D0	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x06D4	0xDD8F      	RCALL       _turnRight
0x06D6	0xD050      	BRA         L_lineFollowNormalWorked93
L_lineFollowNormalWorked92:
;linefollow.h,53 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x06D8	0xB883      	BTFSC       PORTD, 4 
0x06DA	0xD00E      	BRA         L_lineFollowNormalWorked96
0x06DC	0xBA83      	BTFSC       PORTD, 5 
0x06DE	0xD00C      	BRA         L_lineFollowNormalWorked96
0x06E0	0xBC83      	BTFSC       PORTD, 6 
0x06E2	0xD00A      	BRA         L_lineFollowNormalWorked96
0x06E4	0xAE83      	BTFSS       PORTD, 7 
0x06E6	0xD008      	BRA         L_lineFollowNormalWorked96
0x06E8	0xA481      	BTFSS       PORTB, 2 
0x06EA	0xD006      	BRA         L_lineFollowNormalWorked96
L__lineFollowNormalWorked486:
;linefollow.h,55 :: 		turnRight(FAST_PWM);
0x06EC	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x06F0	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x06F4	0xDD7F      	RCALL       _turnRight
0x06F6	0xD040      	BRA         L_lineFollowNormalWorked97
L_lineFollowNormalWorked96:
;linefollow.h,56 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x06F8	0xB883      	BTFSC       PORTD, 4 
0x06FA	0xD00E      	BRA         L_lineFollowNormalWorked100
0x06FC	0xBA83      	BTFSC       PORTD, 5 
0x06FE	0xD00C      	BRA         L_lineFollowNormalWorked100
0x0700	0xBC83      	BTFSC       PORTD, 6 
0x0702	0xD00A      	BRA         L_lineFollowNormalWorked100
0x0704	0xBE83      	BTFSC       PORTD, 7 
0x0706	0xD008      	BRA         L_lineFollowNormalWorked100
0x0708	0xA481      	BTFSS       PORTB, 2 
0x070A	0xD006      	BRA         L_lineFollowNormalWorked100
L__lineFollowNormalWorked485:
;linefollow.h,58 :: 		turnRight(FAST_PWM);
0x070C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x0710	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x0714	0xDD6F      	RCALL       _turnRight
0x0716	0xD030      	BRA         L_lineFollowNormalWorked101
L_lineFollowNormalWorked100:
;linefollow.h,61 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x0718	0xA883      	BTFSS       PORTD, 4 
0x071A	0xD012      	BRA         L_lineFollowNormalWorked104
0x071C	0xAA83      	BTFSS       PORTD, 5 
0x071E	0xD010      	BRA         L_lineFollowNormalWorked104
0x0720	0xAC83      	BTFSS       PORTD, 6 
0x0722	0xD00E      	BRA         L_lineFollowNormalWorked104
0x0724	0xAE83      	BTFSS       PORTD, 7 
0x0726	0xD00C      	BRA         L_lineFollowNormalWorked104
0x0728	0xB481      	BTFSC       PORTB, 2 
0x072A	0xD00A      	BRA         L_lineFollowNormalWorked104
L__lineFollowNormalWorked484:
;linefollow.h,62 :: 		moveForward(FAST_PWM,FAST_PWM);
0x072C	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0730	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x0734	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0738	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x073C	0xDE8B      	RCALL       _moveForward
0x073E	0xD01C      	BRA         L_lineFollowNormalWorked105
L_lineFollowNormalWorked104:
;linefollow.h,63 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x0740	0xB883      	BTFSC       PORTD, 4 
0x0742	0xD012      	BRA         L_lineFollowNormalWorked108
0x0744	0xAA83      	BTFSS       PORTD, 5 
0x0746	0xD010      	BRA         L_lineFollowNormalWorked108
0x0748	0xAC83      	BTFSS       PORTD, 6 
0x074A	0xD00E      	BRA         L_lineFollowNormalWorked108
0x074C	0xAE83      	BTFSS       PORTD, 7 
0x074E	0xD00C      	BRA         L_lineFollowNormalWorked108
0x0750	0xA481      	BTFSS       PORTB, 2 
0x0752	0xD00A      	BRA         L_lineFollowNormalWorked108
L__lineFollowNormalWorked483:
;linefollow.h,64 :: 		moveForward(FAST_PWM,FAST_PWM);
0x0754	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0758	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x075C	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0760	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x0764	0xDE77      	RCALL       _moveForward
0x0766	0xD008      	BRA         L_lineFollowNormalWorked109
L_lineFollowNormalWorked108:
;linefollow.h,66 :: 		else if(isAllBlack()){
0x0768	0xDE47      	RCALL       _isAllBlack
0x076A	0x5000      	MOVF        R0, 0 
0x076C	0x1001      	IORWF       R1, 0 
0x076E	0xE002      	BZ          L_lineFollowNormalWorked110
;linefollow.h,69 :: 		sendSensorStatus();
0x0770	0xDD48      	RCALL       _sendSensorStatus
;linefollow.h,70 :: 		}
0x0772	0xD002      	BRA         L_lineFollowNormalWorked111
L_lineFollowNormalWorked110:
;linefollow.h,72 :: 		stop();
0x0774	0xDD3C      	RCALL       _stop
;linefollow.h,73 :: 		sendSensorStatus();
0x0776	0xDD45      	RCALL       _sendSensorStatus
;linefollow.h,75 :: 		}
L_lineFollowNormalWorked111:
L_lineFollowNormalWorked109:
L_lineFollowNormalWorked105:
L_lineFollowNormalWorked101:
L_lineFollowNormalWorked97:
L_lineFollowNormalWorked93:
L_lineFollowNormalWorked89:
L_lineFollowNormalWorked85:
L_lineFollowNormalWorked81:
L_lineFollowNormalWorked77:
L_lineFollowNormalWorked73:
L_lineFollowNormalWorked69:
L_lineFollowNormalWorked65:
L_lineFollowNormalWorked61:
L_lineFollowNormalWorked57:
;linefollow.h,76 :: 		}
0x0778	0xD199      	BRA         L_lineFollowNormalWorked112
L_lineFollowNormalWorked53:
;linefollow.h,83 :: 		if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x077A	0xA881      	BTFSS       PORTB, 4 
0x077C	0xD017      	BRA         L_lineFollowNormalWorked115
0x077E	0xA681      	BTFSS       PORTB, 3 
0x0780	0xD015      	BRA         L_lineFollowNormalWorked115
0x0782	0xA883      	BTFSS       PORTD, 4 
0x0784	0xD013      	BRA         L_lineFollowNormalWorked115
0x0786	0xAA83      	BTFSS       PORTD, 5 
0x0788	0xD011      	BRA         L_lineFollowNormalWorked115
0x078A	0xAC83      	BTFSS       PORTD, 6 
0x078C	0xD00F      	BRA         L_lineFollowNormalWorked115
0x078E	0xBE83      	BTFSC       PORTD, 7 
0x0790	0xD00D      	BRA         L_lineFollowNormalWorked115
0x0792	0xB481      	BTFSC       PORTB, 2 
0x0794	0xD00B      	BRA         L_lineFollowNormalWorked115
0x0796	0xBC81      	BTFSC       PORTB, 6 
0x0798	0xD009      	BRA         L_lineFollowNormalWorked115
0x079A	0xBE81      	BTFSC       PORTB, 7 
0x079C	0xD007      	BRA         L_lineFollowNormalWorked115
L__lineFollowNormalWorked482:
0x079E	0x0101      	MOVLB       1
;linefollow.h,84 :: 		rotateByDegree(-90);
0x07A0	0x0EA6      	MOVLW       166
0x07A2	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x07A4	0x0EFF      	MOVLW       255
0x07A6	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x07A8	0xDE60      	RCALL       _rotateByDegree
0x07AA	0xD180      	BRA         L_lineFollowNormalWorked116
L_lineFollowNormalWorked115:
;linefollow.h,85 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0 && Sensor8==0 && Sensor9==0)
0x07AC	0xA881      	BTFSS       PORTB, 4 
0x07AE	0xD017      	BRA         L_lineFollowNormalWorked119
0x07B0	0xA681      	BTFSS       PORTB, 3 
0x07B2	0xD015      	BRA         L_lineFollowNormalWorked119
0x07B4	0xA883      	BTFSS       PORTD, 4 
0x07B6	0xD013      	BRA         L_lineFollowNormalWorked119
0x07B8	0xAA83      	BTFSS       PORTD, 5 
0x07BA	0xD011      	BRA         L_lineFollowNormalWorked119
0x07BC	0xAC83      	BTFSS       PORTD, 6 
0x07BE	0xD00F      	BRA         L_lineFollowNormalWorked119
0x07C0	0xAE83      	BTFSS       PORTD, 7 
0x07C2	0xD00D      	BRA         L_lineFollowNormalWorked119
0x07C4	0xB481      	BTFSC       PORTB, 2 
0x07C6	0xD00B      	BRA         L_lineFollowNormalWorked119
0x07C8	0xBC81      	BTFSC       PORTB, 6 
0x07CA	0xD009      	BRA         L_lineFollowNormalWorked119
0x07CC	0xBE81      	BTFSC       PORTB, 7 
0x07CE	0xD007      	BRA         L_lineFollowNormalWorked119
L__lineFollowNormalWorked481:
;linefollow.h,86 :: 		rotateByDegree(-90);
0x07D0	0x0EA6      	MOVLW       166
0x07D2	0x0101      	MOVLB       1
0x07D4	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x07D6	0x0EFF      	MOVLW       255
0x07D8	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x07DA	0xDE47      	RCALL       _rotateByDegree
0x07DC	0xD167      	BRA         L_lineFollowNormalWorked120
L_lineFollowNormalWorked119:
;linefollow.h,87 :: 		else if( Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==0 && Sensor9==0)
0x07DE	0xA881      	BTFSS       PORTB, 4 
0x07E0	0xD017      	BRA         L_lineFollowNormalWorked123
0x07E2	0xA681      	BTFSS       PORTB, 3 
0x07E4	0xD015      	BRA         L_lineFollowNormalWorked123
0x07E6	0xA883      	BTFSS       PORTD, 4 
0x07E8	0xD013      	BRA         L_lineFollowNormalWorked123
0x07EA	0xAA83      	BTFSS       PORTD, 5 
0x07EC	0xD011      	BRA         L_lineFollowNormalWorked123
0x07EE	0xAC83      	BTFSS       PORTD, 6 
0x07F0	0xD00F      	BRA         L_lineFollowNormalWorked123
0x07F2	0xAE83      	BTFSS       PORTD, 7 
0x07F4	0xD00D      	BRA         L_lineFollowNormalWorked123
0x07F6	0xA481      	BTFSS       PORTB, 2 
0x07F8	0xD00B      	BRA         L_lineFollowNormalWorked123
0x07FA	0xBC81      	BTFSC       PORTB, 6 
0x07FC	0xD009      	BRA         L_lineFollowNormalWorked123
0x07FE	0xBE81      	BTFSC       PORTB, 7 
0x0800	0xD007      	BRA         L_lineFollowNormalWorked123
L__lineFollowNormalWorked480:
;linefollow.h,88 :: 		rotateByDegree(-90);
0x0802	0x0EA6      	MOVLW       166
0x0804	0x0101      	MOVLB       1
0x0806	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x0808	0x0EFF      	MOVLW       255
0x080A	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x080C	0xDE2E      	RCALL       _rotateByDegree
0x080E	0xD14E      	BRA         L_lineFollowNormalWorked124
L_lineFollowNormalWorked123:
;linefollow.h,91 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x0810	0xB881      	BTFSC       PORTB, 4 
0x0812	0xD017      	BRA         L_lineFollowNormalWorked127
0x0814	0xB681      	BTFSC       PORTB, 3 
0x0816	0xD015      	BRA         L_lineFollowNormalWorked127
0x0818	0xA883      	BTFSS       PORTD, 4 
0x081A	0xD013      	BRA         L_lineFollowNormalWorked127
0x081C	0xAA83      	BTFSS       PORTD, 5 
0x081E	0xD011      	BRA         L_lineFollowNormalWorked127
0x0820	0xAC83      	BTFSS       PORTD, 6 
0x0822	0xD00F      	BRA         L_lineFollowNormalWorked127
0x0824	0xAE83      	BTFSS       PORTD, 7 
0x0826	0xD00D      	BRA         L_lineFollowNormalWorked127
0x0828	0xA481      	BTFSS       PORTB, 2 
0x082A	0xD00B      	BRA         L_lineFollowNormalWorked127
0x082C	0xAC81      	BTFSS       PORTB, 6 
0x082E	0xD009      	BRA         L_lineFollowNormalWorked127
0x0830	0xAE81      	BTFSS       PORTB, 7 
0x0832	0xD007      	BRA         L_lineFollowNormalWorked127
L__lineFollowNormalWorked479:
;linefollow.h,92 :: 		rotateByDegree(90);
0x0834	0x0E5A      	MOVLW       90
0x0836	0x0101      	MOVLB       1
0x0838	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x083A	0x0E00      	MOVLW       0
0x083C	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x083E	0xDE15      	RCALL       _rotateByDegree
0x0840	0xD135      	BRA         L_lineFollowNormalWorked128
L_lineFollowNormalWorked127:
;linefollow.h,93 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x0842	0xB881      	BTFSC       PORTB, 4 
0x0844	0xD017      	BRA         L_lineFollowNormalWorked131
0x0846	0xB681      	BTFSC       PORTB, 3 
0x0848	0xD015      	BRA         L_lineFollowNormalWorked131
0x084A	0xB883      	BTFSC       PORTD, 4 
0x084C	0xD013      	BRA         L_lineFollowNormalWorked131
0x084E	0xAA83      	BTFSS       PORTD, 5 
0x0850	0xD011      	BRA         L_lineFollowNormalWorked131
0x0852	0xAC83      	BTFSS       PORTD, 6 
0x0854	0xD00F      	BRA         L_lineFollowNormalWorked131
0x0856	0xAE83      	BTFSS       PORTD, 7 
0x0858	0xD00D      	BRA         L_lineFollowNormalWorked131
0x085A	0xA481      	BTFSS       PORTB, 2 
0x085C	0xD00B      	BRA         L_lineFollowNormalWorked131
0x085E	0xAC81      	BTFSS       PORTB, 6 
0x0860	0xD009      	BRA         L_lineFollowNormalWorked131
0x0862	0xAE81      	BTFSS       PORTB, 7 
0x0864	0xD007      	BRA         L_lineFollowNormalWorked131
L__lineFollowNormalWorked478:
;linefollow.h,94 :: 		rotateByDegree(90);
0x0866	0x0E5A      	MOVLW       90
0x0868	0x0101      	MOVLB       1
0x086A	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x086C	0x0E00      	MOVLW       0
0x086E	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x0870	0xDDFC      	RCALL       _rotateByDegree
0x0872	0xD11C      	BRA         L_lineFollowNormalWorked132
L_lineFollowNormalWorked131:
;linefollow.h,95 :: 		else if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1 && Sensor8==1 && Sensor9==1)
0x0874	0xB881      	BTFSC       PORTB, 4 
0x0876	0xD017      	BRA         L_lineFollowNormalWorked135
0x0878	0xB681      	BTFSC       PORTB, 3 
0x087A	0xD015      	BRA         L_lineFollowNormalWorked135
0x087C	0xB883      	BTFSC       PORTD, 4 
0x087E	0xD013      	BRA         L_lineFollowNormalWorked135
0x0880	0xBA83      	BTFSC       PORTD, 5 
0x0882	0xD011      	BRA         L_lineFollowNormalWorked135
0x0884	0xAC83      	BTFSS       PORTD, 6 
0x0886	0xD00F      	BRA         L_lineFollowNormalWorked135
0x0888	0xAE83      	BTFSS       PORTD, 7 
0x088A	0xD00D      	BRA         L_lineFollowNormalWorked135
0x088C	0xA481      	BTFSS       PORTB, 2 
0x088E	0xD00B      	BRA         L_lineFollowNormalWorked135
0x0890	0xAC81      	BTFSS       PORTB, 6 
0x0892	0xD009      	BRA         L_lineFollowNormalWorked135
0x0894	0xAE81      	BTFSS       PORTB, 7 
0x0896	0xD007      	BRA         L_lineFollowNormalWorked135
L__lineFollowNormalWorked477:
;linefollow.h,96 :: 		rotateByDegree(90);
0x0898	0x0E5A      	MOVLW       90
0x089A	0x0101      	MOVLB       1
0x089C	0x6F23      	MOVWF       FARG_rotateByDegree_degree, 1
0x089E	0x0E00      	MOVLW       0
0x08A0	0x6F24      	MOVWF       FARG_rotateByDegree_degree+1, 1
0x08A2	0xDDE3      	RCALL       _rotateByDegree
0x08A4	0xD103      	BRA         L_lineFollowNormalWorked136
L_lineFollowNormalWorked135:
;linefollow.h,101 :: 		else if( Sensor3==1 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x08A6	0xA883      	BTFSS       PORTD, 4 
0x08A8	0xD00E      	BRA         L_lineFollowNormalWorked139
0x08AA	0xBA83      	BTFSC       PORTD, 5 
0x08AC	0xD00C      	BRA         L_lineFollowNormalWorked139
0x08AE	0xBC83      	BTFSC       PORTD, 6 
0x08B0	0xD00A      	BRA         L_lineFollowNormalWorked139
0x08B2	0xBE83      	BTFSC       PORTD, 7 
0x08B4	0xD008      	BRA         L_lineFollowNormalWorked139
0x08B6	0xB481      	BTFSC       PORTB, 2 
0x08B8	0xD006      	BRA         L_lineFollowNormalWorked139
L__lineFollowNormalWorked476:
;linefollow.h,103 :: 		turnLeft(FAST_PWM);
0x08BA	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x08BE	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x08C2	0xDE09      	RCALL       _turnLeft
0x08C4	0xD0F3      	BRA         L_lineFollowNormalWorked140
L_lineFollowNormalWorked139:
;linefollow.h,104 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x08C6	0xA883      	BTFSS       PORTD, 4 
0x08C8	0xD00E      	BRA         L_lineFollowNormalWorked143
0x08CA	0xAA83      	BTFSS       PORTD, 5 
0x08CC	0xD00C      	BRA         L_lineFollowNormalWorked143
0x08CE	0xBC83      	BTFSC       PORTD, 6 
0x08D0	0xD00A      	BRA         L_lineFollowNormalWorked143
0x08D2	0xBE83      	BTFSC       PORTD, 7 
0x08D4	0xD008      	BRA         L_lineFollowNormalWorked143
0x08D6	0xB481      	BTFSC       PORTB, 2 
0x08D8	0xD006      	BRA         L_lineFollowNormalWorked143
L__lineFollowNormalWorked475:
;linefollow.h,106 :: 		turnLeft(FAST_PWM);
0x08DA	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x08DE	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x08E2	0xDDF9      	RCALL       _turnLeft
0x08E4	0xD0E3      	BRA         L_lineFollowNormalWorked144
L_lineFollowNormalWorked143:
;linefollow.h,107 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x08E6	0xA883      	BTFSS       PORTD, 4 
0x08E8	0xD00E      	BRA         L_lineFollowNormalWorked147
0x08EA	0xAA83      	BTFSS       PORTD, 5 
0x08EC	0xD00C      	BRA         L_lineFollowNormalWorked147
0x08EE	0xAC83      	BTFSS       PORTD, 6 
0x08F0	0xD00A      	BRA         L_lineFollowNormalWorked147
0x08F2	0xBE83      	BTFSC       PORTD, 7 
0x08F4	0xD008      	BRA         L_lineFollowNormalWorked147
0x08F6	0xB481      	BTFSC       PORTB, 2 
0x08F8	0xD006      	BRA         L_lineFollowNormalWorked147
L__lineFollowNormalWorked474:
;linefollow.h,109 :: 		turnLeft(FAST_PWM);
0x08FA	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x08FE	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0902	0xDDE9      	RCALL       _turnLeft
0x0904	0xD0D3      	BRA         L_lineFollowNormalWorked148
L_lineFollowNormalWorked147:
;linefollow.h,110 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==0 && Sensor6==0 && Sensor7==0)
0x0906	0xB883      	BTFSC       PORTD, 4 
0x0908	0xD00E      	BRA         L_lineFollowNormalWorked151
0x090A	0xAA83      	BTFSS       PORTD, 5 
0x090C	0xD00C      	BRA         L_lineFollowNormalWorked151
0x090E	0xBC83      	BTFSC       PORTD, 6 
0x0910	0xD00A      	BRA         L_lineFollowNormalWorked151
0x0912	0xBE83      	BTFSC       PORTD, 7 
0x0914	0xD008      	BRA         L_lineFollowNormalWorked151
0x0916	0xB481      	BTFSC       PORTB, 2 
0x0918	0xD006      	BRA         L_lineFollowNormalWorked151
L__lineFollowNormalWorked473:
;linefollow.h,112 :: 		turnLeft(FAST_PWM);
0x091A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnLeft_pwmRight
0x091E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnLeft_pwmRight+1
0x0922	0xDDD9      	RCALL       _turnLeft
0x0924	0xD0C3      	BRA         L_lineFollowNormalWorked152
L_lineFollowNormalWorked151:
;linefollow.h,115 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==0)
0x0926	0xB883      	BTFSC       PORTD, 4 
0x0928	0xD00E      	BRA         L_lineFollowNormalWorked155
0x092A	0xBA83      	BTFSC       PORTD, 5 
0x092C	0xD00C      	BRA         L_lineFollowNormalWorked155
0x092E	0xBC83      	BTFSC       PORTD, 6 
0x0930	0xD00A      	BRA         L_lineFollowNormalWorked155
0x0932	0xAE83      	BTFSS       PORTD, 7 
0x0934	0xD008      	BRA         L_lineFollowNormalWorked155
0x0936	0xB481      	BTFSC       PORTB, 2 
0x0938	0xD006      	BRA         L_lineFollowNormalWorked155
L__lineFollowNormalWorked472:
;linefollow.h,117 :: 		turnRight(FAST_PWM);
0x093A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x093E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x0942	0xDC58      	RCALL       _turnRight
0x0944	0xD0B3      	BRA         L_lineFollowNormalWorked156
L_lineFollowNormalWorked155:
;linefollow.h,118 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x0946	0xB883      	BTFSC       PORTD, 4 
0x0948	0xD00E      	BRA         L_lineFollowNormalWorked159
0x094A	0xBA83      	BTFSC       PORTD, 5 
0x094C	0xD00C      	BRA         L_lineFollowNormalWorked159
0x094E	0xAC83      	BTFSS       PORTD, 6 
0x0950	0xD00A      	BRA         L_lineFollowNormalWorked159
0x0952	0xAE83      	BTFSS       PORTD, 7 
0x0954	0xD008      	BRA         L_lineFollowNormalWorked159
0x0956	0xA481      	BTFSS       PORTB, 2 
0x0958	0xD006      	BRA         L_lineFollowNormalWorked159
L__lineFollowNormalWorked471:
;linefollow.h,120 :: 		turnRight(FAST_PWM);
0x095A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x095E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x0962	0xDC48      	RCALL       _turnRight
0x0964	0xD0A3      	BRA         L_lineFollowNormalWorked160
L_lineFollowNormalWorked159:
;linefollow.h,121 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==1 && Sensor7==1)
0x0966	0xB883      	BTFSC       PORTD, 4 
0x0968	0xD00E      	BRA         L_lineFollowNormalWorked163
0x096A	0xBA83      	BTFSC       PORTD, 5 
0x096C	0xD00C      	BRA         L_lineFollowNormalWorked163
0x096E	0xBC83      	BTFSC       PORTD, 6 
0x0970	0xD00A      	BRA         L_lineFollowNormalWorked163
0x0972	0xAE83      	BTFSS       PORTD, 7 
0x0974	0xD008      	BRA         L_lineFollowNormalWorked163
0x0976	0xA481      	BTFSS       PORTB, 2 
0x0978	0xD006      	BRA         L_lineFollowNormalWorked163
L__lineFollowNormalWorked470:
;linefollow.h,123 :: 		turnRight(FAST_PWM);
0x097A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x097E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x0982	0xDC38      	RCALL       _turnRight
0x0984	0xD093      	BRA         L_lineFollowNormalWorked164
L_lineFollowNormalWorked163:
;linefollow.h,124 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==0 && Sensor6==0 && Sensor7==1)
0x0986	0xB883      	BTFSC       PORTD, 4 
0x0988	0xD00E      	BRA         L_lineFollowNormalWorked167
0x098A	0xBA83      	BTFSC       PORTD, 5 
0x098C	0xD00C      	BRA         L_lineFollowNormalWorked167
0x098E	0xBC83      	BTFSC       PORTD, 6 
0x0990	0xD00A      	BRA         L_lineFollowNormalWorked167
0x0992	0xBE83      	BTFSC       PORTD, 7 
0x0994	0xD008      	BRA         L_lineFollowNormalWorked167
0x0996	0xA481      	BTFSS       PORTB, 2 
0x0998	0xD006      	BRA         L_lineFollowNormalWorked167
L__lineFollowNormalWorked469:
;linefollow.h,126 :: 		turnRight(FAST_PWM);
0x099A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_turnRight_pwmLeft
0x099E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_turnRight_pwmLeft+1
0x09A2	0xDC28      	RCALL       _turnRight
0x09A4	0xD083      	BRA         L_lineFollowNormalWorked168
L_lineFollowNormalWorked167:
;linefollow.h,129 :: 		else if( Sensor3==1 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x09A6	0xA883      	BTFSS       PORTD, 4 
0x09A8	0xD012      	BRA         L_lineFollowNormalWorked171
0x09AA	0xAA83      	BTFSS       PORTD, 5 
0x09AC	0xD010      	BRA         L_lineFollowNormalWorked171
0x09AE	0xAC83      	BTFSS       PORTD, 6 
0x09B0	0xD00E      	BRA         L_lineFollowNormalWorked171
0x09B2	0xAE83      	BTFSS       PORTD, 7 
0x09B4	0xD00C      	BRA         L_lineFollowNormalWorked171
0x09B6	0xB481      	BTFSC       PORTB, 2 
0x09B8	0xD00A      	BRA         L_lineFollowNormalWorked171
L__lineFollowNormalWorked468:
;linefollow.h,130 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x09BA	0xF123C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x09BE	0xF124C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x09C2	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x09C6	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x09CA	0xDD44      	RCALL       _moveForward
0x09CC	0xD06F      	BRA         L_lineFollowNormalWorked172
L_lineFollowNormalWorked171:
;linefollow.h,131 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==1)
0x09CE	0xB883      	BTFSC       PORTD, 4 
0x09D0	0xD012      	BRA         L_lineFollowNormalWorked175
0x09D2	0xAA83      	BTFSS       PORTD, 5 
0x09D4	0xD010      	BRA         L_lineFollowNormalWorked175
0x09D6	0xAC83      	BTFSS       PORTD, 6 
0x09D8	0xD00E      	BRA         L_lineFollowNormalWorked175
0x09DA	0xAE83      	BTFSS       PORTD, 7 
0x09DC	0xD00C      	BRA         L_lineFollowNormalWorked175
0x09DE	0xA481      	BTFSS       PORTB, 2 
0x09E0	0xD00A      	BRA         L_lineFollowNormalWorked175
L__lineFollowNormalWorked467:
;linefollow.h,132 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x09E2	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x09E6	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x09EA	0xF125C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x09EE	0xF126C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x09F2	0xDD30      	RCALL       _moveForward
0x09F4	0xD05B      	BRA         L_lineFollowNormalWorked176
L_lineFollowNormalWorked175:
;linefollow.h,135 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x09F6	0xB883      	BTFSC       PORTD, 4 
0x09F8	0xD012      	BRA         L_lineFollowNormalWorked179
0x09FA	0xAA83      	BTFSS       PORTD, 5 
0x09FC	0xD010      	BRA         L_lineFollowNormalWorked179
0x09FE	0xAC83      	BTFSS       PORTD, 6 
0x0A00	0xD00E      	BRA         L_lineFollowNormalWorked179
0x0A02	0xBE83      	BTFSC       PORTD, 7 
0x0A04	0xD00C      	BRA         L_lineFollowNormalWorked179
0x0A06	0xB481      	BTFSC       PORTB, 2 
0x0A08	0xD00A      	BRA         L_lineFollowNormalWorked179
L__lineFollowNormalWorked466:
;linefollow.h,136 :: 		moveForward(SLOW_PWM,FAST_PWM);
0x0A0A	0xF123C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmLeft
0x0A0E	0xF124C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmLeft+1
0x0A12	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0A16	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x0A1A	0xDD1C      	RCALL       _moveForward
0x0A1C	0xD047      	BRA         L_lineFollowNormalWorked180
L_lineFollowNormalWorked179:
;linefollow.h,137 :: 		else if( Sensor3==0 && Sensor4==1 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x0A1E	0xB883      	BTFSC       PORTD, 4 
0x0A20	0xD012      	BRA         L_lineFollowNormalWorked183
0x0A22	0xAA83      	BTFSS       PORTD, 5 
0x0A24	0xD010      	BRA         L_lineFollowNormalWorked183
0x0A26	0xAC83      	BTFSS       PORTD, 6 
0x0A28	0xD00E      	BRA         L_lineFollowNormalWorked183
0x0A2A	0xAE83      	BTFSS       PORTD, 7 
0x0A2C	0xD00C      	BRA         L_lineFollowNormalWorked183
0x0A2E	0xB481      	BTFSC       PORTB, 2 
0x0A30	0xD00A      	BRA         L_lineFollowNormalWorked183
L__lineFollowNormalWorked465:
;linefollow.h,138 :: 		moveForward(FAST_PWM,FAST_PWM);
0x0A32	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0A36	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x0A3A	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0A3E	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x0A42	0xDD08      	RCALL       _moveForward
0x0A44	0xD033      	BRA         L_lineFollowNormalWorked184
L_lineFollowNormalWorked183:
;linefollow.h,139 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==0 && Sensor7==0)
0x0A46	0xB883      	BTFSC       PORTD, 4 
0x0A48	0xD012      	BRA         L_lineFollowNormalWorked187
0x0A4A	0xBA83      	BTFSC       PORTD, 5 
0x0A4C	0xD010      	BRA         L_lineFollowNormalWorked187
0x0A4E	0xAC83      	BTFSS       PORTD, 6 
0x0A50	0xD00E      	BRA         L_lineFollowNormalWorked187
0x0A52	0xBE83      	BTFSC       PORTD, 7 
0x0A54	0xD00C      	BRA         L_lineFollowNormalWorked187
0x0A56	0xB481      	BTFSC       PORTB, 2 
0x0A58	0xD00A      	BRA         L_lineFollowNormalWorked187
L__lineFollowNormalWorked464:
;linefollow.h,140 :: 		moveForward(FAST_PWM,FAST_PWM);
0x0A5A	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0A5E	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x0A62	0xF125C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmRight
0x0A66	0xF126C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmRight+1
0x0A6A	0xDCF4      	RCALL       _moveForward
0x0A6C	0xD01F      	BRA         L_lineFollowNormalWorked188
L_lineFollowNormalWorked187:
;linefollow.h,141 :: 		else if( Sensor3==0 && Sensor4==0 && Sensor5==1 && Sensor6==1 && Sensor7==0)
0x0A6E	0xB883      	BTFSC       PORTD, 4 
0x0A70	0xD012      	BRA         L_lineFollowNormalWorked191
0x0A72	0xBA83      	BTFSC       PORTD, 5 
0x0A74	0xD010      	BRA         L_lineFollowNormalWorked191
0x0A76	0xAC83      	BTFSS       PORTD, 6 
0x0A78	0xD00E      	BRA         L_lineFollowNormalWorked191
0x0A7A	0xAE83      	BTFSS       PORTD, 7 
0x0A7C	0xD00C      	BRA         L_lineFollowNormalWorked191
0x0A7E	0xB481      	BTFSC       PORTB, 2 
0x0A80	0xD00A      	BRA         L_lineFollowNormalWorked191
L__lineFollowNormalWorked463:
;linefollow.h,142 :: 		moveForward(FAST_PWM,SLOW_PWM);
0x0A82	0xF123C0F2  	MOVFF       _FAST_PWM, FARG_moveForward_pwmLeft
0x0A86	0xF124C0F3  	MOVFF       _FAST_PWM+1, FARG_moveForward_pwmLeft+1
0x0A8A	0xF125C0EE  	MOVFF       _SLOW_PWM, FARG_moveForward_pwmRight
0x0A8E	0xF126C0EF  	MOVFF       _SLOW_PWM+1, FARG_moveForward_pwmRight+1
0x0A92	0xDCE0      	RCALL       _moveForward
0x0A94	0xD00B      	BRA         L_lineFollowNormalWorked192
L_lineFollowNormalWorked191:
;linefollow.h,145 :: 		else if(isAllWhite()){
0x0A96	0xDD52      	RCALL       _isAllWhite
0x0A98	0x5000      	MOVF        R0, 0 
0x0A9A	0x1001      	IORWF       R1, 0 
0x0A9C	0xE003      	BZ          L_lineFollowNormalWorked193
;linefollow.h,148 :: 		sendSensorStatus();
0x0A9E	0xF001EC01  	CALL        _sendSensorStatus, 0
;linefollow.h,149 :: 		}
0x0AA2	0xD004      	BRA         L_lineFollowNormalWorked194
L_lineFollowNormalWorked193:
;linefollow.h,151 :: 		stop();
0x0AA4	0xF000ECF7  	CALL        _stop, 0
;linefollow.h,152 :: 		sendSensorStatus();
0x0AA8	0xF001EC01  	CALL        _sendSensorStatus, 0
;linefollow.h,154 :: 		}
L_lineFollowNormalWorked194:
L_lineFollowNormalWorked192:
L_lineFollowNormalWorked188:
L_lineFollowNormalWorked184:
L_lineFollowNormalWorked180:
L_lineFollowNormalWorked176:
L_lineFollowNormalWorked172:
L_lineFollowNormalWorked168:
L_lineFollowNormalWorked164:
L_lineFollowNormalWorked160:
L_lineFollowNormalWorked156:
L_lineFollowNormalWorked152:
L_lineFollowNormalWorked148:
L_lineFollowNormalWorked144:
L_lineFollowNormalWorked140:
L_lineFollowNormalWorked136:
L_lineFollowNormalWorked132:
L_lineFollowNormalWorked128:
L_lineFollowNormalWorked124:
L_lineFollowNormalWorked120:
L_lineFollowNormalWorked116:
;linefollow.h,155 :: 		}
L_lineFollowNormalWorked112:
;linefollow.h,156 :: 		}
0x0AAC	0x0012      	RETURN      0
; end of _lineFollowNormalWorked
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0AAE	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0AB0	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0AB4	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0AB6	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0AB8	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0ABA	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x0ABC	0x0012      	RETURN      0
; end of ___CC2DW
_configure:
;configuration.h,9 :: 		void configure(){
;configuration.h,12 :: 		TRISA = 0b11111111;
0x0ABE	0x0EFF      	MOVLW       255
0x0AC0	0x6E92      	MOVWF       TRISA 
;configuration.h,13 :: 		TRISB = 0b11111111;
0x0AC2	0x0EFF      	MOVLW       255
0x0AC4	0x6E93      	MOVWF       TRISB 
;configuration.h,14 :: 		TRISC = 0b00000000;
0x0AC6	0x6A94      	CLRF        TRISC 
;configuration.h,15 :: 		TRISD = 0b11110010;
0x0AC8	0x0EF2      	MOVLW       242
0x0ACA	0x6E95      	MOVWF       TRISD 
;configuration.h,18 :: 		PORTA = 0;
0x0ACC	0x6A80      	CLRF        PORTA 
;configuration.h,19 :: 		PORTB = 0;
0x0ACE	0x6A81      	CLRF        PORTB 
;configuration.h,20 :: 		PORTC = 0;
0x0AD0	0x6A82      	CLRF        PORTC 
;configuration.h,21 :: 		PORTD = 0;
0x0AD2	0x6A83      	CLRF        PORTD 
;configuration.h,24 :: 		PWM1_Init(5000);
0x0AD4	0x80CA      	BSF         T2CON, 0, 0
0x0AD6	0x92CA      	BCF         T2CON, 1, 0
0x0AD8	0x0EF9      	MOVLW       249
0x0ADA	0x6ECB      	MOVWF       PR2, 0
0x0ADC	0xDCB7      	RCALL       _PWM1_Init
;configuration.h,25 :: 		PWM2_Init(5000);
0x0ADE	0x80CA      	BSF         T2CON, 0, 0
0x0AE0	0x92CA      	BCF         T2CON, 1, 0
0x0AE2	0x0EF9      	MOVLW       249
0x0AE4	0x6ECB      	MOVWF       PR2, 0
0x0AE6	0xDCAE      	RCALL       _PWM2_Init
;configuration.h,26 :: 		PWM1_Start();
0x0AE8	0xDCA3      	RCALL       _PWM1_Start
;configuration.h,27 :: 		PWM2_Start();
0x0AEA	0xDCA7      	RCALL       _PWM2_Start
;configuration.h,28 :: 		UART1_Init(9600);
0x0AEC	0x0E81      	MOVLW       129
0x0AEE	0x6EAF      	MOVWF       SPBRG 
0x0AF0	0x84AC      	BSF         TXSTA, 2, 0
0x0AF2	0xDCF8      	RCALL       _UART1_Init
;configuration.h,36 :: 		ADCON0 = 0b11000001;
0x0AF4	0x0EC1      	MOVLW       193
0x0AF6	0x6EC2      	MOVWF       ADCON0 
;configuration.h,37 :: 		ADCON1 = 0b00000000;
0x0AF8	0x6AC1      	CLRF        ADCON1 
;configuration.h,45 :: 		LEVEL = 0;
0x0AFA	0x0101      	MOVLB       1
0x0AFC	0x6B09      	CLRF        _LEVEL, 1
0x0AFE	0x6B0A      	CLRF        _LEVEL+1, 1
;configuration.h,46 :: 		LEVEL1_STATE  = NOT_REACHED;
0x0B00	0x6B0F      	CLRF        _LEVEL1_STATE, 1
0x0B02	0x6B10      	CLRF        _LEVEL1_STATE+1, 1
;configuration.h,47 :: 		LEVEL2_STATE  = NOT_REACHED;
0x0B04	0x6B0D      	CLRF        _LEVEL2_STATE, 1
0x0B06	0x6B0E      	CLRF        _LEVEL2_STATE+1, 1
;configuration.h,48 :: 		LEVEL3_STATE  = NOT_REACHED;
0x0B08	0x6B0B      	CLRF        _LEVEL3_STATE, 1
0x0B0A	0x6B0C      	CLRF        _LEVEL3_STATE+1, 1
;configuration.h,51 :: 		T0CON=0xC3;
0x0B0C	0x0EC3      	MOVLW       195
0x0B0E	0x6ED5      	MOVWF       T0CON 
;configuration.h,52 :: 		TMR0L=0x00;
0x0B10	0x6AD6      	CLRF        TMR0L 
;configuration.h,53 :: 		INTCON.TMR0IE=1;
0x0B12	0x8AF2      	BSF         INTCON, 5 
;configuration.h,55 :: 		T1CON=0x80;
0x0B14	0x0E80      	MOVLW       128
0x0B16	0x6ECD      	MOVWF       T1CON 
;configuration.h,56 :: 		TMR1H=0x00;
0x0B18	0x6ACF      	CLRF        TMR1H 
;configuration.h,57 :: 		TMR1L=0x00;
0x0B1A	0x6ACE      	CLRF        TMR1L 
;configuration.h,58 :: 		}
0x0B1C	0x0012      	RETURN      0
; end of _configure
_setPID:
;linefollow.h,263 :: 		void setPID(){
;linefollow.h,264 :: 		MIN_RPM = 185;       //155
0x0B1E	0x0EB9      	MOVLW       185
0x0B20	0x0100      	MOVLB       0
0x0B22	0x6FF8      	MOVWF       _MIN_RPM, 1
0x0B24	0x0E00      	MOVLW       0
0x0B26	0x6FF9      	MOVWF       _MIN_RPM+1, 1
;linefollow.h,265 :: 		MID_RPM = 200;
0x0B28	0x0EC8      	MOVLW       200
0x0B2A	0x6FF6      	MOVWF       _MID_RPM, 1
0x0B2C	0x0E00      	MOVLW       0
0x0B2E	0x6FF7      	MOVWF       _MID_RPM+1, 1
;linefollow.h,266 :: 		MAX_RPM = 255;
0x0B30	0x0EFF      	MOVLW       255
0x0B32	0x6FFA      	MOVWF       _MAX_RPM, 1
0x0B34	0x0E00      	MOVLW       0
0x0B36	0x6FFB      	MOVWF       _MAX_RPM+1, 1
;linefollow.h,267 :: 		TEST_RPM = 200;
0x0B38	0x0EC8      	MOVLW       200
0x0B3A	0x6FF4      	MOVWF       _TEST_RPM, 1
0x0B3C	0x0E00      	MOVLW       0
0x0B3E	0x6FF5      	MOVWF       _TEST_RPM+1, 1
;linefollow.h,270 :: 		SLOW_PWM = 240;
0x0B40	0x0EF0      	MOVLW       240
0x0B42	0x6FEE      	MOVWF       _SLOW_PWM, 1
0x0B44	0x0E00      	MOVLW       0
0x0B46	0x6FEF      	MOVWF       _SLOW_PWM+1, 1
;linefollow.h,271 :: 		MID_PWM = 200;
0x0B48	0x0EC8      	MOVLW       200
0x0B4A	0x6FF0      	MOVWF       _MID_PWM, 1
0x0B4C	0x0E00      	MOVLW       0
0x0B4E	0x6FF1      	MOVWF       _MID_PWM+1, 1
;linefollow.h,272 :: 		FAST_PWM = 255;
0x0B50	0x0EFF      	MOVLW       255
0x0B52	0x6FF2      	MOVWF       _FAST_PWM, 1
0x0B54	0x0E00      	MOVLW       0
0x0B56	0x6FF3      	MOVWF       _FAST_PWM+1, 1
;linefollow.h,274 :: 		Kp = 6;
0x0B58	0x0E00      	MOVLW       0
0x0B5A	0x6FFC      	MOVWF       _Kp, 1
0x0B5C	0x0E00      	MOVLW       0
0x0B5E	0x6FFD      	MOVWF       _Kp+1, 1
0x0B60	0x0E40      	MOVLW       64
0x0B62	0x6FFE      	MOVWF       _Kp+2, 1
0x0B64	0x0E81      	MOVLW       129
0x0B66	0x6FFF      	MOVWF       _Kp+3, 1
;linefollow.h,275 :: 		Ki = 0;
0x0B68	0x0101      	MOVLB       1
0x0B6A	0x6B01      	CLRF        _Ki, 1
0x0B6C	0x6B02      	CLRF        _Ki+1, 1
0x0B6E	0x6B03      	CLRF        _Ki+2, 1
0x0B70	0x6B04      	CLRF        _Ki+3, 1
;linefollow.h,276 :: 		Kd = 0;
0x0B72	0x6B05      	CLRF        _Kd, 1
0x0B74	0x6B06      	CLRF        _Kd+1, 1
0x0B76	0x6B07      	CLRF        _Kd+2, 1
0x0B78	0x6B08      	CLRF        _Kd+3, 1
;linefollow.h,278 :: 		totalError = 0;
0x0B7A	0x0100      	MOVLB       0
0x0B7C	0x6BE6      	CLRF        _totalError, 1
0x0B7E	0x6BE7      	CLRF        _totalError+1, 1
0x0B80	0x6BE8      	CLRF        _totalError+2, 1
0x0B82	0x6BE9      	CLRF        _totalError+3, 1
;linefollow.h,279 :: 		previousDeviation = 0;
0x0B84	0x6BEA      	CLRF        _previousDeviation, 1
0x0B86	0x6BEB      	CLRF        _previousDeviation+1, 1
;linefollow.h,280 :: 		PID_LeftRPM = 0;
0x0B88	0x6BEC      	CLRF        _PID_LeftRPM, 1
0x0B8A	0x6BED      	CLRF        _PID_LeftRPM+1, 1
;linefollow.h,281 :: 		PID_RightRPM = 0;
0x0B8C	0x6BE4      	CLRF        _PID_RightRPM, 1
0x0B8E	0x6BE5      	CLRF        _PID_RightRPM+1, 1
;linefollow.h,283 :: 		Pwm1_Set_Duty(MID_RPM);
0x0B90	0x0EC8      	MOVLW       200
0x0B92	0x0101      	MOVLB       1
0x0B94	0x6F2C      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0x0B96	0xF000EC36  	CALL        _PWM1_Set_Duty, 0
;linefollow.h,284 :: 		Pwm2_Set_Duty(MID_RPM);
0x0B9A	0xF12CC0F6  	MOVFF       _MID_RPM, FARG_PWM2_Set_Duty_new_duty
0x0B9E	0xF000EC6C  	CALL        _PWM2_Set_Duty, 0
;linefollow.h,285 :: 		}
0x0BA2	0x0012      	RETURN      0
; end of _setPID
_sendText:
;debug.h,105 :: 		void sendText(char* aText){
;debug.h,106 :: 		UART1_Write_Text(aText);
0x0BA4	0xF127C121  	MOVFF       FARG_sendText_aText, FARG_UART1_Write_Text_uart_text
0x0BA8	0xF128C122  	MOVFF       FARG_sendText_aText+1, FARG_UART1_Write_Text_uart_text+1
0x0BAC	0xF000ECD2  	CALL        _UART1_Write_Text, 0
;debug.h,107 :: 		}
0x0BB0	0x0012      	RETURN      0
; end of _sendText
_moveStraightSlow:
;Main 5.0V.c,102 :: 		void moveStraightSlow(){
;Main 5.0V.c,103 :: 		moveForward(205,200);
0x0BB2	0x0ECD      	MOVLW       205
0x0BB4	0x0101      	MOVLB       1
0x0BB6	0x6F23      	MOVWF       FARG_moveForward_pwmLeft, 1
0x0BB8	0x0E00      	MOVLW       0
0x0BBA	0x6F24      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x0BBC	0x0EC8      	MOVLW       200
0x0BBE	0x6F25      	MOVWF       FARG_moveForward_pwmRight, 1
0x0BC0	0x0E00      	MOVLW       0
0x0BC2	0x6F26      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x0BC4	0xDC47      	RCALL       _moveForward
;Main 5.0V.c,104 :: 		}
0x0BC6	0x0012      	RETURN      0
; end of _moveStraightSlow
_main:
0x0BC8	0xF006ECAB  	CALL        3414, 0
;Main 5.0V.c,19 :: 		void main() {
;Main 5.0V.c,20 :: 		configure();
0x0BCC	0xDF78      	RCALL       _configure
;Main 5.0V.c,21 :: 		setPID();
0x0BCE	0xDFA7      	RCALL       _setPID
;Main 5.0V.c,22 :: 		sendText("Starting...");
0x0BD0	0x0E15      	MOVLW       ?lstr34_Main_325.0V
0x0BD2	0x0101      	MOVLB       1
0x0BD4	0x6F21      	MOVWF       FARG_sendText_aText, 1
0x0BD6	0x0E00      	MOVLW       hi_addr(?lstr34_Main_325.0V)
0x0BD8	0x6F22      	MOVWF       FARG_sendText_aText+1, 1
0x0BDA	0xDFE4      	RCALL       _sendText
;Main 5.0V.c,26 :: 		LEVEL1_STATE = NOT_REACHED;
0x0BDC	0x6B0F      	CLRF        _LEVEL1_STATE, 1
0x0BDE	0x6B10      	CLRF        _LEVEL1_STATE+1, 1
;Main 5.0V.c,27 :: 		sendText("Starting Block  ");
0x0BE0	0x0E21      	MOVLW       ?lstr35_Main_325.0V
0x0BE2	0x6F21      	MOVWF       FARG_sendText_aText, 1
0x0BE4	0x0E00      	MOVLW       hi_addr(?lstr35_Main_325.0V)
0x0BE6	0x6F22      	MOVWF       FARG_sendText_aText+1, 1
0x0BE8	0xDFDD      	RCALL       _sendText
;Main 5.0V.c,28 :: 		LEVEL = 0;
0x0BEA	0x6B09      	CLRF        _LEVEL, 1
0x0BEC	0x6B0A      	CLRF        _LEVEL+1, 1
;Main 5.0V.c,30 :: 		while(isAllWhite())
L_main427:
0x0BEE	0xDCA6      	RCALL       _isAllWhite
0x0BF0	0x5000      	MOVF        R0, 0 
0x0BF2	0x1001      	IORWF       R1, 0 
0x0BF4	0xE002      	BZ          L_main428
;Main 5.0V.c,31 :: 		moveStraightSlow();
0x0BF6	0xDFDD      	RCALL       _moveStraightSlow
0x0BF8	0xD7FA      	BRA         L_main427
L_main428:
;Main 5.0V.c,32 :: 		LEVEL = 1;
0x0BFA	0x0E01      	MOVLW       1
0x0BFC	0x0101      	MOVLB       1
0x0BFE	0x6F09      	MOVWF       _LEVEL, 1
0x0C00	0x0E00      	MOVLW       0
0x0C02	0x6F0A      	MOVWF       _LEVEL+1, 1
;Main 5.0V.c,33 :: 		sendText("Level 1 Starting  ");
0x0C04	0x0E96      	MOVLW       ?lstr36_Main_325.0V
0x0C06	0x6F21      	MOVWF       FARG_sendText_aText, 1
0x0C08	0x0E00      	MOVLW       hi_addr(?lstr36_Main_325.0V)
0x0C0A	0x6F22      	MOVWF       FARG_sendText_aText+1, 1
0x0C0C	0xDFCB      	RCALL       _sendText
;Main 5.0V.c,34 :: 		LEVEL1_STATE = REACHED;
0x0C0E	0x0E01      	MOVLW       1
0x0C10	0x6F0F      	MOVWF       _LEVEL1_STATE, 1
0x0C12	0x0E00      	MOVLW       0
0x0C14	0x6F10      	MOVWF       _LEVEL1_STATE+1, 1
;Main 5.0V.c,35 :: 		stop();
0x0C16	0xF000ECF7  	CALL        _stop, 0
;Main 5.0V.c,39 :: 		moveForward(205,200);
0x0C1A	0x0ECD      	MOVLW       205
0x0C1C	0x6F23      	MOVWF       FARG_moveForward_pwmLeft, 1
0x0C1E	0x0E00      	MOVLW       0
0x0C20	0x6F24      	MOVWF       FARG_moveForward_pwmLeft+1, 1
0x0C22	0x0EC8      	MOVLW       200
0x0C24	0x6F25      	MOVWF       FARG_moveForward_pwmRight, 1
0x0C26	0x0E00      	MOVLW       0
0x0C28	0x6F26      	MOVWF       FARG_moveForward_pwmRight+1, 1
0x0C2A	0xDC14      	RCALL       _moveForward
;Main 5.0V.c,40 :: 		delay_ms(100);
0x0C2C	0x0E03      	MOVLW       3
0x0C2E	0x6E0B      	MOVWF       R11, 0
0x0C30	0x0E8A      	MOVLW       138
0x0C32	0x6E0C      	MOVWF       R12, 0
0x0C34	0x0E55      	MOVLW       85
0x0C36	0x6E0D      	MOVWF       R13, 0
L_main429:
0x0C38	0x2E0D      	DECFSZ      R13, 1, 0
0x0C3A	0xD7FE      	BRA         L_main429
0x0C3C	0x2E0C      	DECFSZ      R12, 1, 0
0x0C3E	0xD7FC      	BRA         L_main429
0x0C40	0x2E0B      	DECFSZ      R11, 1, 0
0x0C42	0xD7FA      	BRA         L_main429
0x0C44	0x0000      	NOP
0x0C46	0x0000      	NOP
;Main 5.0V.c,41 :: 		while(!isAllBlack())
L_main430:
0x0C48	0xF001ECFC  	CALL        _isAllBlack, 0
0x0C4C	0x5000      	MOVF        R0, 0 
0x0C4E	0x1001      	IORWF       R1, 0 
0x0C50	0xE102      	BNZ         L_main431
;Main 5.0V.c,42 :: 		lineFollowNormalWorked();
0x0C52	0xDC90      	RCALL       _lineFollowNormalWorked
0x0C54	0xD7F9      	BRA         L_main430
L_main431:
;Main 5.0V.c,44 :: 		stop();
0x0C56	0xF000ECF7  	CALL        _stop, 0
;Main 5.0V.c,45 :: 		sendText("  End of Level 1. Level 2 Starting  ");
0x0C5A	0x0E6F      	MOVLW       ?lstr37_Main_325.0V
0x0C5C	0x0101      	MOVLB       1
0x0C5E	0x6F21      	MOVWF       FARG_sendText_aText, 1
0x0C60	0x0E00      	MOVLW       hi_addr(?lstr37_Main_325.0V)
0x0C62	0x6F22      	MOVWF       FARG_sendText_aText+1, 1
0x0C64	0xDF9F      	RCALL       _sendText
;Main 5.0V.c,46 :: 		LEVEL1_STATE = COMPLETED;
0x0C66	0x0E02      	MOVLW       2
0x0C68	0x6F0F      	MOVWF       _LEVEL1_STATE, 1
0x0C6A	0x0E00      	MOVLW       0
0x0C6C	0x6F10      	MOVWF       _LEVEL1_STATE+1, 1
;Main 5.0V.c,47 :: 		LEVEL2_STATE = REACHED;
0x0C6E	0x0E01      	MOVLW       1
0x0C70	0x6F0D      	MOVWF       _LEVEL2_STATE, 1
0x0C72	0x0E00      	MOVLW       0
0x0C74	0x6F0E      	MOVWF       _LEVEL2_STATE+1, 1
;Main 5.0V.c,48 :: 		LEVEL = 2;
0x0C76	0x0E02      	MOVLW       2
0x0C78	0x6F09      	MOVWF       _LEVEL, 1
0x0C7A	0x0E00      	MOVLW       0
0x0C7C	0x6F0A      	MOVWF       _LEVEL+1, 1
;Main 5.0V.c,52 :: 		while(1)
L_main432:
;Main 5.0V.c,53 :: 		stop();
0x0C7E	0xF000ECF7  	CALL        _stop, 0
0x0C82	0xD7FD      	BRA         L_main432
;Main 5.0V.c,76 :: 		}
0x0C84	0xD7FF      	BRA         $+0
; end of _main
0x0D56	0xF015EE10  	LFSR        1, 21
0x0D5A	0x0ECF      	MOVLW       207
0x0D5C	0x6E00      	MOVWF       R0 
0x0D5E	0x0E01      	MOVLW       1
0x0D60	0x6E01      	MOVWF       R1 
0x0D62	0x0E86      	MOVLW       134
0x0D64	0x6EF6      	MOVWF       4086 
0x0D66	0x0E0C      	MOVLW       12
0x0D68	0x6EF7      	MOVWF       TBLPTRH 
0x0D6A	0x0E00      	MOVLW       0
0x0D6C	0x6EF8      	MOVWF       TBLPTRU 
0x0D6E	0xF005EC57  	CALL        2734, 0
0x0D72	0x0012      	RETURN      0
;Main 5.0V.c,0 :: ?ICS?lstr34_Main_325.0V
0x0C86	0x7453 ;?ICS?lstr34_Main_325.0V+0
0x0C88	0x7261 ;?ICS?lstr34_Main_325.0V+2
0x0C8A	0x6974 ;?ICS?lstr34_Main_325.0V+4
0x0C8C	0x676E ;?ICS?lstr34_Main_325.0V+6
0x0C8E	0x2E2E ;?ICS?lstr34_Main_325.0V+8
0x0C90	0x002E ;?ICS?lstr34_Main_325.0V+10
; end of ?ICS?lstr34_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr35_Main_325.0V
0x0C92	0x7453 ;?ICS?lstr35_Main_325.0V+0
0x0C94	0x7261 ;?ICS?lstr35_Main_325.0V+2
0x0C96	0x6974 ;?ICS?lstr35_Main_325.0V+4
0x0C98	0x676E ;?ICS?lstr35_Main_325.0V+6
0x0C9A	0x4220 ;?ICS?lstr35_Main_325.0V+8
0x0C9C	0x6F6C ;?ICS?lstr35_Main_325.0V+10
0x0C9E	0x6B63 ;?ICS?lstr35_Main_325.0V+12
0x0CA0	0x2020 ;?ICS?lstr35_Main_325.0V+14
0x0CA2	0x00 ;?ICS?lstr35_Main_325.0V+16
; end of ?ICS?lstr35_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr22_Main_325.0V
0x0CA3	0x3020 ;?ICS?lstr22_Main_325.0V+0
0x0CA5	0x203B ;?ICS?lstr22_Main_325.0V+2
0x0CA7	0x00 ;?ICS?lstr22_Main_325.0V+4
; end of ?ICS?lstr22_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr17_Main_325.0V
0x0CA8	0x0031 ;?ICS?lstr17_Main_325.0V+0
; end of ?ICS?lstr17_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr16_Main_325.0V
0x0CAA	0x0030 ;?ICS?lstr16_Main_325.0V+0
; end of ?ICS?lstr16_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr15_Main_325.0V
0x0CAC	0x0031 ;?ICS?lstr15_Main_325.0V+0
; end of ?ICS?lstr15_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr18_Main_325.0V
0x0CAE	0x0030 ;?ICS?lstr18_Main_325.0V+0
; end of ?ICS?lstr18_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr21_Main_325.0V
0x0CB0	0x3120 ;?ICS?lstr21_Main_325.0V+0
0x0CB2	0x203B ;?ICS?lstr21_Main_325.0V+2
0x0CB4	0x00 ;?ICS?lstr21_Main_325.0V+4
; end of ?ICS?lstr21_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr20_Main_325.0V
0x0CB5	0x0030 ;?ICS?lstr20_Main_325.0V+0
; end of ?ICS?lstr20_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr19_Main_325.0V
0x0CB7	0x0031 ;?ICS?lstr19_Main_325.0V+0
; end of ?ICS?lstr19_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr14_Main_325.0V
0x0CB9	0x0030 ;?ICS?lstr14_Main_325.0V+0
; end of ?ICS?lstr14_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr38_Main_325.0V
0x0CBB	0x2020 ;?ICS?lstr38_Main_325.0V+0
0x0CBD	0x6E45 ;?ICS?lstr38_Main_325.0V+2
0x0CBF	0x2064 ;?ICS?lstr38_Main_325.0V+4
0x0CC1	0x666F ;?ICS?lstr38_Main_325.0V+6
0x0CC3	0x4C20 ;?ICS?lstr38_Main_325.0V+8
0x0CC5	0x7665 ;?ICS?lstr38_Main_325.0V+10
0x0CC7	0x6C65 ;?ICS?lstr38_Main_325.0V+12
0x0CC9	0x3220 ;?ICS?lstr38_Main_325.0V+14
0x0CCB	0x202E ;?ICS?lstr38_Main_325.0V+16
0x0CCD	0x654C ;?ICS?lstr38_Main_325.0V+18
0x0CCF	0x6576 ;?ICS?lstr38_Main_325.0V+20
0x0CD1	0x206C ;?ICS?lstr38_Main_325.0V+22
0x0CD3	0x2033 ;?ICS?lstr38_Main_325.0V+24
0x0CD5	0x7453 ;?ICS?lstr38_Main_325.0V+26
0x0CD7	0x7261 ;?ICS?lstr38_Main_325.0V+28
0x0CD9	0x6974 ;?ICS?lstr38_Main_325.0V+30
0x0CDB	0x676E ;?ICS?lstr38_Main_325.0V+32
0x0CDD	0x2020 ;?ICS?lstr38_Main_325.0V+34
0x0CDF	0x00 ;?ICS?lstr38_Main_325.0V+36
; end of ?ICS?lstr38_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr37_Main_325.0V
0x0CE0	0x2020 ;?ICS?lstr37_Main_325.0V+0
0x0CE2	0x6E45 ;?ICS?lstr37_Main_325.0V+2
0x0CE4	0x2064 ;?ICS?lstr37_Main_325.0V+4
0x0CE6	0x666F ;?ICS?lstr37_Main_325.0V+6
0x0CE8	0x4C20 ;?ICS?lstr37_Main_325.0V+8
0x0CEA	0x7665 ;?ICS?lstr37_Main_325.0V+10
0x0CEC	0x6C65 ;?ICS?lstr37_Main_325.0V+12
0x0CEE	0x3120 ;?ICS?lstr37_Main_325.0V+14
0x0CF0	0x202E ;?ICS?lstr37_Main_325.0V+16
0x0CF2	0x654C ;?ICS?lstr37_Main_325.0V+18
0x0CF4	0x6576 ;?ICS?lstr37_Main_325.0V+20
0x0CF6	0x206C ;?ICS?lstr37_Main_325.0V+22
0x0CF8	0x2032 ;?ICS?lstr37_Main_325.0V+24
0x0CFA	0x7453 ;?ICS?lstr37_Main_325.0V+26
0x0CFC	0x7261 ;?ICS?lstr37_Main_325.0V+28
0x0CFE	0x6974 ;?ICS?lstr37_Main_325.0V+30
0x0D00	0x676E ;?ICS?lstr37_Main_325.0V+32
0x0D02	0x2020 ;?ICS?lstr37_Main_325.0V+34
0x0D04	0x00 ;?ICS?lstr37_Main_325.0V+36
; end of ?ICS?lstr37_Main_325.0V
;Main 5.0V.c,0 :: ?ICS_debugText
0x0D05	0x00A9 ;?ICS_debugText+0
; end of ?ICS_debugText
;Main 5.0V.c,0 :: ?ICS?lstr36_Main_325.0V
0x0D07	0x654C ;?ICS?lstr36_Main_325.0V+0
0x0D09	0x6576 ;?ICS?lstr36_Main_325.0V+2
0x0D0B	0x206C ;?ICS?lstr36_Main_325.0V+4
0x0D0D	0x2031 ;?ICS?lstr36_Main_325.0V+6
0x0D0F	0x7453 ;?ICS?lstr36_Main_325.0V+8
0x0D11	0x7261 ;?ICS?lstr36_Main_325.0V+10
0x0D13	0x6974 ;?ICS?lstr36_Main_325.0V+12
0x0D15	0x676E ;?ICS?lstr36_Main_325.0V+14
0x0D17	0x2020 ;?ICS?lstr36_Main_325.0V+16
0x0D19	0x00 ;?ICS?lstr36_Main_325.0V+18
; end of ?ICS?lstr36_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr2_Main_325.0V
0x0D1A	0x6F6D ;?ICS?lstr2_Main_325.0V+0
0x0D1C	0x6576 ;?ICS?lstr2_Main_325.0V+2
0x0D1E	0x6620 ;?ICS?lstr2_Main_325.0V+4
0x0D20	0x726F ;?ICS?lstr2_Main_325.0V+6
0x0D22	0x6177 ;?ICS?lstr2_Main_325.0V+8
0x0D24	0x6472 ;?ICS?lstr2_Main_325.0V+10
0x0D26	0x00 ;?ICS?lstr2_Main_325.0V+12
; end of ?ICS?lstr2_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr1_Main_325.0V
0x0D27	0x6F43 ;?ICS?lstr1_Main_325.0V+0
0x0D29	0x6E6E ;?ICS?lstr1_Main_325.0V+2
0x0D2B	0x6365 ;?ICS?lstr1_Main_325.0V+4
0x0D2D	0x6974 ;?ICS?lstr1_Main_325.0V+6
0x0D2F	0x6E6F ;?ICS?lstr1_Main_325.0V+8
0x0D31	0x4520 ;?ICS?lstr1_Main_325.0V+10
0x0D33	0x7473 ;?ICS?lstr1_Main_325.0V+12
0x0D35	0x6261 ;?ICS?lstr1_Main_325.0V+14
0x0D37	0x696C ;?ICS?lstr1_Main_325.0V+16
0x0D39	0x6873 ;?ICS?lstr1_Main_325.0V+18
0x0D3B	0x6465 ;?ICS?lstr1_Main_325.0V+20
0x0D3D	0x0021 ;?ICS?lstr1_Main_325.0V+22
; end of ?ICS?lstr1_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr3_Main_325.0V
0x0D3F	0x0031 ;?ICS?lstr3_Main_325.0V+0
; end of ?ICS?lstr3_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr10_Main_325.0V
0x0D41	0x0030 ;?ICS?lstr10_Main_325.0V+0
; end of ?ICS?lstr10_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr9_Main_325.0V
0x0D43	0x0031 ;?ICS?lstr9_Main_325.0V+0
; end of ?ICS?lstr9_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr8_Main_325.0V
0x0D45	0x0030 ;?ICS?lstr8_Main_325.0V+0
; end of ?ICS?lstr8_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr13_Main_325.0V
0x0D47	0x0031 ;?ICS?lstr13_Main_325.0V+0
; end of ?ICS?lstr13_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr12_Main_325.0V
0x0D49	0x0030 ;?ICS?lstr12_Main_325.0V+0
; end of ?ICS?lstr12_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr11_Main_325.0V
0x0D4B	0x0031 ;?ICS?lstr11_Main_325.0V+0
; end of ?ICS?lstr11_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr6_Main_325.0V
0x0D4D	0x0030 ;?ICS?lstr6_Main_325.0V+0
; end of ?ICS?lstr6_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr5_Main_325.0V
0x0D4F	0x0031 ;?ICS?lstr5_Main_325.0V+0
; end of ?ICS?lstr5_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr4_Main_325.0V
0x0D51	0x0030 ;?ICS?lstr4_Main_325.0V+0
; end of ?ICS?lstr4_Main_325.0V
;Main 5.0V.c,0 :: ?ICS?lstr7_Main_325.0V
0x0D53	0x0031 ;?ICS?lstr7_Main_325.0V+0
; end of ?ICS?lstr7_Main_325.0V
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [80]    _Mul_16x16_U
0x006C     [108]    _PWM1_Set_Duty
0x00D8     [108]    _PWM2_Set_Duty
0x0144      [12]    _motorRight_reverse
0x0150      [12]    _motorRight_foward
0x015C      [14]    _UART1_Write
0x016A      [12]    _motorLeft_reverse
0x0176      [12]    _motorLeft_foward
0x0182       [6]    _motorLeft_stop
0x0188       [6]    _motorRight_stop
0x018E      [22]    _rotateClockwise
0x01A4      [52]    _UART1_Write_Text
0x01D8      [22]    _rotateAntiClockwise
0x01EE       [6]    _stop
0x01F4      [14]    _turnRight
0x0202     [502]    _sendSensorStatus
0x03F8      [56]    _isAllBlack
0x0430      [10]    _PWM1_Start
0x043A      [10]    _PWM2_Start
0x0444       [8]    _PWM2_Init
0x044C       [8]    _PWM1_Init
0x0454      [22]    _moveForward
0x046A     [108]    _rotateByDegree
0x04D6      [14]    _turnLeft
0x04E4      [88]    _UART1_Init
0x053C      [56]    _isAllWhite
0x0574    [1338]    _lineFollowNormalWorked
0x0AAE      [16]    ___CC2DW
0x0ABE      [96]    _configure
0x0B1E     [134]    _setPID
0x0BA4      [14]    _sendText
0x0BB2      [22]    _moveStraightSlow
0x0BC8     [190]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_xCnt_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_yCnt_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [2]    __Lib_TFT__TFT_Write_Char_Return_Pos_y_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [1]    __Lib_TFT__TFT_Write_Char_Return_Pos_mask_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [12]    ?lstr34_Main_325.0V
0x0021      [17]    ?lstr35_Main_325.0V
0x0032       [5]    ?lstr22_Main_325.0V
0x0037       [2]    ?lstr17_Main_325.0V
0x0039       [2]    ?lstr16_Main_325.0V
0x003B       [2]    ?lstr15_Main_325.0V
0x003D       [2]    ?lstr18_Main_325.0V
0x003F       [5]    ?lstr21_Main_325.0V
0x0044       [2]    ?lstr20_Main_325.0V
0x0046       [2]    ?lstr19_Main_325.0V
0x0048       [2]    ?lstr14_Main_325.0V
0x004A      [37]    ?lstr38_Main_325.0V
0x006F      [37]    ?lstr37_Main_325.0V
0x0094       [2]    _debugText
0x0096      [19]    ?lstr36_Main_325.0V
0x00A9      [13]    ?lstr2_Main_325.0V
0x00B6      [24]    ?lstr1_Main_325.0V
0x00CE       [2]    ?lstr3_Main_325.0V
0x00D0       [2]    ?lstr10_Main_325.0V
0x00D2       [2]    ?lstr9_Main_325.0V
0x00D4       [2]    ?lstr8_Main_325.0V
0x00D6       [2]    ?lstr13_Main_325.0V
0x00D8       [2]    ?lstr12_Main_325.0V
0x00DA       [2]    ?lstr11_Main_325.0V
0x00DC       [2]    ?lstr6_Main_325.0V
0x00DE       [2]    ?lstr5_Main_325.0V
0x00E0       [2]    ?lstr4_Main_325.0V
0x00E2       [2]    ?lstr7_Main_325.0V
0x00E4       [2]    _PID_RightRPM
0x00E6       [4]    _totalError
0x00EA       [2]    _previousDeviation
0x00EC       [2]    _PID_LeftRPM
0x00EE       [2]    _SLOW_PWM
0x00F0       [2]    _MID_PWM
0x00F2       [2]    _FAST_PWM
0x00F4       [2]    _TEST_RPM
0x00F6       [2]    _MID_RPM
0x00F8       [2]    _MIN_RPM
0x00FA       [2]    _MAX_RPM
0x00FC       [4]    _Kp
0x0100       [1]    UART1_Write_Text_data__L0
0x0101       [4]    _Ki
0x0105       [4]    _Kd
0x0109       [2]    _LEVEL
0x010B       [2]    _LEVEL3_STATE
0x010D       [2]    _LEVEL2_STATE
0x010F       [2]    _LEVEL1_STATE
0x0111       [4]    _UART_Wr_Ptr
0x0115       [4]    _UART_Tx_Idle_Ptr
0x0119       [4]    _UART_Rd_Ptr
0x011D       [4]    _UART_Rdy_Ptr
0x0121       [2]    FARG_sendText_aText
0x0123       [2]    FARG_turnRight_pwmLeft
0x0123       [4]    FARG_PWM1_Init_PWM_Freq
0x0123       [2]    FARG_moveForward_pwmLeft
0x0123       [2]    FARG_rotateByDegree_degree
0x0123       [2]    FARG_turnLeft_pwmRight
0x0123       [4]    FARG_PWM2_Init_PWM_Freq
0x0125       [2]    FARG_moveForward_pwmRight
0x0127       [2]    FARG_UART1_Write_Text_uart_text
0x0127       [2]    FARG_rotateClockwise_pwm
0x0127       [2]    FARG_rotateAntiClockwise_pwm
0x0129       [1]    UART1_Write_Text_counter_L0
0x012A       [2]    FARG_motorRight_reverse_pwm
0x012A       [2]    FARG_motorLeft_foward_pwm
0x012A       [1]    FARG_UART1_Write_data_
0x012A       [2]    FARG_motorLeft_reverse_pwm
0x012A       [2]    FARG_motorRight_foward_pwm
0x012C       [1]    FARG_PWM2_Set_Duty_new_duty
0x012C       [1]    FARG_PWM1_Set_Duty_new_duty
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA0_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA5_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB6_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC7_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC3_bit
0x0F83       [0]    RD5_bit
0x0F83       [1]    PORTD
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD4_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    RE0_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE1_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA2_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA1_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB5_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC5_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD0_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [0]    LATE0_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA6_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB7_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD2_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    IBF_bit
0x0F96       [0]    OBF_bit
0x0F96       [1]    TRISE
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    ADIP_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    RD_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WREN_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    RCD8_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    RC8_9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    ADDEN_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    TXEN_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    RD16_T3CON_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [1]    T3CON
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    DC1B0_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    PCFG0_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    ADCS2_bit
0x0FC1       [0]    PCFG1_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    ADCS1_bit
0x0FC2       [0]    ADCS0_bit
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    PEN_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM2_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    UA_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    RD16_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    TO__bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    RI_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL2_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    PSA_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    Z_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    N_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1PTR
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0PTR
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT1IE_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [1]    INTCON
0x0FF2       [1]    INTCON1
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU1_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU2_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [1]    STKPTR
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0C86      [12]    ?ICS?lstr34_Main_325.0V
0x0C92      [17]    ?ICS?lstr35_Main_325.0V
0x0CA3       [5]    ?ICS?lstr22_Main_325.0V
0x0CA8       [2]    ?ICS?lstr17_Main_325.0V
0x0CAA       [2]    ?ICS?lstr16_Main_325.0V
0x0CAC       [2]    ?ICS?lstr15_Main_325.0V
0x0CAE       [2]    ?ICS?lstr18_Main_325.0V
0x0CB0       [5]    ?ICS?lstr21_Main_325.0V
0x0CB5       [2]    ?ICS?lstr20_Main_325.0V
0x0CB7       [2]    ?ICS?lstr19_Main_325.0V
0x0CB9       [2]    ?ICS?lstr14_Main_325.0V
0x0CBB      [37]    ?ICS?lstr38_Main_325.0V
0x0CE0      [37]    ?ICS?lstr37_Main_325.0V
0x0D05       [2]    ?ICS_debugText
0x0D07      [19]    ?ICS?lstr36_Main_325.0V
0x0D1A      [13]    ?ICS?lstr2_Main_325.0V
0x0D27      [24]    ?ICS?lstr1_Main_325.0V
0x0D3F       [2]    ?ICS?lstr3_Main_325.0V
0x0D41       [2]    ?ICS?lstr10_Main_325.0V
0x0D43       [2]    ?ICS?lstr9_Main_325.0V
0x0D45       [2]    ?ICS?lstr8_Main_325.0V
0x0D47       [2]    ?ICS?lstr13_Main_325.0V
0x0D49       [2]    ?ICS?lstr12_Main_325.0V
0x0D4B       [2]    ?ICS?lstr11_Main_325.0V
0x0D4D       [2]    ?ICS?lstr6_Main_325.0V
0x0D4F       [2]    ?ICS?lstr5_Main_325.0V
0x0D51       [2]    ?ICS?lstr4_Main_325.0V
0x0D53       [2]    ?ICS?lstr7_Main_325.0V
//** Label List: ** 
//----------------------------------------------
  L_isAllBlack0
  L_isAllBlack1
  L_isAllBlack2
  L_isAllBlack3
  L_isAllWhite4
  L_isAllWhite5
  L_isAllWhite6
  L_isAllWhite7
  L_rotateByDegree8
  L_rotateByDegree9
  L_rotateByDegree10
  L_rotateByDegree11
  L_rotateByDegree12
  L_testMotion13
  L_testMotion14
  L_testMotion15
  L_sendSensorStatus16
  L_sendSensorStatus17
  L_sendSensorStatus18
  L_sendSensorStatus19
  L_sendSensorStatus20
  L_sendSensorStatus21
  L_sendSensorStatus22
  L_sendSensorStatus23
  L_sendSensorStatus24
  L_sendSensorStatus25
  L_sendSensorStatus26
  L_sendSensorStatus27
  L_sendSensorStatus28
  L_sendSensorStatus29
  L_sendSensorStatus30
  L_sendSensorStatus31
  L_sendSensorStatus32
  L_sendSensorStatus33
  L_sendSensorStatus34
  L_sendSensorStatus35
  L_sendSensorStatus36
  L_sendSensorStatus37
  L_sendSensorStatus38
  L_sendSensorStatus39
  L_sendSensorStatus40
  L_sendSensorStatus41
  L_sendSensorStatus42
  L_sendSensorStatus43
  L_sendSensorStatus44
  L_sendSensorStatus45
  L_testPIC46
  L_testPIC47
  L_testPIC48
  L_testPIC49
  L_testPIC50
  L_testPIC51
  L_testPIC52
  L_lineFollowNormalWorked53
  L_lineFollowNormalWorked54
  L_lineFollowNormalWorked55
  L_lineFollowNormalWorked56
  L_lineFollowNormalWorked57
  L_lineFollowNormalWorked58
  L_lineFollowNormalWorked59
  L_lineFollowNormalWorked60
  L_lineFollowNormalWorked61
  L_lineFollowNormalWorked62
  L_lineFollowNormalWorked63
  L_lineFollowNormalWorked64
  L_lineFollowNormalWorked65
  L_lineFollowNormalWorked66
  L_lineFollowNormalWorked67
  L_lineFollowNormalWorked68
  L_lineFollowNormalWorked69
  L_lineFollowNormalWorked70
  L_lineFollowNormalWorked71
  L_lineFollowNormalWorked72
  L_lineFollowNormalWorked73
  L_lineFollowNormalWorked74
  L_lineFollowNormalWorked75
  L_lineFollowNormalWorked76
  L_lineFollowNormalWorked77
  L_lineFollowNormalWorked78
  L_lineFollowNormalWorked79
  L_lineFollowNormalWorked80
  L_lineFollowNormalWorked81
  L_lineFollowNormalWorked82
  L_lineFollowNormalWorked83
  L_lineFollowNormalWorked84
  L_lineFollowNormalWorked85
  L_lineFollowNormalWorked86
  L_lineFollowNormalWorked87
  L_lineFollowNormalWorked88
  L_lineFollowNormalWorked89
  L_lineFollowNormalWorked90
  L_lineFollowNormalWorked91
  L_lineFollowNormalWorked92
  L_lineFollowNormalWorked93
  L_lineFollowNormalWorked94
  L_lineFollowNormalWorked95
  L_lineFollowNormalWorked96
  L_lineFollowNormalWorked97
  L_lineFollowNormalWorked98
  L_lineFollowNormalWorked99
  L_lineFollowNormalWorked100
  L_lineFollowNormalWorked101
  L_lineFollowNormalWorked102
  L_lineFollowNormalWorked103
  L_lineFollowNormalWorked104
  L_lineFollowNormalWorked105
  L_lineFollowNormalWorked106
  L_lineFollowNormalWorked107
  L_lineFollowNormalWorked108
  L_lineFollowNormalWorked109
  L_lineFollowNormalWorked110
  L_lineFollowNormalWorked111
  L_lineFollowNormalWorked112
  L_lineFollowNormalWorked113
  L_lineFollowNormalWorked114
  L_lineFollowNormalWorked115
  L_lineFollowNormalWorked116
  L_lineFollowNormalWorked117
  L_lineFollowNormalWorked118
  L_lineFollowNormalWorked119
  L_lineFollowNormalWorked120
  L_lineFollowNormalWorked121
  L_lineFollowNormalWorked122
  L_lineFollowNormalWorked123
  L_lineFollowNormalWorked124
  L_lineFollowNormalWorked125
  L_lineFollowNormalWorked126
  L_lineFollowNormalWorked127
  L_lineFollowNormalWorked128
  L_lineFollowNormalWorked129
  L_lineFollowNormalWorked130
  L_lineFollowNormalWorked131
  L_lineFollowNormalWorked132
  L_lineFollowNormalWorked133
  L_lineFollowNormalWorked134
  L_lineFollowNormalWorked135
  L_lineFollowNormalWorked136
  L_lineFollowNormalWorked137
  L_lineFollowNormalWorked138
  L_lineFollowNormalWorked139
  L_lineFollowNormalWorked140
  L_lineFollowNormalWorked141
  L_lineFollowNormalWorked142
  L_lineFollowNormalWorked143
  L_lineFollowNormalWorked144
  L_lineFollowNormalWorked145
  L_lineFollowNormalWorked146
  L_lineFollowNormalWorked147
  L_lineFollowNormalWorked148
  L_lineFollowNormalWorked149
  L_lineFollowNormalWorked150
  L_lineFollowNormalWorked151
  L_lineFollowNormalWorked152
  L_lineFollowNormalWorked153
  L_lineFollowNormalWorked154
  L_lineFollowNormalWorked155
  L_lineFollowNormalWorked156
  L_lineFollowNormalWorked157
  L_lineFollowNormalWorked158
  L_lineFollowNormalWorked159
  L_lineFollowNormalWorked160
  L_lineFollowNormalWorked161
  L_lineFollowNormalWorked162
  L_lineFollowNormalWorked163
  L_lineFollowNormalWorked164
  L_lineFollowNormalWorked165
  L_lineFollowNormalWorked166
  L_lineFollowNormalWorked167
  L_lineFollowNormalWorked168
  L_lineFollowNormalWorked169
  L_lineFollowNormalWorked170
  L_lineFollowNormalWorked171
  L_lineFollowNormalWorked172
  L_lineFollowNormalWorked173
  L_lineFollowNormalWorked174
  L_lineFollowNormalWorked175
  L_lineFollowNormalWorked176
  L_lineFollowNormalWorked177
  L_lineFollowNormalWorked178
  L_lineFollowNormalWorked179
  L_lineFollowNormalWorked180
  L_lineFollowNormalWorked181
  L_lineFollowNormalWorked182
  L_lineFollowNormalWorked183
  L_lineFollowNormalWorked184
  L_lineFollowNormalWorked185
  L_lineFollowNormalWorked186
  L_lineFollowNormalWorked187
  L_lineFollowNormalWorked188
  L_lineFollowNormalWorked189
  L_lineFollowNormalWorked190
  L_lineFollowNormalWorked191
  L_lineFollowNormalWorked192
  L_lineFollowNormalWorked193
  L_lineFollowNormalWorked194
  L_isOnThePath195
  L_isOnThePath196
  L_isOnThePath197
  L_isOnThePath198
  L_isOnThePath199
  L_isOnThePath200
  L_isOnThePath201
  L_isOnThePath202
  L_isOnThePath203
  L_isOnThePath204
  L_isOnThePath205
  L_isOnThePath206
  L_isOnThePath207
  L_isOnThePath208
  L_lineFollow209
  L_lineFollow210
  L_lineFollow211
  L_lineFollow212
  L_lineFollow213
  L_lineFollow214
  L_lineFollow215
  L_lineFollow216
  L_lineFollow217
  L_lineFollow218
  L_lineFollow219
  L_lineFollow220
  L_lineFollow221
  L_lineFollow222
  L_lineFollow223
  L_lineFollow224
  L_lineFollow225
  L_lineFollow226
  L_lineFollow227
  L_lineFollow228
  L_lineFollow229
  L_lineFollow230
  L_lineFollow231
  L_lineFollowNormal232
  L_lineFollowNormal233
  L_lineFollowNormal234
  L_lineFollowNormal235
  L_lineFollowNormal236
  L_lineFollowNormal237
  L_lineFollowNormal238
  L_lineFollowNormal239
  L_lineFollowNormal240
  L_lineFollowNormal241
  L_lineFollowNormal242
  L_lineFollowNormal243
  L_lineFollowNormal244
  L_lineFollowNormal245
  L_lineFollowNormal246
  L_lineFollowNormal247
  L_lineFollowNormal248
  L_lineFollowNormal249
  L_lineFollowNormal250
  L_lineFollowNormal251
  L_lineFollowNormal252
  L_lineFollowNormal253
  L_lineFollowNormal254
  L_lineFollowNormal255
  L_lineFollowNormal256
  L_lineFollowNormal257
  L_lineFollowNormal258
  L_lineFollowNormal259
  L_lineFollowNormal260
  L_lineFollowNormal261
  L_lineFollowNormal262
  L_lineFollowNormal263
  L_lineFollowNormal264
  L_lineFollowNormal265
  L_lineFollowNormal266
  L_lineFollowNormal267
  L_lineFollowNormal268
  L_lineFollowNormal269
  L_lineFollowNormal270
  L_lineFollowNormal271
  L_lineFollowNormal272
  L_lineFollowNormal273
  L_lineFollowNormal274
  L_lineFollowNormal275
  L_lineFollowNormal276
  L_lineFollowNormal277
  L_lineFollowNormal278
  L_lineFollowNormal279
  L_lineFollowNormal280
  L_lineFollowNormal281
  L_lineFollowNormal282
  L_lineFollowNormal283
  L_lineFollowNormal284
  L_lineFollowNormal285
  L_lineFollowNormal286
  L_lineFollowNormal287
  L_lineFollowNormal288
  L_lineFollowPID289
  L_lineFollowPID290
  L_lineFollowPID291
  L_lineFollowPID292
  L_lineFollowPID293
  L_lineFollowPID294
  L_lineFollowPID295
  L_lineFollowPID296
  L_lineFollowPID297
  L_lineFollowPID298
  L_lineFollowPID299
  L_lineFollowPID300
  L_lineFollowPID301
  L_lineFollowPID302
  L_lineFollowPID303
  L_lineFollowPID304
  L_lineFollowPID305
  L_lineFollowPID306
  L_lineFollowPID307
  L_lineFollowPID308
  L_lineFollowPID309
  L_lineFollowPID310
  L_lineFollowPID311
  L_lineFollowPID312
  L_lineFollowPID313
  L_lineFollowPID314
  L_lineFollowPID315
  L_lineFollowPID316
  L_lineFollowPID317
  L_lineFollowPID318
  L_lineFollowPID319
  L_lineFollowPID320
  L_lineFollowPID321
  L_lineFollowPID322
  L_lineFollowPID323
  L_lineFollowPID324
  L_lineFollowPID325
  L_lineFollowPID326
  L_lineFollowPID327
  L_lineFollowPID328
  L_lineFollowPID329
  L_lineFollowPID330
  L_lineFollowPID331
  L_lineFollowPID332
  L_lineFollowPID333
  L_lineFollowPID334
  L_lineFollowPID335
  L_lineFollowPID336
  L_lineFollowPID337
  L_lineFollowPID338
  L_lineFollowPID339
  L_lineFollowPID340
  L_lineFollowPID341
  L_lineFollowPID342
  L_lineFollowPID343
  L_getDistanceIR_GP2D120344
  L_getDistanceIR_GP2D120345
  L_getDistanceIR_GP2D120346
  L_getDistanceIR_GP2D120347
  L_getDistanceIR_GP2D120348
  L_getDistanceIR_GP2D120349
  L_getDistanceIR_GP2D120350
  L_getDistanceIR_GP2D120351
  L_getDistanceIR_GP2D120352
  L_getDistanceIR_GP2D120353
  L_getDistanceIR_GP2D120354
  L_getDistanceIR_GP2D120355
  L_getDistanceIR_GP2D120356
  L_getDistanceIR_GP2D120357
  L_getDistanceIR_GP2D120358
  L_getDistanceIR_GP2D120359
  L_getDistanceIR_GP2D120360
  L_getDistanceIR_GP2D120361
  L_getDistanceIR_GP2D120362
  L_getDistanceIR_GP2D120363
  L_getDistanceIR_GP2D120364
  L_getDistanceIR_GP2D120365
  L_getDistanceIR_GP2D120366
  L_getDistanceIR_GP2D120367
  L_getDistanceIR_GP2D120368
  L_getDistanceIR_GP2D120369
  L_getDistanceIR_GP2D120370
  L_getDistanceIR_GP2D120371
  L_getDistanceIR_GP2D120372
  L_getDistanceIR_GP2D120373
  L_getDistanceIR_GP2D120374
  L_getDistanceIR_GP2D120375
  L_getDistanceIR_GP2D120376
  L_getDistanceIR_GP2D120377
  L_getDistanceIR_GP2D120378
  L_getDistanceIR_GP2D120379
  L_getDistanceIR_GP2D120380
  L_getDistanceIR_GP2D120381
  L_getDistanceIR_GP2D120382
  L_getDistanceIR_GP2D120383
  L_getDistanceIR_GP2D120384
  L_getDistanceIR_GP2D120385
  L_getDistanceIR_GP2D120386
  L_getDistanceIR_GP2D120387
  L_getDistanceIR_GP2D120388
  L_getDistanceIR_GP2D120389
  L_getDistanceIR_GP2D120390
  L_getDistanceIR_GP2D120391
  L_getDistanceIR_GP2D120392
  L_getDistanceIR_GP2D120393
  L_getDistanceIR_GP2D120394
  L_getDistanceIR_GP2D120395
  L_getDistanceIR_GP2D120396
  L_getDistanceIR_GP2D120397
  L_getDistanceIR_GP2D120398
  L_getDistanceIR_GP2D120399
  L_getDistanceIR_GP2D120400
  L_getDistanceIR_GP2D120401
  L_getDistanceIR_GP2D120402
  L_getDistanceIR_GP2D120403
  L_getDistanceIR_GP2D120404
  L_getDistanceIR_GP2D120405
  L_getDistanceIR_GP2D120406
  L_getDistanceIR_GP2D120407
  L_getDistanceIR_GP2D120408
  L_getDistanceIR_GP2D120409
  L_getDistanceIR_GP2D120410
  L_getDistanceIR_GP2D120411
  L_getSonarDistance412
  L_getSonarDistance413
  L_getSonarDistance414
  L_getSonarDistance415
  L_getSonarDistance416
  L_getSonarDistance417
  L_getDistanceSonar2418
  L_getDistanceSonar2419
  L_getDistanceSonar2420
  L_getDistanceSonar2421
  L_getDistanceSonar2422
  L_getDistanceSonar2423
  L_getDistanceSonar2424
  L_getDistanceSonar2425
  L_getDistanceSonar2426
  L_main427
  L_main428
  L_main429
  L_main430
  L_main431
  L_main432
  L_main433
  L_main434
  L_main435
  L_main436
  L_main437
  L_main438
  L_main439
  L_main440
  L_main441
  L_main442
  L_main443
  L_main444
  L_main445
  L_main446
  L_main447
  L_isRightSafe448
  L_isRightSafe449
  L_isRightSafe450
  L_isMiddleSafe451
  L_isMiddleSafe452
  L_isMiddleSafe453
  L_isLeftSafe454
  L_isLeftSafe455
  L_isLeftSafe456
  L_goThroughObstacles457
  L_goThroughObstacles458
  L_goThroughObstacles459
  L_goThroughObstacles460
  L__isAllBlack461
  L__isAllWhite462
  L__lineFollowNormalWorked463
  L__lineFollowNormalWorked464
  L__lineFollowNormalWorked465
  L__lineFollowNormalWorked466
  L__lineFollowNormalWorked467
  L__lineFollowNormalWorked468
  L__lineFollowNormalWorked469
  L__lineFollowNormalWorked470
  L__lineFollowNormalWorked471
  L__lineFollowNormalWorked472
  L__lineFollowNormalWorked473
  L__lineFollowNormalWorked474
  L__lineFollowNormalWorked475
  L__lineFollowNormalWorked476
  L__lineFollowNormalWorked477
  L__lineFollowNormalWorked478
  L__lineFollowNormalWorked479
  L__lineFollowNormalWorked480
  L__lineFollowNormalWorked481
  L__lineFollowNormalWorked482
  L__lineFollowNormalWorked483
  L__lineFollowNormalWorked484
  L__lineFollowNormalWorked485
  L__lineFollowNormalWorked486
  L__lineFollowNormalWorked487
  L__lineFollowNormalWorked488
  L__lineFollowNormalWorked489
  L__lineFollowNormalWorked490
  L__lineFollowNormalWorked491
  L__lineFollowNormalWorked492
  L__lineFollowNormalWorked493
  L__lineFollowNormalWorked494
  L__lineFollowNormalWorked495
  L__lineFollowNormalWorked496
  L__isOnThePath497
  L__isOnThePath498
  L__isOnThePath499
  L__isOnThePath500
  L__isOnThePath501
  L__isOnThePath502
  L__lineFollow503
  L__lineFollow504
  L__lineFollow505
  L__lineFollow506
  L__lineFollow507
  L__lineFollowNormal508
  L__lineFollowNormal509
  L__lineFollowNormal510
  L__lineFollowNormal511
  L__lineFollowNormal512
  L__lineFollowNormal513
  L__lineFollowNormal514
  L__lineFollowNormal515
  L__lineFollowNormal516
  L__lineFollowNormal517
  L__lineFollowNormal518
  L__lineFollowNormal519
  L__lineFollowNormal520
  L__lineFollowPID521
  L__lineFollowPID522
  L__lineFollowPID523
  L__lineFollowPID524
  L__lineFollowPID525
  L__lineFollowPID526
  L__lineFollowPID527
  L__lineFollowPID528
  L__lineFollowPID529
  L__lineFollowPID530
  L__lineFollowPID531
  L__lineFollowPID532
  L__lineFollowPID533
  L__lineFollowPID534
  L__lineFollowPID535
  L__lineFollowPID536
  L__lineFollowPID537
  L__lineFollowPID538
  L__getDistanceIR_GP2D120539
  L__getDistanceIR_GP2D120540
  L__getDistanceIR_GP2D120541
  L__getDistanceIR_GP2D120542
  L__getDistanceIR_GP2D120543
  L__getDistanceIR_GP2D120544
  L__getDistanceIR_GP2D120545
  L__getDistanceIR_GP2D120546
  L__getDistanceIR_GP2D120547
  L__getDistanceIR_GP2D120548
  L__getDistanceIR_GP2D120549
  L__getDistanceIR_GP2D120550
  L__getDistanceIR_GP2D120551
  L__getDistanceIR_GP2D120552
  L__getDistanceIR_GP2D120553
  L__getDistanceIR_GP2D120554
  L__getDistanceIR_GP2D120555
  L__main556
  L__main557
  L__main558
  L__main559
  L__isRightSafe560
  L__isMiddleSafe561
  L__isLeftSafe562
  _isAllBlack
  _isAllWhite
  _motorLeft_foward
  _motorRight_foward
  _motorLeft_reverse
  _motorRight_reverse
  _motorLeft_stop
  _motorRight_stop
  _moveForward
  _turnRight
  _turnLeft
  _rotateClockwise
  _rotateAntiClockwise
  _stop
  _rotateByDegree
  L__rotateByDegree563
  L__rotateByDegree564
  _testMotion
  _sendSensorStatus
  _sendText
  _testPIC
  L__testPIC565
  _lineFollowNormalWorked
  _isOnThePath
  _lineFollow
  _lineFollowNormal
  _setPID
  _lineFollowPID
  _configure
  _getDistanceIR_GP2D120
  L__getDistanceIR_GP2D120566
  L__getDistanceIR_GP2D120567
  L__getDistanceIR_GP2D120568
  L__getDistanceIR_GP2D120569
  L__getDistanceIR_GP2D120570
  L__getDistanceIR_GP2D120571
  L__getDistanceIR_GP2D120572
  L__getDistanceIR_GP2D120573
  L__getDistanceIR_GP2D120574
  L__getDistanceIR_GP2D120575
  L__getDistanceIR_GP2D120576
  L__getDistanceIR_GP2D120577
  L__getDistanceIR_GP2D120578
  L__getDistanceIR_GP2D120579
  L__getDistanceIR_GP2D120580
  L__getDistanceIR_GP2D120581
  L__getDistanceIR_GP2D120582
  L__getDistanceIR_GP2D120583
  L__getDistanceIR_GP2D120584
  L__getDistanceIR_GP2D120585
  L__getDistanceIR_GP2D120586
  L__getDistanceIR_GP2D120587
  L__getDistanceIR_GP2D120588
  L__getDistanceIR_GP2D120589
  L__getDistanceIR_GP2D120590
  L__getDistanceIR_GP2D120591
  L__getDistanceIR_GP2D120592
  L__getDistanceIR_GP2D120593
  L__getDistanceIR_GP2D120594
  L__getDistanceIR_GP2D120595
  L__getDistanceIR_GP2D120596
  L__getDistanceIR_GP2D120597
  L__getDistanceIR_GP2D120598
  L__getDistanceIR_GP2D120599
  _getSonarDistance
  _getDistanceSonar2
  L__getDistanceSonar2600
  L__getDistanceSonar2601
  _main
  _isRightSafe
  L__isRightSafe602
  L__isRightSafe603
  _isMiddleSafe
  L__isMiddleSafe604
  L__isMiddleSafe605
  _isLeftSafe
  L__isLeftSafe606
  L__isLeftSafe607
  _moveStraightSlow
  _goThroughObstacles
  L__goThroughObstacles608
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
